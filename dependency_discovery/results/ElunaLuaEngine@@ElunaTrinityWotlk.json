{"target": "ElunaLuaEngine@@ElunaTrinityWotlk", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pchsupport", "version": null, "version_op": null, "unified_name": "pchsupport", "extractor_type": "cmake", "context": "find_package(pchsupport)", "confidence": "High"}, {"depname": "mysql", "version": null, "version_op": null, "unified_name": "mysql", "extractor_type": "cmake", "context": "find_package(mysql)", "confidence": "High"}, {"depname": "git", "version": "1.7", "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git 1.7)", "confidence": "High"}, {"depname": "trinitycore", "version": null, "version_op": null, "unified_name": "trinitycore", "extractor_type": "cmake", "context": "project(trinitycore)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "clang_expected", "version": "7.0.0", "version_op": null, "unified_name": "clang_expected", "extractor_type": "cmake", "context": "\nset(clang_expected_version 7.0.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gcc_expected", "version": "8.3.0", "version_op": null, "unified_name": "gcc_expected", "extractor_type": "cmake", "context": "\nset(gcc_expected_version 8.3.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc_expected", "version": "19.24", "version_op": null, "unified_name": "msvc_expected", "extractor_type": "cmake", "context": "\nset(msvc_expected_version 19.24)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pchsupport", "version": null, "version_op": null, "unified_name": "pchsupport", "extractor_type": "cmake", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindPCHSupport.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mysql", "version": null, "version_op": null, "unified_name": "mysql", "extractor_type": "cmake", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mysql", "libmysql", "${lib}"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_library(mysql_library\n      names\n        mysql libmysql ${lib}\n      paths\n        \n        /usr/lib\n        /usr/lib/mysql\n        /usr/local/lib\n        /usr/local/lib/mysql\n        /usr/local/mysql/lib\n      doc \"specify the location of the mysql library here.\"\n    )"}, {"filenames": ["libmysql", "libmariadb"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_library(mysql_library\n    names\n      libmysql libmariadb\n    paths\n      \n      \"$env{programw6432}/mysql/mysql server 8.0/lib\"\n      \"$env{programw6432}/mysql/mysql server 5.7/lib\"\n      \"$env{programw6432}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programw6432}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{programw6432}/mysql/lib\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{programfiles}/mysql/lib\"\n      \"c:/mysql/lib/debug\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{systemdrive}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{systemdrive}/mysql/mysql server 5.7/lib/opt\"\n      \"c:/msys/local/include\"\n      \"$env{mysql_root}/lib\"\n      \"[hkey_local_machine\\\\software\\\\mariadb 10.4;installdir]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mariadb 10.4 (x64);installdir]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mariadb 10.5;installdir]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mariadb 10.5 (x64);installdir]/lib\"\n    doc \"specify the location of the mysql library here.\"\n  )"}, {"filenames": ["z", "zlib"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_library(mysql_extra_libraries\n    names\n      z zlib\n    paths\n      /usr/lib\n      /usr/local/lib\n    doc\n      \"if more libraries are necessary to link in a mysql client (typically zlib), specify them here.\"\n  )"}, {"filenames": ["mysql_config"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_config mysql_config\n    ${mysql_config_prefer_path}\n    /usr/local/mysql/bin/\n    /usr/local/bin/\n    /usr/bin/\n  )"}, {"filenames": ["mysql"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_executable mysql\n    paths\n        ${mysql_config_prefer_path}\n        /usr/local/mysql/bin/\n        /usr/local/bin/\n        /usr/bin/\n    doc\n        \"path to your mysql binary.\"\n    )"}, {"filenames": ["mysql"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_executable mysql\n      paths\n        \"$env{programw6432}/mysql/mysql server 8.0/bin\"\n        \"$env{programw6432}/mysql/mysql server 5.7/bin\"\n        \"$env{programw6432}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programw6432}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{programw6432}/mysql/bin\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{programfiles}/mysql/bin\"\n        \"c:/mysql/bin/debug\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{systemdrive}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{systemdrive}/mysql/mysql server 5.7/bin/opt\"\n        \"c:/msys/local/include\"\n        \"$env{mysql_root}/bin\"\n        \"[hkey_local_machine\\\\software\\\\mariadb 10.4;installdir]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mariadb 10.4 (x64);installdir]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mariadb 10.5;installdir]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mariadb 10.5 (x64);installdir]/bin\"\n     doc\n        \"path to your mysql binary.\"\n    )"}]}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindReadline.cmake", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "    set(readline_version \"${readline_major}.${readline_minor}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["readline"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindReadline.cmake", "content": "find_library(readline_library\n  names\n    readline\n  hints\n    ${readline_root_dir}\n    env readline_root_dir\n  path_suffixes\n    lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "openssl_expected", "version": "1.0", "version_op": null, "unified_name": "openssl_expected", "extractor_type": "cmake", "context": "\nset(openssl_expected_version \"1.0\")", "confidence": "Low"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "\n    set(openssl_version \"${openssl_version_major}.${openssl_version_minor}.${openssl_version_fix}${openssl_version_patch_string}\")", "confidence": "Low"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "\n    set(openssl_version \"${openssl_version_str}\")", "confidence": "Low"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_openssl quiet openssl)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libcrypto32mdd", "libcryptomdd", "libcryptod", "libeay32mdd", "libeay32d", "cryptod", "libcrypto32mdd", "libcryptomdd", "libcryptod", "libeay32mdd", "libeay32d", "cryptod"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay_debug\n      names\n        \n        \n        \n        libcrypto32mdd\n        libcryptomdd\n        libcryptod\n        libeay32mdd\n        libeay32d\n        cryptod\n        \n        \n        libcrypto32mdd\n        libcryptomdd\n        libcryptod\n        libeay32mdd\n        libeay32d\n        cryptod\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        ${_openssl_path_suffixes}\n    )"}, {"filenames": ["libcrypto32md", "libcryptomd", "libcrypto", "libeay32md", "libeay32", "crypto", "libcrypto32md", "libcryptomd", "libcrypto", "libeay32md", "libeay32", "crypto"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay_release\n      names\n        \n        \n        \n        libcrypto32md\n        libcryptomd\n        libcrypto\n        libeay32md\n        libeay32\n        crypto\n        \n        \n        libcrypto32md\n        libcryptomd\n        libcrypto\n        libeay32md\n        libeay32\n        crypto\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        ${_openssl_path_suffixes}\n    )"}, {"filenames": ["libssl32mdd", "libsslmdd", "libssld", "ssleay32mdd", "ssleay32d", "ssld", "libssl32mdd", "libsslmdd", "libssld", "ssleay32mdd", "ssleay32d", "ssld"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay_debug\n      names\n        \n        \n        \n        libssl32mdd\n        libsslmdd\n        libssld\n        ssleay32mdd\n        ssleay32d\n        ssld\n        \n        \n        libssl32mdd\n        libsslmdd\n        libssld\n        ssleay32mdd\n        ssleay32d\n        ssld\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        ${_openssl_path_suffixes}\n    )"}, {"filenames": ["libssl32md", "libsslmd", "libssl", "ssleay32md", "ssleay32", "ssl", "libssl32md", "libsslmd", "libssl", "ssleay32md", "ssleay32", "ssl"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay_release\n      names\n        \n        \n        \n        libssl32md\n        libsslmd\n        libssl\n        ssleay32md\n        ssleay32\n        ssl\n        \n        \n        libssl32md\n        libsslmd\n        libssl\n        ssleay32md\n        ssleay32\n        ssl\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        ${_openssl_path_suffixes}\n    )"}, {"filenames": ["${lib_eay_names}"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay\n      names\n        ${lib_eay_names}\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        \"lib/mingw\"\n        \"lib\"\n    )"}, {"filenames": ["${ssl_eay_names}"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay\n      names\n        ${ssl_eay_names}\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      path_suffixes\n        \"lib/mingw\"\n        \"lib\"\n    )"}, {"filenames": ["libcrypto", "libeay32"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay\n      names\n        libcrypto\n        libeay32\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      hints\n        ${_openssl_libdir}\n      path_suffixes\n        lib\n    )"}, {"filenames": ["libssl", "ssleay32"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay\n      names\n        libssl\n        ssleay32\n      names_per_dir\n      ${_openssl_root_hints_and_paths}\n      hints\n        ${_openssl_libdir}\n      path_suffixes\n        lib\n    )"}, {"filenames": ["ssl", "ssleay32", "ssleay32md"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_library\n    names\n      ssl\n      ssleay32\n      ssleay32md\n    names_per_dir\n    ${_openssl_root_hints_and_paths}\n    hints\n      ${_openssl_libdir}\n      ${_openssl_library_dirs}\n    path_suffixes\n      lib\n  )"}, {"filenames": ["crypto"], "version": "", "fromfile": "ElunaLuaEngine@@ElunaTrinityWotlk/cmake/macros/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_library\n    names\n      crypto\n    names_per_dir\n    ${_openssl_root_hints_and_paths}\n    hints\n      ${_openssl_libdir}\n      ${_openssl_library_dirs}\n    path_suffixes\n      lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required components crypto ssl)", "confidence": "High"}, {"depname": "openssl_expected", "version": "1.0.0", "version_op": null, "unified_name": "openssl_expected", "extractor_type": "cmake", "context": "set(openssl_expected_version 1.0.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libmpq", "version": "0.4.2", "version_op": null, "unified_name": "mpq", "extractor_type": "autoconf", "context": "AC_INIT(libmpq, 0.4.2, [mbroemme@libmpq.org], [libmpq])", "confidence": ""}, {"depname": "z", "version": null, "version_op": null, "unified_name": "z", "extractor_type": "autoconf", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/dep/libmpq/configure.ac", "confidence": "High"}, {"depname": "bz2", "version": null, "version_op": null, "unified_name": "bz2", "extractor_type": "autoconf", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/dep/libmpq/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "debhelper", "version": "=7", "version_op": null, "unified_name": "debhelper", "extractor_type": "control", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/dep/libmpq/debian/control", "confidence": "High"}, {"depname": "autotools-dev", "version": "", "version_op": null, "unified_name": "autotools", "extractor_type": "control", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/dep/libmpq/debian/control", "confidence": "High"}, {"depname": "libbz2-dev", "version": "", "version_op": null, "unified_name": "bz2", "extractor_type": "control", "context": "ElunaLuaEngine@@ElunaTrinityWotlk/dep/libmpq/debian/control", "confidence": "High"}], "type": "control"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "find_package(readline required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "find_package(bzip2 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": "1.71", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.71 required system filesystem program_options iostreams regex)", "confidence": "High"}, {"depname": "boost_required", "version": "1.73", "version_op": null, "unified_name": "boost_required", "extractor_type": "cmake", "context": "  set(boost_required_version 1.73)", "confidence": "Low"}, {"depname": "boost_required", "version": "1.71", "version_op": null, "unified_name": "boost_required", "extractor_type": "cmake", "context": "  set(boost_required_version 1.71)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cotire_cmake_module", "version": "1.7.10", "version_op": null, "unified_name": "cotire_cmake_module", "extractor_type": "cmake", "context": "set (cotire_cmake_module_version \"1.7.10\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}