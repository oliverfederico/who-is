{"target": "PaddlePaddle@@Anakin", "extractors": [{"deps": [{"depname": "anakin", "version": "1.1.0", "version_op": null, "unified_name": "anakin", "extractor_type": "cmake", "context": "project(anakin c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "_modules", "version": null, "version_op": null, "unified_name": "_modules", "extractor_type": "cmake", "context": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv quiet components core highgui imgproc imgcodecs)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv quiet components core highgui imgproc)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv quiet components core highgui imgproc imgcodecs)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv quiet components core highgui imgproc)", "confidence": "High"}, {"depname": "boost", "version": "1.59.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.59.0 quiet components thread variant)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "miopengemm", "version": null, "version_op": null, "unified_name": "miopengemm", "extractor_type": "cmake", "context": "find_package(miopengemm required paths /opt/rocm)", "confidence": "High"}, {"depname": "nanopb", "version": "0.3.9.1", "version_op": null, "unified_name": "nanopb", "extractor_type": "cmake", "context": "    set(nanopb_version \"0.3.9.1\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(rtlib rt)"}, {"filenames": ["dl"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(dllib dl)"}, {"filenames": ["libopencl.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(ocl_libraries names libopencl.so paths ${ocl_root} ${ocl_root}/lib/x86_64 $env{ocl_root}/lib $env{ocl_root}/lib/x86_64)"}, {"filenames": ["${__mkl_lib}"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(${__mkl_lib_upper}_library names ${__mkl_lib}\n      \t\t\t\t\t\t\t\t\t\t\tpaths ${mkl_root} ${mkl_include_dir}/..\n      \t\t\t\t\t\t\t\t\t\t\tpath_suffixes ${__path_suffixes}\n      \t\t\t\t\t\t\t\t\t\t\tdoc \"the path to intel(r) mkl ${__mkl_lib} library\")"}, {"filenames": ["${__iomp5_libs}"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(mkl_rtl_library names ${__iomp5_libs}\n     \t\t\t\t\t\t\t\t paths ${intel_root}/compiler ${mkl_root} ${mkl_include_dir}/.. ${mkl_root}/../compiler\n     \t\t\t\t\t\t\t\t path_suffixes ${__path_suffixes}\n     \t\t\t\t\t\t\t\t doc \"path to path to openmp runtime library\")"}, {"filenames": ["libglog.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(glog_library names libglog.a\n                                   paths ${glog_include_dir}/../\n                                   doc \"library path for glog.\")"}, {"filenames": ["libgtest.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(gtest_library names libgtest.a\n                                   paths ${gtest_include_dir}/../../\n                                   doc \"library path for gtest.\")"}, {"filenames": ["libgflags.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(gflags_library names libgflags.so\n                                   paths ${gflags_root}/lib\n                                   $env{gflags_root}/lib\n                                   doc \"library path for gflags.\")"}, {"filenames": ["log"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library( \n\t\t\t\tlog-lib\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tlog )"}, {"filenames": ["protobuf"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(protobuf_library protobuf paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["protobuf-lite"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(protobuf_lite_library protobuf-lite paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(protobuf_protoc_library protoc paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["libprotobuf.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(protobuf_library libprotobuf.a paths ${protobuf_root}/lib\n                                                 $env{protobuf_root}/lib no_default_path)"}, {"filenames": ["libbrpc.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(rpc_library names libbrpc.so\n                                 paths ${baidu_rpc_root}/lib $env{baidu_rpc_root}/lib\n                                 doc \"library path for baidu rpc.\")"}, {"filenames": ["libbrpc.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(rpc_library names libbrpc.a\n                                 paths ${baidu_rpc_root}/lib $env{baidu_rpc_root}/lib\n                                 doc \"library path for baidu rpc.\")"}, {"filenames": ["libssl.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(ssl_lib names libssl.so paths ${gcc_path}/../lib/)"}, {"filenames": ["libcrypto.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(crypto_lib names libcrypto.so paths ${gcc_path}/../lib/)"}, {"filenames": ["libleveldb.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(leveldb_lib names libleveldb.so paths /home/chaowen/.jumbo/lib/ no_default_path)"}, {"filenames": ["libz.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_library(z_lib names libz.so paths ${gcc_path}/../lib/)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_program(protobuf_protoc_executable protoc)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_program(protobuf_protoc_executable protoc)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_program(protobuf_protoc_executable protoc paths ${protobuf_root}/bin no_default_path)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/find_modules.cmake", "content": "find_program(protobuf_protoc_executable protoc paths ${protobuf_root}/bin\n                                                 $env{protobuf_root}/bin no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "7.5", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 7.5 required)", "confidence": "High"}, {"depname": "cudnn", "version": null, "version_op": null, "unified_name": "cudnn", "extractor_type": "cmake", "context": "\t\tset(cudnn_version ${cudnn_version_major}.${cudnn_version_minor}.${cudnn_version_patch})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["libcudnn.dylib"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/cuda.cmake", "content": "find_library(cudnn_library names libcudnn.dylib\n\t\t\t\t\tpaths ${cudnn_include_dir}/../lib/ ${cudnn_include_dir}/\n\t\t\t\t\tdoc \"library path for cudnn.\")"}, {"filenames": ["libcudnn.so"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/cuda.cmake", "content": "find_library(cudnn_library names libcudnn.so\n                               paths ${cudnn_include_dir}/../lib64/ ${cudnn_include_dir}/\n                               doc \"library path for cudnn.\")"}, {"filenames": ["libcudnn_static.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/cuda.cmake", "content": "find_library(cudnn_library names libcudnn_static.a\n\t\t\t\t\tpaths ${cudnn_include_dir}/../lib/\n\t\t\t\t\tdoc \"library path for cudnn.\")"}, {"filenames": ["libcudnn_static.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/cuda.cmake", "content": "find_library(cudnn_library names libcudnn_static.a\n\t\t\t\t\tpaths ${cudnn_include_dir}/../lib64/\n\t\t\t\t\tdoc \"library path for cudnn.\")"}, {"filenames": ["libcudart_static.a"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/cuda.cmake", "content": "find_library(cuda_library names libcudart_static.a\n                                   paths ${cuda_include_dirs}/../lib64/\n                                   doc \"library path for cuda.\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package( ${argn} )", "confidence": "High"}, {"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set( cmake_system_version 1 )", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["\"${_ndk_ccache}\""], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/android/android.toolchain.cmake", "content": "find_program( ndk_ccache \"${_ndk_ccache}\" doc \"the path to ccache binary\")"}, {"filenames": ["install_name_tool"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/android/android.toolchain.cmake", "content": "find_program( cmake_install_name_tool names install_name_tool )"}]}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "PaddlePaddle@@Anakin/cmake/ios/ios.toolchain.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["log"], "version": "", "fromfile": "PaddlePaddle@@Anakin/examples/CMakeLists.txt", "content": "find_library(log-lib log)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}