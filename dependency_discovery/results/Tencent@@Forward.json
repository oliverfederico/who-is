{"target": "Tencent@@Forward", "extractors": [{"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "tensorrt", "version": null, "version_op": null, "unified_name": "tensorrt", "extractor_type": "cmake", "context": "find_package(tensorrt)", "confidence": "High"}, {"depname": "torch", "version": null, "version_op": null, "unified_name": "torch", "extractor_type": "cmake", "context": "find_package(torch)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv)", "confidence": "High"}, {"depname": "forward", "version": null, "version_op": null, "unified_name": "forward", "extractor_type": "cmake", "context": "project(forward languages c cxx cuda)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["_pywrap_tensorflow_internal.so"], "version": "", "fromfile": "Tencent@@Forward/CMakeLists.txt", "content": "find_library(py_tensorflow_lib names _pywrap_tensorflow_internal.so paths \"${tf_pylib_dir}\" \"${tf2_pylib_dir}\")"}]}, {"deps": [{"depname": "tensorrt", "version": null, "version_op": null, "unified_name": "tensorrt", "extractor_type": "cmake", "context": "Tencent@@Forward/cmake/FindTensorRT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvinfer", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvinfer names nvinfer ${${search}} path_suffixes lib)"}, {"filenames": ["nvinfer_plugin", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvinfer_pligin names nvinfer_plugin ${${search}} path_suffixes lib)"}, {"filenames": ["nvonnxparser", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvonnxparser names nvonnxparser ${${search}} path_suffixes lib)"}, {"filenames": ["nvparsers", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvparsers names nvparsers ${${search}} path_suffixes lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "gitsubmod"}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "  project(pybind11)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonlibsnew", "version": "11", "version_op": null, "unified_name": "pythonlibsnew", "extractor_type": "cmake", "context": "find_package(pythonlibsnew ${pybind11_python_version} required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonlibsnew", "version": null, "version_op": null, "unified_name": "pythonlibsnew", "extractor_type": "cmake", "context": "Tencent@@Forward/source/third_party/pybind11/tools/FindPythonLibsNew.cmake", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp ${pythonlibsnew_find_version} required)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp ${pythonlibsnew_find_version})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"python${python_library_suffix}\""], "version": "", "fromfile": "Tencent@@Forward/source/third_party/pybind11/tools/FindPythonLibsNew.cmake", "content": "find_library(python_library\n        names \"python${python_library_suffix}\"\n        paths ${python_libdir}\n        no_default_path)"}]}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "Tencent@@Forward/source/third_party/pybind11/tools/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "catch", "version": null, "version_op": null, "unified_name": "catch", "extractor_type": "cmake", "context": "Tencent@@Forward/source/third_party/pybind11/tools/FindCatch.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 required config)", "confidence": "High"}, {"depname": "eigen3", "version": "3.2.7", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.2.7 quiet config)", "confidence": "High"}, {"depname": "eigen3", "version": "3.2.7", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.2.7 quiet)", "confidence": "High"}, {"depname": "boost", "version": "1.56", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.56)", "confidence": "High"}, {"depname": "pybind11_tests", "version": null, "version_op": null, "unified_name": "pybind11_tests", "extractor_type": "cmake", "context": "    project(pybind11_tests cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "test_subdirectory_target", "version": null, "version_op": null, "unified_name": "test_subdirectory_target", "extractor_type": "cmake", "context": "project(test_subdirectory_target cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config required)", "confidence": "High"}, {"depname": "test_installed_target", "version": null, "version_op": null, "unified_name": "test_installed_target", "extractor_type": "cmake", "context": "project(test_installed_target cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "test_subdirectory_embed", "version": null, "version_op": null, "unified_name": "test_subdirectory_embed", "extractor_type": "cmake", "context": "project(test_subdirectory_embed cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config required)", "confidence": "High"}, {"depname": "test_installed_module", "version": null, "version_op": null, "unified_name": "test_installed_module", "extractor_type": "cmake", "context": "project(test_installed_module cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "test_subdirectory_module", "version": null, "version_op": null, "unified_name": "test_subdirectory_module", "extractor_type": "cmake", "context": "project(test_subdirectory_module cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config required)", "confidence": "High"}, {"depname": "test_installed_embed", "version": null, "version_op": null, "unified_name": "test_installed_embed", "extractor_type": "cmake", "context": "project(test_installed_embed cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "catch", "version": "1.9.3", "version_op": null, "unified_name": "catch", "extractor_type": "cmake", "context": "find_package(catch 1.9.3)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "nlohmann_json", "version": "3.7.3", "version_op": null, "unified_name": "nlohmann_json", "extractor_type": "cmake", "context": "project(nlohmann_json version 3.7.3 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "meson"}, {"deps": [{"depname": "elpp_major", "version": "9", "version_op": null, "unified_name": "elpp", "extractor_type": "cmake", "context": "set(elpp_major_version \"9\")", "confidence": "Low"}, {"depname": "elpp_minor", "version": "89", "version_op": null, "unified_name": "elpp", "extractor_type": "cmake", "context": "set(elpp_minor_version \"89\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package (zlib names ${zlib_package_name}${hdf_package_ext} components static shared)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package (zlib)", "confidence": "High"}, {"depname": "szip", "version": null, "version_op": null, "unified_name": "szip", "extractor_type": "cmake", "context": "find_package (szip names ${szip_package_name}${hdf_package_ext} components static shared)", "confidence": "High"}, {"depname": "szip", "version": null, "version_op": null, "unified_name": "szip", "extractor_type": "cmake", "context": "find_package (szip)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": "5", "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "    set (cpack_package_version \"${hdf5_package_version}\")", "confidence": "Low"}, {"depname": "cpack_package", "version": "5", "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "    set (cpack_package_version \"${hdf5_package_version_string}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["nsis.exe"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/CMakeInstallation.cmake", "content": "find_program (nsis_executable nsis.exe paths \"$env{programfiles}\\\\nsis\" \"$env{programfiles${pf_env_ext}}\\\\nsis\")"}, {"filenames": ["candle"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/CMakeInstallation.cmake", "content": "find_program (wix_executable candle  paths \"${cpack_wix_root}/bin\")"}]}, {"deps": [{"depname": "jni", "version": null, "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "find_package(jni required)", "confidence": "High"}, {"depname": "hdfs", "version": null, "version_op": null, "unified_name": "hdfs", "extractor_type": "cmake", "context": "find_package(hdfs required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads required)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "project (hdf5 c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libhdf", "version": "5", "version_op": null, "unified_name": "hdf", "extractor_type": "cmake", "context": "      set (libhdf_version ${hdf5_package_version_major})", "confidence": "Low"}, {"depname": "libhdf", "version": "5", "version_op": null, "unified_name": "hdf", "extractor_type": "cmake", "context": "      set (libhdf_version ${hdf5_${libpackage}_package_soversion_major})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["hostname"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/CTestScript.cmake", "content": "find_program (hostname_cmd names hostname)"}, {"filenames": ["uname"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/CTestScript.cmake", "content": "find_program (uname names uname)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists (rt clock_gettime \"\" clock_gettime_in_librt)", "confidence": "High"}, {"depname": "posix4", "version": null, "version_op": null, "unified_name": "posix4", "extractor_type": "cmake", "context": "check_library_exists (posix4 clock_gettime \"\" clock_gettime_in_libposix4)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hdfs", "version": null, "version_op": null, "unified_name": "hdfs", "extractor_type": "cmake", "context": "Tencent@@Forward/source/third_party/hdf5/config/cmake/FindHDFS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hdfs"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/FindHDFS.cmake", "content": "find_library(hdfs_lib names hdfs paths\n  ${hdfs_lib_paths}\n  \n  no_default_path\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ctest_source", "version": "1.12.0", "version_op": null, "unified_name": "ctest_source", "extractor_type": "cmake", "context": "\nset (ctest_source_version \"1.12.0\")", "confidence": "Low"}, {"depname": "site_os", "version": "10", "version_op": null, "unified_name": "site_os", "extractor_type": "cmake", "context": "    set (site_os_version \"win10\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "16", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"16\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "16", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"16\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "15", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"15\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "15", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"15\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "14", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"14\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "14", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"14\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "12", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"12\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "12", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"12\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "11", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"11\")", "confidence": "Low"}, {"depname": "site_compiler", "version": "11", "version_op": null, "unified_name": "site_compiler", "extractor_type": "cmake", "context": "      set (site_compiler_version \"11\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "subversion", "version": null, "version_op": null, "unified_name": "subversion", "extractor_type": "cmake", "context": "find_package (subversion)", "confidence": "High"}, {"depname": "ctest_repo", "version": null, "version_op": null, "unified_name": "ctest_repo", "extractor_type": "cmake", "context": "        set (ctest_repo_version \"head\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["hostname"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/scripts/CTestScript.cmake", "content": "find_program (hostname_cmd names hostname)"}, {"filenames": ["uname"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/scripts/CTestScript.cmake", "content": "find_program (uname names uname)"}, {"filenames": ["git", "git.cmd"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/scripts/CTestScript.cmake", "content": "find_program (ctest_git_command names git git.cmd)"}, {"filenames": ["valgrind"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/scripts/CTestScript.cmake", "content": "find_program(ctest_memorycheck_command names valgrind)"}, {"filenames": ["gcov"], "version": "", "fromfile": "Tencent@@Forward/source/third_party/hdf5/config/cmake/scripts/CTestScript.cmake", "content": "find_program (ctest_coverage_command names gcov)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "\"${library};\"", "version": null, "version_op": null, "unified_name": "\"${library};\"", "extractor_type": "cmake", "context": "check_library_exists (\"${library};\" ${symbol} \"\" ${variable})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "hdf5_src", "version": null, "version_op": null, "unified_name": "hdf5_src", "extractor_type": "cmake", "context": "project (hdf5_src c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "hdf5_cpp", "version": null, "version_op": null, "unified_name": "hdf5_cpp", "extractor_type": "cmake", "context": "project (hdf5_cpp cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hdf5_cpp_src", "version": null, "version_op": null, "unified_name": "hdf5_cpp_src", "extractor_type": "cmake", "context": "project (hdf5_cpp_src cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "tensorrt", "version": null, "version_op": null, "unified_name": "tensorrt", "extractor_type": "cmake", "context": "find_package(tensorrt)", "confidence": "High"}, {"depname": "torch", "version": null, "version_op": null, "unified_name": "torch", "extractor_type": "cmake", "context": "find_package(torch)", "confidence": "High"}, {"depname": "forward", "version": null, "version_op": null, "unified_name": "forward", "extractor_type": "cmake", "context": "project(forward languages c cxx cuda)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["trt_engine"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/CMakeLists.txt", "content": "find_library(fwd_engine trt_engine hints ${project_source_dir}/libs)"}, {"filenames": ["fwd_torch"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/CMakeLists.txt", "content": "find_library(fwd_torch fwd_torch hints ${project_source_dir}/libs)"}, {"filenames": ["tensorflow"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/CMakeLists.txt", "content": "find_library(tf_library tensorflow hints ${tensorflow_root}/lib)"}, {"filenames": ["fwd_tf"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/CMakeLists.txt", "content": "find_library(fwd_tf fwd_tf hints ${project_source_dir}/libs)"}, {"filenames": ["fwd_onnx"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/CMakeLists.txt", "content": "find_library(fwd_onnx fwd_onnx hints ${project_source_dir}/libs)"}]}, {"deps": [{"depname": "tensorrt", "version": null, "version_op": null, "unified_name": "tensorrt", "extractor_type": "cmake", "context": "Tencent@@Forward/demo/fwd_cpp/cmake/FindTensorRT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvinfer", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvinfer names nvinfer ${${search}} path_suffixes lib)"}, {"filenames": ["nvinfer_plugin", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvinfer_pligin names nvinfer_plugin ${${search}} path_suffixes lib)"}, {"filenames": ["nvonnxparser", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvonnxparser names nvonnxparser ${${search}} path_suffixes lib)"}, {"filenames": ["nvparsers", "${${search}}"], "version": "", "fromfile": "Tencent@@Forward/demo/fwd_cpp/cmake/FindTensorRT.cmake", "content": "find_library(tensorrt_library_nvparsers names nvparsers ${${search}} path_suffixes lib)"}]}]}