{"target": "cinemast@@libjson-rpc-cpp", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "libjson", "version": null, "version_op": null, "unified_name": "json", "extractor_type": "cmake", "context": "project(libjson-rpc-cpp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "argtable", "version": null, "version_op": null, "unified_name": "argtable", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindArgtable.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["argtable2"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindArgtable.cmake", "content": "find_library (\n    argtable_library\n    names argtable2\n    doc \"argtable library\"\n)"}, {"filenames": ["argtable2d"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindArgtable.cmake", "content": "find_library(\n        argtable_library_debug\n        names argtable2d\n        doc \"argtable debug library\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["i586-mingw32msvc-windres"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/cross-mingw32-linux.cmake", "content": "find_program(cmake_rc_compiler names i586-mingw32msvc-windres)"}, {"filenames": ["i586-mingw32msvc-gcc"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/cross-mingw32-linux.cmake", "content": "find_program(cmake_c_compiler names i586-mingw32msvc-gcc)"}, {"filenames": ["i586-mingw32msvc-g++"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/cross-mingw32-linux.cmake", "content": "find_program(cmake_cxx_compiler names i586-mingw32msvc-g++)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "find_package(jsoncpp required)", "confidence": "High"}, {"depname": "argtable", "version": null, "version_op": null, "unified_name": "argtable", "extractor_type": "cmake", "context": "find_package(argtable required)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "mhd", "version": null, "version_op": null, "unified_name": "mhd", "extractor_type": "cmake", "context": "find_package(mhd required)", "confidence": "High"}, {"depname": "hiredis", "version": null, "version_op": null, "unified_name": "hiredis", "extractor_type": "cmake", "context": "find_package(hiredis required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hiredis", "version": null, "version_op": null, "unified_name": "hiredis", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindHiredis.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hiredis", "libhiredis"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindHiredis.cmake", "content": "find_library(\n    hiredis_library\n    names hiredis libhiredis\n    doc \"hiredis library\"\n)"}]}, {"deps": [{"depname": "mhd", "version": null, "version_op": null, "unified_name": "mhd", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindMHD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["microhttpd", "microhttpd-10", "libmicrohttpd", "libmicrohttpd-dll"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindMHD.cmake", "content": "find_library(\n    mhd_library\n    names microhttpd microhttpd-10 libmicrohttpd libmicrohttpd-dll\n    doc \"microhttpd library\"\n)"}, {"filenames": ["microhttpd_d", "microhttpd-10_d", "libmicrohttpd_d", "libmicrohttpd-dll_d"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindMHD.cmake", "content": "find_library(\n        mhd_library_debug\n        names microhttpd_d microhttpd-10_d libmicrohttpd_d libmicrohttpd-dll_d\n        doc \"mhd debug library\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "socket", "version": null, "version_op": null, "unified_name": "socket", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindSocket.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindJsoncpp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jsoncpp"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindJsoncpp.cmake", "content": "find_library(\n    jsoncpp_library\n    names jsoncpp\n    doc \"jsoncpp library\"\n)"}, {"filenames": ["jsoncppd"], "version": "", "fromfile": "cinemast@@libjson-rpc-cpp/cmake/FindJsoncpp.cmake", "content": "find_library(\n\t\tjsoncpp_library_debug\n\t\tnames jsoncppd\n\t\tdoc \"jsoncpp debug library\"\n\t)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "hunter_gate", "version": null, "version_op": null, "unified_name": "hunter_gate", "extractor_type": "cmake", "context": "      set(hunter_gate_version \"unknown\")", "confidence": "Low"}, {"depname": "hunter_gate", "version": null, "version_op": null, "unified_name": "hunter_gate", "extractor_type": "cmake", "context": "      set(hunter_gate_version \"xxxxxxxxxx\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "cinemast@@libjson-rpc-cpp/cmake/FindThreads.cmake", "confidence": "High"}, {"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "check_library_exists(pthreads pthread_create \"\" cmake_have_pthreads_create)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_create \"\" cmake_have_pthread_create)", "confidence": "High"}, {"depname": "thread", "version": null, "version_op": null, "unified_name": "thread", "extractor_type": "cmake", "context": "check_library_exists(thread thr_create \"\" cmake_have_thr_create)", "confidence": "High"}, {"depname": "cma", "version": null, "version_op": null, "unified_name": "cma", "extractor_type": "cmake", "context": "check_library_exists(cma pthread_attr_create \"\" cmake_have_hp_cma)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}