{"target": "HaxeFoundation@@neko", "extractors": [{"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "boehmgc", "version": null, "version_op": null, "unified_name": "boehmgc", "extractor_type": "cmake", "context": "find_package(boehmgc required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "neko", "version": null, "version_op": null, "unified_name": "neko", "extractor_type": "cmake", "context": "project(neko c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${${prefix}_args}", "version": null, "version_op": null, "unified_name": "${${prefix}_args}", "extractor_type": "cmake", "context": "find_package(${${prefix}_args})", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "${pkgargs}", "version": null, "version_op": null, "unified_name": "${pkgargs}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(${prefix}_pkgconf ${pkgargs})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libraryargs}"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/LibFindMacros.cmake", "content": "find_library(${prefix}_library names ${libraryargs} hints ${${prefix}_pkgconf_library_dirs})"}]}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindSQLite3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sqlite3", "sqlite"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindSQLite3.cmake", "content": "find_library(sqlite3_library names sqlite3 sqlite)"}]}, {"deps": [{"depname": "apache", "version": null, "version_op": null, "unified_name": "apache", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindAPACHE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${httpd_names}"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindAPACHE.cmake", "content": "find_library(httpd_libraries\n      names ${httpd_names}\n      paths /usr/lib /usr/local/lib\n)"}, {"filenames": ["apxs", "apxs2"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindAPACHE.cmake", "content": "find_program(apxs_bin names apxs apxs2\n             path_suffixes httpd apache apache2\n   )"}]}, {"deps": [{"depname": "gtk3", "version": null, "version_op": null, "unified_name": "gtk3", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gdk_pixbuf-3.0"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gdk_pixbuf_3_library names gdk_pixbuf-3.0\n                                      paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/local/lib /usr/lib\n                                      env lib\n                                      doc \"gdk_pixbuf library to link with\"\n                                      no_system_environment_path)"}, {"filenames": ["gdk-win32-3.0", "gdk-x11-3.0"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gdk_3_library names gdk-win32-3.0 gdk-x11-3.0\n                                     paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/lib /usr/local/lib\n                                     env lib\n                                     doc \"gdk3 library to link with\"\n                                     no_system_environment_path)"}, {"filenames": ["gtk-win32-3.0", "gtk-x11-3.0"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gtk_3_library names gtk-win32-3.0 gtk-x11-3.0\n                                     paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/lib /usr/local/lib\n                                     env lib\n                                     doc \"gtk3 library to link with\"\n                                     no_system_environment_path)"}, {"filenames": ["libgdk_pixbuf-3.0.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gdk_pixbuf_3_static_library names libgdk_pixbuf-3.0.a\n                                      paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/local/lib /usr/lib\n                                      env lib\n                                      doc \"gdk_pixbuf library to link with\"\n                                      no_system_environment_path)"}, {"filenames": ["libgdk-x11-3.0.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gdk_3_static_library names libgdk-x11-3.0.a\n                                     paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/lib /usr/local/lib\n                                     env lib\n                                     doc \"gdk3 library to link with\"\n                                     no_system_environment_path)"}, {"filenames": ["libgtk-x11-3.0.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindGTK3.cmake", "content": "find_library(gtk_gtk_3_static_library names libgtk-x11-3.0.a\n                                     paths ${gtk_dir}/lib ${gtk_dir}/bin ${gtk_dir}/win32/bin ${gtk_dir}/lib ${gtk_dir}/win32/lib /usr/lib /usr/local/lib\n                                     env lib\n                                     doc \"gtk3 library to link with\"\n                                     no_system_environment_path)"}]}, {"deps": [{"depname": "boehmgc", "version": null, "version_op": null, "unified_name": "boehmgc", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindBoehmGC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"libgc.a\""], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindBoehmGC.cmake", "content": "find_library(gc_static_libraries \"libgc.a\"\n  path_suffixes lib lib64)"}, {"filenames": ["\"gc\""], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindBoehmGC.cmake", "content": "find_library(gc_libraries \"gc\"\n  path_suffixes lib lib64)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "snapshot", "version": "1snapshot", "version_op": null, "unified_name": "snapshot", "extractor_type": "cmake", "context": "set(snapshot_version ${neko_version}+1snapshot${commit_time}+${commit_sha})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mbedtls"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedtls_library\n\t names mbedtls\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}, {"filenames": ["mbedcrypto"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedcrypto_library\n\t names mbedcrypto\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}, {"filenames": ["mbedx509"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedx509_library\n\t names mbedx509\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}, {"filenames": ["libmbedtls.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedtls_static_library\n\t names libmbedtls.a\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}, {"filenames": ["libmbedcrypto.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedcrypto_static_library\n\t names libmbedcrypto.a\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}, {"filenames": ["libmbedx509.a"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMbedTLS.cmake", "content": "find_library(mbedx509_static_library\n\t names libmbedx509.a\n\t path_suffixes lib\n\t hints ${mbedtls_root})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl)", "confidence": "High"}, {"depname": "expat", "version": null, "version_op": null, "unified_name": "expat", "extractor_type": "cmake", "context": "find_package(expat)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl)", "confidence": "High"}, {"depname": "expat", "version": null, "version_op": null, "unified_name": "expat", "extractor_type": "cmake", "context": "find_package(expat)", "confidence": "High"}, {"depname": "apr", "version": null, "version_op": null, "unified_name": "apr", "extractor_type": "cmake", "context": "project(apr-util c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "apr", "version": null, "version_op": null, "unified_name": "apr", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindAPR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${apr_names}"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindAPR.cmake", "content": "find_library(apr_library\n  names ${apr_names}\n)"}, {"filenames": ["${aprutil_names}"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindAPR.cmake", "content": "find_library(aprutil_library\n  names ${aprutil_names}\n)"}]}, {"deps": [{"depname": "choco", "version": null, "version_op": null, "unified_name": "choco", "extractor_type": "cmake", "context": "\tset(choco_version ${neko_version})", "confidence": "Low"}, {"depname": "choco", "version": null, "version_op": null, "unified_name": "choco", "extractor_type": "cmake", "context": "\tset(choco_version ${neko_version}-snap${commit_time})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mariadbconnector", "version": null, "version_op": null, "unified_name": "mariadbconnector", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindMariaDBConnector.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mariadbclient", "mariadb", "mysqlclient"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMariaDBConnector.cmake", "content": "find_library(mariadb_connector_libraries names mariadbclient mariadb mysqlclient path_suffixes mariadb mysql)"}, {"filenames": ["mariadbclient", "mariadb", "mysqlclient"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindMariaDBConnector.cmake", "content": "find_library(mariadb_connector_static_libraries names mariadbclient mariadb mysqlclient path_suffixes mariadb mysql)"}]}, {"deps": [{"depname": "pcre2", "version": null, "version_op": null, "unified_name": "pcre2", "extractor_type": "cmake", "context": "HaxeFoundation@@neko/cmake/FindPCRE2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pcre2", "pcre2-8"], "version": "", "fromfile": "HaxeFoundation@@neko/cmake/FindPCRE2.cmake", "content": "find_library(pcre2_libraries names pcre2 pcre2-8)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "apache", "version": null, "version_op": null, "unified_name": "apache", "extractor_type": "cmake", "context": "find_package(apache required)", "confidence": "High"}, {"depname": "apr", "version": null, "version_op": null, "unified_name": "apr", "extractor_type": "cmake", "context": "find_package(apr required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pcre2", "version": null, "version_op": null, "unified_name": "pcre2", "extractor_type": "cmake", "context": "find_package(pcre2 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtk+", "version": "3.0", "version_op": "=", "unified_name": "gtk+", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gtk3 required gtk+-3.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["carbon"], "version": "", "fromfile": "HaxeFoundation@@neko/libs/ui/CMakeLists.txt", "content": "find_library(carbon_library carbon required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "find_package(mbedtls required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["security"], "version": "", "fromfile": "HaxeFoundation@@neko/libs/ssl/CMakeLists.txt", "content": "find_library(security_library security required)"}, {"filenames": ["corefoundation"], "version": "", "fromfile": "HaxeFoundation@@neko/libs/ssl/CMakeLists.txt", "content": "find_library(corefoundation_library corefoundation required)"}]}, {"deps": [{"depname": "perl", "version": null, "version_op": null, "unified_name": "perl", "extractor_type": "cmake", "context": "find_package(perl required)", "confidence": "High"}, {"depname": "mariadbconnector", "version": null, "version_op": null, "unified_name": "mariadbconnector", "extractor_type": "cmake", "context": "find_package(mariadbconnector required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "find_package(sqlite3 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}