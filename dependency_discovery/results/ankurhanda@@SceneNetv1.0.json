{"target": "ankurhanda@@SceneNetv1.0", "extractors": [{"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "find_package(glut required)", "confidence": "High"}, {"depname": "pangolin", "version": null, "version_op": null, "unified_name": "pangolin", "extractor_type": "cmake", "context": "find_package(pangolin required)", "confidence": "High"}, {"depname": "cvd", "version": null, "version_op": null, "unified_name": "cvd", "extractor_type": "cmake", "context": "find_package(cvd required)", "confidence": "High"}, {"depname": "minimalimgutilities", "version": null, "version_op": null, "unified_name": "minimalimgutilities", "extractor_type": "cmake", "context": "find_package(minimalimgutilities required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components thread required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "opencv2", "version": null, "version_op": null, "unified_name": "opencv2", "extractor_type": "cmake", "context": "find_package(opencv2 required)", "confidence": "High"}, {"depname": "scenegraph", "version": null, "version_op": null, "unified_name": "scenegraph", "extractor_type": "cmake", "context": "find_package(scenegraph required)", "confidence": "High"}, {"depname": "scenenetv1", "version": null, "version_op": null, "unified_name": "scenenetv1", "extractor_type": "cmake", "context": "project(scenenetv1.0)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cvd", "version": null, "version_op": null, "unified_name": "cvd", "extractor_type": "cmake", "context": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCVD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cvd"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCVD.cmake", "content": "find_library(\n  cvd_library\n  names cvd\n  paths\n    ${cmake_source_dir}/../libcvd\n    ${cmake_source_dir}/../cvd\n    /usr/lib\n    /usr/local/lib\n)"}]}, {"deps": [{"depname": "opencv2", "version": null, "version_op": null, "unified_name": "opencv2", "extractor_type": "cmake", "context": "ankurhanda@@SceneNetv1.0/CMakeModules/FindOpenCV2.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCUDA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCUDA.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths ${_cuda_64bit_lib_dir}\n          \"${cuda_toolkit_root_dir}/lib/win32\"\n          \"${cuda_toolkit_root_dir}/lib\"\n    env cuda_lib_path\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCUDA.cmake", "content": "find_library(${_var} names ${_names} doc ${_doc})"}, {"filenames": ["nvcc"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}/bin\"\n        \"${cuda_toolkit_root_dir}/bin64\"\n  env cuda_bin_path\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [{"depname": "minimalimgutilities", "version": null, "version_op": null, "unified_name": "minimalimgutilities", "extractor_type": "cmake", "context": "ankurhanda@@SceneNetv1.0/CMakeModules/FindMinimalImgUtilities.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${iu_module}"], "version": "", "fromfile": "ankurhanda@@SceneNetv1.0/CMakeModules/FindMinimalImgUtilities.cmake", "content": "find_library(\n  minimalimgutilities_library_${iu_module}\n  names ${iu_module}\n  paths\n    ${cmake_source_dir}/../imageutilities/build/src/\n    /usr/lib\n    /usr/local/lib\n)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}