{"target": "wildmeshing@@fTetWild", "extractors": [{"deps": [{"depname": "gmpftetwild", "version": null, "version_op": null, "unified_name": "gmpftetwild", "extractor_type": "cmake", "context": "find_package(gmpftetwild)", "confidence": "High"}, {"depname": "floattetwild", "version": null, "version_op": null, "unified_name": "floattetwild", "extractor_type": "cmake", "context": "project(floattetwild)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmpftetwild", "version": null, "version_op": null, "unified_name": "gmpftetwild", "extractor_type": "cmake", "context": "wildmeshing@@fTetWild/cmake/FindGMPfTetWild.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gmp", "libgmp"], "version": "", "fromfile": "wildmeshing@@fTetWild/cmake/FindGMPfTetWild.cmake", "content": "find_library(gmp_libraries names gmp libgmp paths $env{gmp_lib} ${gmp_windows_path})"}, {"filenames": ["gmpxx", "libgmpxx"], "version": "", "fromfile": "wildmeshing@@fTetWild/cmake/FindGMPfTetWild.cmake", "content": "find_library(gmpxx_libraries names gmpxx libgmpxx paths $env{gmp_lib} ${gmp_windows_path})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gccfilter"], "version": "", "fromfile": "wildmeshing@@fTetWild/cmake/UseColors.cmake", "content": "find_program(gcc_filter gccfilter)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "wildmeshing@@fTetWild/cmake/FindMPFR.cmake", "confidence": "High"}, {"depname": "mpfr_find", "version": "1.0.0", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_find_version\n    \"1.0.0\")", "confidence": "Low"}, {"depname": "mpfr_major", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr_minor", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr_patchlevel", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_patchlevel_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "\n  set(mpfr_version\n    ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["mpfr"], "version": "", "fromfile": "wildmeshing@@fTetWild/cmake/FindMPFR.cmake", "content": "find_library(mpfr_libraries mpfr\n  paths $env{gmpdir} $env{mpfrdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sanitizers", "version": null, "version_op": null, "unified_name": "sanitizers", "extractor_type": "cmake", "context": "find_package(sanitizers)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}