{"target": "OpenPHDGuiding@@phd2", "extractors": [{"deps": [{"depname": "phd2", "version": null, "version_op": null, "unified_name": "phd2", "extractor_type": "cmake", "context": "project(phd2)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "debhelper", "version": "=9", "version_op": null, "unified_name": "debhelper", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "cmake", "version": "", "version_op": null, "unified_name": "cmake", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libwxgtk3.2-dev", "version": "", "version_op": null, "unified_name": "wxgtk", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libwxgtk3.0-dev", "version": "", "version_op": null, "unified_name": "wxgtk", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libwxgtk3.0-gtk3-dev", "version": "", "version_op": null, "unified_name": "wxgtk", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libcfitsio-dev", "version": "", "version_op": null, "unified_name": "cfitsio", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libopencv-dev", "version": "", "version_op": null, "unified_name": "opencv", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libusb-1.0-0-dev", "version": "", "version_op": null, "unified_name": "usb-1.0-0", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libudev-dev", "version": "", "version_op": null, "unified_name": "udev", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libv4l-dev", "version": "", "version_op": null, "unified_name": "v4l", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libnova-dev", "version": "", "version_op": null, "unified_name": "nova", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}, {"depname": "libcurl4-gnutls-dev", "version": "", "version_op": null, "unified_name": "curl4-gnutls", "extractor_type": "control", "context": "OpenPHDGuiding@@phd2/debian/control", "confidence": "High"}], "type": "control"}, {"deps": [{"depname": "mpi_is_gaussianprocess", "version": null, "version_op": null, "unified_name": "mpi_is_gaussianprocess", "extractor_type": "cmake", "context": "project(mpi_is_gaussianprocess)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "indi", "version": null, "version_op": null, "unified_name": "indi", "extractor_type": "cmake", "context": "OpenPHDGuiding@@phd2/cmake_modules/FindINDI.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "indi", "version": null, "version_op": null, "unified_name": "indi", "extractor_type": "cmake", "context": "\n  set(indi_version ${cmake_match_1}.${cmake_match_2}.${cmake_match_1})", "confidence": "Low"}, {"depname": "indi", "version": null, "version_op": null, "unified_name": "indi", "extractor_type": "cmake", "context": "    set(indi_version ${cmake_match_1}.${cmake_match_2})", "confidence": "Low"}, {"depname": "indi", "version": null, "version_op": null, "unified_name": "indi", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_indi indi)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["indiclientandroid"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindINDI.cmake", "content": "find_library(indi_client_android_libraries names indiclientandroid\n          paths\n          ${build_kstarslite_dir}/android_libs/${android_architecture}/\n      )"}, {"filenames": ["indi"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindINDI.cmake", "content": "find_library(indi_libraries names indi\n        paths\n        ${pc_indi_library_dirs}\n        ${_oblinkdir}\n        ${gnuwin32_dir}/lib\n    )"}, {"filenames": ["indiclient"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindINDI.cmake", "content": "find_library(indi_client_libraries names indiclient\n        paths\n        ${pc_indi_library_dirs}\n        ${_oblinkdir}\n        ${gnuwin32_dir}/lib\n    )"}, {"filenames": ["indiclientqt"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindINDI.cmake", "content": "find_library(indi_client_qt_libraries names indiclientqt\n        paths\n            ${pc_indi_library_dirs}\n            ${_oblinkdir}\n            ${gnuwin32_dir}/lib\n    )"}]}, {"deps": [{"depname": "ascom_interface", "version": null, "version_op": null, "unified_name": "ascom_interface", "extractor_type": "cmake", "context": "OpenPHDGuiding@@phd2/cmake_modules/FindASCOM_INTERFACE.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "zwo", "version": null, "version_op": null, "unified_name": "zwo", "extractor_type": "cmake", "context": "OpenPHDGuiding@@phd2/cmake_modules/FindZWO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["asicamera2"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindZWO.cmake", "content": "find_library(zwo_libraries names asicamera2\n    paths\n    ${project_source_dir}/cameras/zwolibs\n    path_suffixes mac\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cfitsio", "version": null, "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "OpenPHDGuiding@@phd2/cmake_modules/FindCFITSIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cfitsio"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindCFITSIO.cmake", "content": "find_library(cfitsio_libraries names cfitsio\n    paths\n    $env{cfitsio}\n    ${_oblinkdir}\n    ${gnuwin32_dir}/lib\n  )"}]}, {"deps": [{"depname": "nova", "version": null, "version_op": null, "unified_name": "nova", "extractor_type": "cmake", "context": "OpenPHDGuiding@@phd2/cmake_modules/FindNova.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nova"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/cmake_modules/FindNova.cmake", "content": "find_library(nova_libraries names nova\n    paths\n    ${_oblinkdir}\n    ${gnuwin32_dir}/lib\n  )"}]}, {"deps": [{"depname": "cpack_debian_package", "version": "0", "version_op": null, "unified_name": "cpack_debian_package", "extractor_type": "cmake", "context": "  set(cpack_debian_package_version \"${version_major}.${version_minor}.${version_patch}.${cdate}.0${host_name}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "cfitsio", "version": null, "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "find_package(cfitsio required)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets required components propgrid base core aui adv html net)", "confidence": "High"}, {"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets required components aui core base adv html net)", "confidence": "High"}, {"depname": "indi", "version": "1.7", "version_op": null, "unified_name": "indi", "extractor_type": "cmake", "context": "find_package(indi 1.7 required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "nova", "version": null, "version_op": null, "unified_name": "nova", "extractor_type": "cmake", "context": "find_package(nova)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "cfitsio_major", "version": "3", "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "\n  set(cfitsio_major_version 3)", "confidence": "Low"}, {"depname": "cfitsio_minor", "version": "47", "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "  set(cfitsio_minor_version 47)", "confidence": "Low"}, {"depname": "cfitsio", "version": "3.47", "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "  set(cfitsio_version 3.47)", "confidence": "Low"}, {"depname": "indi", "version": "1.8.7", "version_op": null, "unified_name": "indi", "extractor_type": "cmake", "context": "    set(indi_version 1.8.7)", "confidence": "Low"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(usb_pkg libusb-1.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["quicktime"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(quicktimeframework      quicktime)"}, {"filenames": ["iokit"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(iokitframework          iokit)"}, {"filenames": ["carbon"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(carbonframework         carbon)"}, {"filenames": ["cocoa"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(cocoaframework          cocoa)"}, {"filenames": ["system"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(systemframework         system)"}, {"filenames": ["webkit"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(webkitframework         webkit)"}, {"filenames": ["audiotoolbox"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(audiotoolboxframework   audiotoolbox)"}, {"filenames": ["opengl"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(openglframework         opengl)"}, {"filenames": ["corefoundation"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(corefoundationframework corefoundation)"}, {"filenames": ["curl"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(curl_libraries\n                 names curl\n\t\t paths /usr/lib\n\t\t no_default_path)"}, {"filenames": ["z"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(zlib_libraries\n                   names z\n\t\t   paths /usr/lib\n\t\t   no_default_path)"}, {"filenames": ["sbig"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(sbig_libraries names sbig)"}, {"filenames": ["sbigudrv"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(sbigudrv_libraries names sbigudrv)"}, {"filenames": ["sbigudrv"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( sbigudframework\n                names sbigudrv\n                paths ${thirdparty_dir}/frameworks)"}, {"filenames": ["fccamfw"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( fccamframework\n                  names fccamfw\n                  paths ${thirdparty_dir}/frameworks)"}, {"filenames": ["dsidevice"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( dsimeadelibrary\n                  names dsidevice\n                  paths ${phd_project_root_dir}/cameras)"}, {"filenames": ["asicamera2"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( asicamera2\n                names asicamera2\n                paths ${phd_project_root_dir}/cameras/zwolibs/mac)"}, {"filenames": ["svbcamerasdk"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( svbcamerasdk\n                  names svbcamerasdk\n                  paths ${phd_project_root_dir}/cameras/svblibs/mac/x86)"}, {"filenames": ["svbcamerasdk"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( svbcamerasdk\n                  names svbcamerasdk\n                  paths ${phd_project_root_dir}/cameras/svblibs/mac/x64)"}, {"filenames": ["qhyccd"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( qhylib\n                  names qhyccd\n                  paths ${phd_project_root_dir}/cameras/qhyccdlibs/mac/x86_32)"}, {"filenames": ["qhyccd"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( qhylib\n                  names qhyccd\n                  paths ${phd_project_root_dir}/cameras/qhyccdlibs/mac/x86_64)"}, {"filenames": ["mallincamguider"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( mallincamframework\n                  names mallincamguider\n                  paths ${thirdparty_dir}/frameworks)"}, {"filenames": ["toupcam"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library( toupcam\n                  names toupcam\n                  paths ${phd_project_root_dir}/cameras/toupcam/mac)"}, {"filenames": ["asicamera2", "no_default_paths"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(asicamera2\n             names asicamera2\n             no_default_paths\n             paths ${phd_project_root_dir}/cameras/zwolibs/x86)"}, {"filenames": ["toupcam", "no_default_paths"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(toupcam\n             names toupcam\n             no_default_paths\n             no_cmake_system_path\n             paths ${phd_project_root_dir}/cameras/toupcam/linux/x86)"}, {"filenames": ["svbcamerasdk", "no_default_paths"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(svbcamerasdk\n            names svbcamerasdk\n            no_default_paths\n            paths ${phd_project_root_dir}/cameras/svblibs/linux/x86)"}, {"filenames": ["qhyccd"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(qhylib\n               names qhyccd\n               no_default_path\n               paths ${phd_project_root_dir}/cameras/qhyccdlibs/linux/x86_32)"}, {"filenames": ["m"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_library(mathlib names m)"}, {"filenames": ["\"wxgtk3u-3.1-config\""], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(wxwidgets_config_executable\n    names \"wxgtk3u-3.1-config\"\n    paths ${wxwidgets_prefix_directory}/bin no_default_path)"}, {"filenames": ["\"wx-config\""], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(wxwidgets_config_executable names \"wx-config\" paths ${wxwidgets_prefix_directory}/bin no_default_path)"}, {"filenames": ["lsb_release"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(lsb_release_exec lsb_release)"}, {"filenames": ["xgettext", "${gettext_findprogram_options}"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(xgettext\n             names xgettext\n             ${gettext_findprogram_options})"}, {"filenames": ["msgfmt", "${gettext_findprogram_options}"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(msgfmt\n              names msgfmt\n             ${gettext_findprogram_options})"}, {"filenames": ["msgmerge", "${gettext_findprogram_options}"], "version": "", "fromfile": "OpenPHDGuiding@@phd2/thirdparty/thirdparty.cmake", "content": "find_program(msgmerge\n              names msgmerge\n             ${gettext_findprogram_options})"}]}, {"deps": [{"depname": "OpenSSAG", "version": "0.1.5", "version_op": null, "unified_name": "openssag", "extractor_type": "autoconf", "context": "AC_INIT([OpenSSAG], [0.1.5], [eric@ejholmes.net])", "confidence": ""}, {"depname": "MagickCore", "version": null, "version_op": null, "unified_name": "magickcore", "extractor_type": "autoconf", "context": "OpenPHDGuiding@@phd2/thirdparty/openssag/configure.ac", "confidence": "High"}, {"depname": "usb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "autoconf", "context": "OpenPHDGuiding@@phd2/thirdparty/openssag/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}]}