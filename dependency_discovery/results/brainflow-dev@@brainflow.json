{"target": "brainflow-dev@@brainflow", "extractors": [{"deps": [], "type": "conan"}, {"deps": [{"depname": "brainflow", "version": null, "version_op": null, "unified_name": "brainflow", "extractor_type": "cmake", "context": "project (brainflow)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package (openmp)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["log"], "version": "", "fromfile": "brainflow-dev@@brainflow/src/ml/build.cmake", "content": "find_library (log-lib log)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package (openmp)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["log"], "version": "", "fromfile": "brainflow-dev@@brainflow/src/data_handler/build.cmake", "content": "find_library (log-lib log)"}]}, {"deps": [{"depname": "libftdi1", "version": null, "version_op": null, "unified_name": "ftdi1", "extractor_type": "cmake", "context": "find_package (libftdi1 no_module)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${dependency_library}"], "version": "", "fromfile": "brainflow-dev@@brainflow/src/board_controller/build.cmake", "content": "find_library (dependency_library_location names ${dependency_library} hints ${libftdi_library_dirs} / no_cmake_path no_cmake_find_root_path)"}, {"filenames": ["log"], "version": "", "fromfile": "brainflow-dev@@brainflow/src/board_controller/build.cmake", "content": "find_library (log-lib log)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "brainflow", "version": null, "version_op": null, "unified_name": "brainflow", "extractor_type": "cmake", "context": "find_package (\n    brainflow config required\n)", "confidence": "High"}, {"depname": "brainflow_ml_test", "version": null, "version_op": null, "unified_name": "brainflow_ml_test", "extractor_type": "cmake", "context": "project (brainflow_ml_test)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "brainflow", "version": null, "version_op": null, "unified_name": "brainflow", "extractor_type": "cmake", "context": "find_package (\n    brainflow config required\n)", "confidence": "High"}, {"depname": "brainflow_signal_processing", "version": null, "version_op": null, "unified_name": "brainflow_signal_processing", "extractor_type": "cmake", "context": "project (brainflow_signal_processing)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "brainflow", "version": null, "version_op": null, "unified_name": "brainflow", "extractor_type": "cmake", "context": "find_package (\n    brainflow config required\n)", "confidence": "High"}, {"depname": "brainflow_get_data", "version": null, "version_op": null, "unified_name": "brainflow_get_data", "extractor_type": "cmake", "context": "project (brainflow_get_data)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gforce32"], "version": "", "fromfile": "brainflow-dev@@brainflow/third_party/gForceSDKCXX/build.cmake", "content": "find_library (gforce_sdk names gforce32 paths ${cmake_current_list_dir}/lib)"}]}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "project(fmt cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp quiet required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "9.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 9.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "compile", "version": null, "version_op": null, "unified_name": "compile", "extractor_type": "cmake", "context": "project(compile-error-test cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "project(fmt-link cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt required)", "confidence": "High"}, {"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "project(fmt-test)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "project(fmt-test cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "setenv", "version": null, "version_op": null, "unified_name": "setenv", "extractor_type": "cmake", "context": "brainflow-dev@@brainflow/third_party/fmt/support/cmake/FindSetEnv.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["setenv.cmd"], "version": "", "fromfile": "brainflow-dev@@brainflow/third_party/fmt/support/cmake/FindSetEnv.cmake", "content": "find_program(winsdk_setenv names setenv.cmd\n  paths \"[hkey_local_machine\\\\software\\\\microsoft\\\\microsoft sdks\\\\windows;currentinstallfolder]/bin\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "dbus1", "version": null, "version_op": null, "unified_name": "dbus1", "extractor_type": "cmake", "context": "brainflow-dev@@brainflow/third_party/SimpleBLE/cmake/find/FindDBus1.cmake", "confidence": "High"}, {"depname": "dbus1", "version": null, "version_op": null, "unified_name": "dbus1", "extractor_type": "cmake", "context": "find_package(dbus1 config quiet)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "dbus", "version": "1", "version_op": "=", "unified_name": "dbus", "extractor_type": "cmake::pkg", "context": "pkg_search_module(pc_dbus required dbus-1)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "brainflow-dev@@brainflow/third_party/SimpleBLE/cmake/find/Findfmt.cmake", "confidence": "High"}, {"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt config required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "simplebluez", "version": null, "version_op": null, "unified_name": "simplebluez", "extractor_type": "cmake", "context": "find_package(simplebluez config required)", "confidence": "High"}, {"depname": "simplebluez_examples", "version": null, "version_op": null, "unified_name": "simplebluez_examples", "extractor_type": "cmake", "context": "project(simplebluez_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_pair", "version": null, "version_op": null, "unified_name": "example_pair", "extractor_type": "cmake", "context": "project(example_pair)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_scan", "version": null, "version_op": null, "unified_name": "example_scan", "extractor_type": "cmake", "context": "project(example_scan)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_notify", "version": null, "version_op": null, "unified_name": "example_notify", "extractor_type": "cmake", "context": "project(example_notify)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_connect", "version": null, "version_op": null, "unified_name": "example_connect", "extractor_type": "cmake", "context": "project(example_connect)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_list_paired", "version": null, "version_op": null, "unified_name": "example_list_paired", "extractor_type": "cmake", "context": "project(example_list_paired)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_list_adapters", "version": null, "version_op": null, "unified_name": "example_list_adapters", "extractor_type": "cmake", "context": "project(example_list_adapters)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_ble_nus", "version": null, "version_op": null, "unified_name": "example_ble_nus", "extractor_type": "cmake", "context": "project(example_ble_nus)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_read", "version": null, "version_op": null, "unified_name": "example_read", "extractor_type": "cmake", "context": "project(example_read)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "simpleble", "version": null, "version_op": null, "unified_name": "simpleble", "extractor_type": "cmake", "context": "find_package(simpleble config required)", "confidence": "High"}, {"depname": "simpleble_examples", "version": null, "version_op": null, "unified_name": "simpleble_examples", "extractor_type": "cmake", "context": "project(simpleble_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_scan_c", "version": null, "version_op": null, "unified_name": "example_scan_c", "extractor_type": "cmake", "context": "project(example_scan_c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_notify_c", "version": null, "version_op": null, "unified_name": "example_notify_c", "extractor_type": "cmake", "context": "project(example_notify_c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_connect_c", "version": null, "version_op": null, "unified_name": "example_connect_c", "extractor_type": "cmake", "context": "project(example_connect_c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_notify_multi", "version": null, "version_op": null, "unified_name": "example_notify_multi", "extractor_type": "cmake", "context": "project(example_notify_multi)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_scan", "version": null, "version_op": null, "unified_name": "example_scan", "extractor_type": "cmake", "context": "project(example_scan)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_notify", "version": null, "version_op": null, "unified_name": "example_notify", "extractor_type": "cmake", "context": "project(example_notify)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_connect", "version": null, "version_op": null, "unified_name": "example_connect", "extractor_type": "cmake", "context": "project(example_connect)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_write", "version": null, "version_op": null, "unified_name": "example_write", "extractor_type": "cmake", "context": "project(example_write)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_list_adapters", "version": null, "version_op": null, "unified_name": "example_list_adapters", "extractor_type": "cmake", "context": "project(example_list_adapters)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_connect_safe", "version": null, "version_op": null, "unified_name": "example_connect_safe", "extractor_type": "cmake", "context": "project(example_connect_safe)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_read", "version": null, "version_op": null, "unified_name": "example_read", "extractor_type": "cmake", "context": "project(example_read)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "simpledbus", "version": null, "version_op": null, "unified_name": "simpledbus", "extractor_type": "cmake", "context": "find_package(simpledbus config required)", "confidence": "High"}, {"depname": "simpledbus_examples", "version": null, "version_op": null, "unified_name": "simpledbus_examples", "extractor_type": "cmake", "context": "project(simpledbus_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "example_notification", "version": null, "version_op": null, "unified_name": "example_notification", "extractor_type": "cmake", "context": "project(example_notification)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt required)", "confidence": "High"}, {"depname": "dbus1", "version": null, "version_op": null, "unified_name": "dbus1", "extractor_type": "cmake", "context": "find_package(dbus1 required)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components development required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "simplebluez", "version": "${simpleble_version}", "version_op": null, "unified_name": "simplebluez", "extractor_type": "cmake", "context": "project(     simplebluez     version ${simpleble_version}     description \"a simple c++ wrapper around bluez with a commercially-friendly licence.\"     homepage_url \"https://github.com/openbluetoothtoolbox/simplebluez\"     languages cxx )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "dbus1", "version": null, "version_op": null, "unified_name": "dbus1", "extractor_type": "cmake", "context": "find_package(dbus1 required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "simpleble", "version": "0.1", "version_op": null, "unified_name": "simpleble", "extractor_type": "cmake", "context": "project(simpleble version 0.1 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 required)", "confidence": "High"}, {"depname": "simplepyble", "version": null, "version_op": null, "unified_name": "simplepyble", "extractor_type": "cmake", "context": "project(simplepyble)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt required)", "confidence": "High"}, {"depname": "dbus1", "version": null, "version_op": null, "unified_name": "dbus1", "extractor_type": "cmake", "context": "find_package(dbus1 required)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components development required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "simpledbus", "version": "${simpleble_version}", "version_op": null, "unified_name": "simpledbus", "extractor_type": "cmake", "context": "project(     simpledbus     version ${simpleble_version}     description \"a simple c++ wrapper around dbus with a commercially-friendly licence.\"     homepage_url \"https://github.com/openbluetoothtoolbox/simpledbus\"     languages cxx )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "makefile_extracted", "version": "131.1.0", "version_op": null, "unified_name": "makefile_extracted", "extractor_type": "cmake", "context": "\nset(makefile_extracted_version \"131.1.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "kissfft", "version": "\"${cmake_match_1}.${cmake_match_1}.${cmake_match_1}\"", "version_op": null, "unified_name": "kissfft", "extractor_type": "cmake", "context": "project(kissfft version \"${cmake_match_1}.${cmake_match_1}.${cmake_match_1}\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libpng", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libpng required imported_target libpng)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}, {"depname": "fftw3", "version": null, "version_op": null, "unified_name": "fftw3", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(fftw3 required imported_target fftw3)", "confidence": "High"}], "type": "cmake", "libs": []}]}