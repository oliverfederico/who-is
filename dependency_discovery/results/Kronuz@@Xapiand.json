{"target": "Kronuz@@Xapiand", "extractors": [{"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "uuid", "version": null, "version_op": null, "unified_name": "uuid", "extractor_type": "cmake", "context": "find_package(uuid required)", "confidence": "High"}, {"depname": "icu", "version": "54.1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "find_package(icu 54.1 components uc)", "confidence": "High"}, {"depname": "sanitizers", "version": null, "version_op": null, "unified_name": "sanitizers", "extractor_type": "cmake", "context": "find_package(sanitizers quiet)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}, {"depname": "gbenchmark", "version": null, "version_op": null, "unified_name": "gbenchmark", "extractor_type": "cmake", "context": "find_package(gbenchmark)", "confidence": "High"}, {"depname": "xapiand", "version": null, "version_op": null, "unified_name": "xapiand", "extractor_type": "cmake", "context": "project(xapiand c cxx)", "confidence": ""}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread \"pthread_getname_np\" \"\" have_pthread_getname_np)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread \"pthread_get_name_np\" \"\" have_pthread_get_name_np)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread \"pthread_setname_np\" \"\" have_pthread_setname_np)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread \"pthread_set_name_np\" \"\" have_pthread_set_name_np)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread \"pthread_attr_setaffinity_np\" \"\" have_pthread_attr_setaffinity_np)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["c++"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(libcpp_libraries c++)"}, {"filenames": ["c++abi"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(libcppabi_libraries c++abi)"}, {"filenames": ["execinfo"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(execinfo_libraries execinfo)"}, {"filenames": ["rt"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(rt_libraries rt)"}, {"filenames": ["m"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(m_libraries m)"}, {"filenames": ["dl"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(dl_libraries dl)"}, {"filenames": ["cap"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_library(cap_libraries cap)"}, {"filenames": ["include-what-you-use", "iwyu"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_program(include_what_you_use_path names include-what-you-use iwyu)"}, {"filenames": ["clang-tidy"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_program(clang_tidy_path names clang-tidy)"}, {"filenames": ["cpplint"], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_program(cpplint_path names cpplint)"}, {"filenames": ["\"ccache\""], "version": "", "fromfile": "Kronuz@@Xapiand/CMakeLists.txt", "content": "find_program(ccache_found \"ccache\")"}]}, {"deps": [{"depname": "sanitizers", "version": null, "version_op": null, "unified_name": "sanitizers", "extractor_type": "cmake", "context": "Kronuz@@Xapiand/cmake/Modules/FindSanitizers.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "_get_git", "version": null, "version_op": null, "unified_name": "_get_git", "extractor_type": "cmake", "context": "\nset (__get_git_version included)", "confidence": "Low"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "\t\t\t\tset (git_version \"${git_version}-dirty\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagetools", "version": null, "version_op": null, "unified_name": "packagetools", "extractor_type": "cmake", "context": "Kronuz@@Xapiand/cmake/Modules/FindPackageTools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindPackageTools.cmake", "content": "find_library(${_name}\n\t\tnames ${argn}\n\t\thints\n\t\t\t\"${${_root}}\"\n\t\t\t\"$env{${_root}}\"\n\t\tpath_suffixes lib\n\t)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gtest_library             gtest_root  \"gtest\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gtest_library_debug       gtest_root  \"gtestd\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library        gtest_root  \"gtest_main\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library_debug  gtest_root  \"gtest_maind\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gmock_library             gtest_root  \"gmock\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gmock_library_debug       gtest_root  \"gmockd\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gmock_main_library        gtest_root  \"gmock_main\")"}, {"filenames": ["gtest_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGTest.cmake", "content": "find_library(gmock_main_library_debug  gtest_root  \"gmock_maind\")"}]}, {"deps": [{"depname": "uuid", "version": null, "version_op": null, "unified_name": "uuid", "extractor_type": "cmake", "context": "Kronuz@@Xapiand/cmake/Modules/FindUUID.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "uuid", "version": null, "version_op": null, "unified_name": "uuid", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_uuid quiet uuid)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["uuid"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindUUID.cmake", "content": "find_library(uuid_library uuid\n\t\t$env{uuid_dir}\n\t\t$env{uuid_dir}/lib\n\t\t/usr/local/lib\n\t\t/usr/lib\n\t\t/lib/i386-linux-gnu\n\t\t/lib/x86_64-linux-gnu\n\t\t/usr/lib/i386-linux-gnu\n\t\t/usr/lib/x86_64-linux-gnu\n\t\t/sw/lib\n\t\t/opt/local/lib\n\t\t/opt/csw/lib\n\t\t/opt/lib\n\t\t/usr/freeware/lib64\n\t\t~/library/frameworks\n\t\t/library/frameworks\n\t)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gbenchmark", "version": null, "version_op": null, "unified_name": "gbenchmark", "extractor_type": "cmake", "context": "Kronuz@@Xapiand/cmake/Modules/FindGBenchmark.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gbenchmark_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGBenchmark.cmake", "content": "find_library(gbenchmark_library         gbenchmark_root  \"benchmark\")"}, {"filenames": ["gbenchmark_root"], "version": "", "fromfile": "Kronuz@@Xapiand/cmake/Modules/FindGBenchmark.cmake", "content": "find_library(gbenchmark_library_debug   gbenchmark_root  \"benchmarkd\")"}]}, {"deps": [], "type": "clib"}]}