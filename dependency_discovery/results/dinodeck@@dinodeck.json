{"target": "dinodeck@@dinodeck", "extractors": [{"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "find_package(alsa)", "confidence": "High"}, {"depname": "oss", "version": null, "version_op": null, "unified_name": "oss", "extractor_type": "cmake", "context": "find_package(oss)", "confidence": "High"}, {"depname": "audioio", "version": null, "version_op": null, "unified_name": "audioio", "extractor_type": "cmake", "context": "find_package(audioio)", "confidence": "High"}, {"depname": "soundio", "version": null, "version_op": null, "unified_name": "soundio", "extractor_type": "cmake", "context": "find_package(soundio)", "confidence": "High"}, {"depname": "qsa", "version": null, "version_op": null, "unified_name": "qsa", "extractor_type": "cmake", "context": "find_package(qsa)", "confidence": "High"}, {"depname": "dsound", "version": null, "version_op": null, "unified_name": "dsound", "extractor_type": "cmake", "context": "find_package(dsound)", "confidence": "High"}, {"depname": "pulseaudio", "version": null, "version_op": null, "unified_name": "pulseaudio", "extractor_type": "cmake", "context": "find_package(pulseaudio)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake", "context": "find_package(jack)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2)", "confidence": "High"}, {"depname": "sdl_sound", "version": null, "version_op": null, "unified_name": "sdl_sound", "extractor_type": "cmake", "context": "find_package(sdl_sound)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg components avformat avcodec avutil swscale swresample)", "confidence": "High"}, {"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "project(openal)", "confidence": ""}, {"depname": "m", "version": null, "version_op": null, "unified_name": "m", "extractor_type": "cmake", "context": "check_library_exists(m pow \"\" have_libm)", "confidence": "High"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists(dl dlopen \"\" have_libdl)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_create \"\" have_libpthread)", "confidence": "High"}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists(rt clock_gettime \"\" have_librt)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coreaudio"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/CMakeLists.txt", "content": "find_library(coreaudio_framework\n             names coreaudio\n             paths /system/library/frameworks\n)"}, {"filenames": ["audiotoolbox"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/CMakeLists.txt", "content": "find_library(audiotoolbox_library\n                     names audiotoolbox\n                     paths ~/library/frameworks\n                           /library/frameworks\n                           /system/library/frameworks\n                    )"}, {"filenames": ["sed"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/CMakeLists.txt", "content": "find_program(sed_executable names sed doc \"sed executable\")"}, {"filenames": ["\"dlltool\""], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/CMakeLists.txt", "content": "find_program(dlltool_executable names \"dlltool\" doc \"dlltool executable\")"}]}, {"deps": [{"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindJACK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jack"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindJACK.cmake", "content": "find_library(jack_library names jack\n             doc \"the jack library\"\n)"}]}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindFFmpeg.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "${_pkgconfig}", "version": null, "version_op": null, "unified_name": "${_pkgconfig}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_${_component} ${_pkgconfig})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindFFmpeg.cmake", "content": "find_library(${_component}_libraries names ${_library}\n        hints\n            ${ffmpegsdk_lib}\n            ${pc_lib${_component}_libdir}\n            ${pc_lib${_component}_library_dirs}\n    )"}]}, {"deps": [{"depname": "qsa", "version": null, "version_op": null, "unified_name": "qsa", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindQSA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["asound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindQSA.cmake", "content": "find_library(qsa_library\n                 names asound\n                 doc \"the qsa library\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library_temp\n  names sdl2\n  hints\n  $env{sdl2dir}\n  path_suffixes lib64 lib\n  paths\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL2.cmake", "content": "find_library(sdl2main_library\n      names sdl2main\n      hints\n      $env{sdl2dir}\n      path_suffixes lib64 lib\n      paths\n      /sw\n      /opt/local\n      /opt/csw\n      /opt\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindALSA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["asound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindALSA.cmake", "content": "find_library(alsa_library names asound\n             doc \"the alsa (asound) library\"\n)"}]}, {"deps": [{"depname": "sdl_sound", "version": null, "version_op": null, "unified_name": "sdl_sound", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "confidence": "High"}, {"depname": "determinesoundlibs", "version": null, "version_op": null, "unified_name": "determinesoundlibs", "extractor_type": "cmake", "context": "                project(determinesoundlibs c)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["sdl_sound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(sdl_sound_library\n    names sdl_sound\n    hints\n        env sdlsounddir\n        env sdldir\n)"}, {"filenames": ["m"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(math_library names m)"}, {"filenames": ["libmikmod-coreaudio", "mikmod"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(mikmod_library\n                        names libmikmod-coreaudio mikmod\n                        paths\n                            env mikmoddir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["modplug"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(modplug_library\n                        names modplug\n                        paths\n                            env modplugdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["vorbisfile", "vorbisfile", "vorbisfile"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(vorbisfile_library\n                        names vorbisfile vorbisfile vorbisfile\n                        paths\n                            env vorbisdir\n                            env oggdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["vorbis", "vorbis", "vorbis"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(vorbis_library\n                        names vorbis vorbis vorbis\n                        paths\n                            env oggdir\n                            env vorbisdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["ogg", "ogg", "ogg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(ogg_library\n                        names ogg ogg ogg\n                        paths\n                            env oggdir\n                            env vorbisdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["smpeg", "smpeg", "smpeg", "smpeg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(smpeg_library\n                        names smpeg smpeg smpeg smpeg\n                        paths\n                            env smpegdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["flac", "flac"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(flac_library\n                        names flac flac\n                        paths\n                            env flacdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["speex", "speex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(speex_library\n                        names speex speex\n                        paths\n                            env speexdir\n                            env sdlsounddir\n                            env sdldir\n                            /sw\n                            /opt/local\n                            /opt/csw\n                            /opt\n                        path_suffixes lib\n                    )"}, {"filenames": ["ogg", "ogg", "ogg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSDL_sound.cmake", "content": "find_library(ogg_library\n                            names ogg ogg ogg\n                            paths\n                                env oggdir\n                                env vorbisdir\n                                env speexdir\n                                env sdlsounddir\n                                env sdldir\n                                /sw\n                                /opt/local\n                                /opt/csw\n                                /opt\n                            path_suffixes lib\n                        )"}]}, {"deps": [{"depname": "dsound", "version": null, "version_op": null, "unified_name": "dsound", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindDSound.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dsound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindDSound.cmake", "content": "find_library(dsound_library\n             names dsound\n             paths \"${dxsdk_dir}\"\n             path_suffixes lib lib/x86 lib/x64\n             doc \"the directsound library\"\n)"}]}, {"deps": [{"depname": "pulseaudio", "version": null, "version_op": null, "unified_name": "pulseaudio", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindPulseAudio.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pulse"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindPulseAudio.cmake", "content": "find_library(pulseaudio_library\n             names pulse\n             doc \"the pulseaudio library\"\n)"}]}, {"deps": [{"depname": "oss", "version": null, "version_op": null, "unified_name": "oss", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindOSS.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "audioio", "version": null, "version_op": null, "unified_name": "audioio", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindAudioIO.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "portaudio", "version": null, "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindPortAudio.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["portaudio"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindPortAudio.cmake", "content": "find_library(portaudio_library\n             names portaudio\n             doc \"the portaudio library\"\n)"}]}, {"deps": [{"depname": "soundio", "version": null, "version_op": null, "unified_name": "soundio", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSoundIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sndio"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/openal-soft/cmake/FindSoundIO.cmake", "content": "find_library(soundio_library\n             names sndio\n             doc \"the soundio library\"\n)"}]}, {"deps": [{"depname": "qt4", "version": "4.8.0", "version_op": null, "unified_name": "qt4", "extractor_type": "cmake", "context": "find_package(qt4 4.8.0 components qtcore qtgui)", "confidence": "High"}, {"depname": "alsoft", "version": null, "version_op": null, "unified_name": "alsoft", "extractor_type": "cmake", "context": "project(alsoft-config)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "physicsfs", "version": null, "version_op": null, "unified_name": "physicsfs", "extractor_type": "cmake", "context": "project(physicsfs)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["be"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/CMakeLists.txt", "content": "find_library(be_library be)"}, {"filenames": ["root"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/CMakeLists.txt", "content": "find_library(root_library root)"}, {"filenames": ["curses", "ncurses"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/CMakeLists.txt", "content": "find_library(curses_library names curses ncurses)"}, {"filenames": ["readline"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/CMakeLists.txt", "content": "find_library(readline_library readline)"}, {"filenames": ["history"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/CMakeLists.txt", "content": "find_library(history_library history)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${jpeg_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJPEG.cmake", "content": "find_library(jpeg_library names ${jpeg_names} )"}]}, {"deps": [{"depname": "qt3", "version": null, "version_op": null, "unified_name": "qt3", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["qt-mt", "qt-mt${qt_version_str_lib}", "qt-mtnc${qt_version_str_lib}", "qt-mtedu${qt_version_str_lib}", "qt-mt230nc", "qt-mtnc321", "qt-mt3"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_library(qt_qt_library\n    names\n    qt-mt qt-mt${qt_version_str_lib} qt-mtnc${qt_version_str_lib}\n    qt-mtedu${qt_version_str_lib} qt-mt230nc qt-mtnc321 qt-mt3\n    paths\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/lib\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/lib\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/lib\"\n    $env{qtdir}/lib\n    ${glob_paths_lib}\n    /usr/local/qt/lib\n    /usr/lib/qt/lib\n    /usr/lib/qt3/lib\n    /usr/lib/qt3/lib64\n    /usr/share/qt3/lib\n    c:/progra~1/qt/lib\n    )"}, {"filenames": ["qt", "qt-${qt_version_str_lib}", "qt-edu${qt_version_str_lib}", "qt-mt", "qt-mt${qt_version_str_lib}", "qt-mtnc${qt_version_str_lib}", "qt-mtedu${qt_version_str_lib}", "qt-mt230nc", "qt-mtnc321", "qt-mt3"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_library(qt_qt_library\n    names\n    qt qt-${qt_version_str_lib} qt-edu${qt_version_str_lib}\n    qt-mt qt-mt${qt_version_str_lib} qt-mtnc${qt_version_str_lib}\n    qt-mtedu${qt_version_str_lib} qt-mt230nc qt-mtnc321 qt-mt3\n    paths\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/lib\"\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/lib\"\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/lib\"\n    $env{qtdir}/lib\n    ${glob_paths_lib}\n    /usr/local/qt/lib\n    /usr/lib/qt/lib\n    /usr/lib/qt3/lib\n    /usr/lib/qt3/lib64\n    /usr/share/qt3/lib\n    c:/progra~1/qt/lib\n    )"}, {"filenames": ["qassistantclient"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_library(qt_qassistantclient_library\n  names qassistantclient\n  paths\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/lib\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/lib\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/lib\"\n  $env{qtdir}/lib\n  ${glob_paths_lib}\n  /usr/local/qt/lib\n  /usr/lib/qt3/lib\n  /usr/lib/qt3/lib64\n  /usr/share/qt3/lib\n  c:/progra~1/qt/lib\n  )"}, {"filenames": ["qtmain"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_library(qt_qtmain_library qtmain\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/lib\"\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/lib\"\n    \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/lib\"\n    \"$env{programfiles}/qt/lib\"\n    $env{qtdir}/lib \"c:/program files/qt/lib\"\n    doc \"this library is only needed by and included with qt3 on mswindows. it should be notfound, undefined or ignore otherwise.\"\n    )"}, {"filenames": ["moc-qt3", "moc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_program(qt_moc_executable\n  names moc-qt3 moc\n  hints\n  $env{qtdir}/bin\n  paths\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/include/qt\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/include/qt\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/include/qt\"\n  $env{qtdir}/bin\n  ${glob_paths_bin}\n  /usr/local/qt/bin\n  /usr/lib/qt/bin\n  /usr/lib/qt3/bin\n  /usr/share/qt3/bin\n  c:/progra~1/qt/bin\n  /usr/x11r6/bin\n  )"}, {"filenames": ["uic-qt3", "uic"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt3.cmake", "content": "find_program(qt_uic_executable\n  names uic-qt3 uic\n  hints\n  $env{qtdir}/bin\n  paths\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.1;installdir]/include/qt\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.2.0;installdir]/include/qt\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\3.1.0;installdir]/include/qt\"\n  ${glob_paths_bin}\n  /usr/local/qt/bin\n  /usr/lib/qt/bin\n  /usr/lib/qt3/bin\n  /usr/share/qt3/bin\n  c:/progra~1/qt/bin\n  /usr/x11r6/bin\n  )"}]}, {"deps": [{"depname": "osgfx", "version": null, "version_op": null, "unified_name": "osgfx", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgFX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgfx"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgFX.cmake", "content": "find_library(osgfx osgfx)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${cmake_asm${asm_dialect}_compiler_list}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineASMCompiler.cmake", "content": "find_program(cmake_asm${asm_dialect}_compiler names ${cmake_asm${asm_dialect}_compiler_list} paths ${_cmake_user_c_compiler_path} ${_cmake_user_cxx_compiler_path} doc \"assembler\" no_default_path)"}, {"filenames": ["${cmake_asm${asm_dialect}_compiler_list}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineASMCompiler.cmake", "content": "find_program(cmake_asm${asm_dialect}_compiler names ${cmake_asm${asm_dialect}_compiler_list} paths ${_cmake_toolchain_location} doc \"assembler\")"}, {"filenames": ["${cmake_asm${asm_dialect}_compiler}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineASMCompiler.cmake", "content": "find_program(cmake_asm${asm_dialect}_compiler_with_path names ${cmake_asm${asm_dialect}_compiler})"}]}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_debug \n                names ${lib}d \n                hints ${hdf5_${language}_library_dirs} \n                env hdf5_root \n                path_suffixes lib lib )"}, {"filenames": ["${lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_release\n                names ${lib} \n                hints ${hdf5_${language}_library_dirs} \n                env hdf5_root \n                path_suffixes lib lib )"}, {"filenames": ["h5cc", "h5pcc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "content": "find_program( hdf5_c_compiler_executable\n    names h5cc h5pcc\n    hints env hdf5_root\n    path_suffixes bin bin\n    doc \"hdf5 wrapper compiler.  used only to detect hdf5 compile flags.\" )"}, {"filenames": ["h5c++", "h5pc++"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "content": "find_program( hdf5_cxx_compiler_executable\n    names h5c++ h5pc++\n    hints env hdf5_root\n    path_suffixes bin bin\n    doc \"hdf5 c++ wrapper compiler.  used only to detect hdf5 compile flags.\" )"}, {"filenames": ["h5diff"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHDF5.cmake", "content": "find_program( hdf5_diff_executable \n    names h5diff\n    hints env hdf5_root\n    path_suffixes bin bin \n    doc \"hdf5 file differencing tool.\" )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype)", "confidence": "High"}, {"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "        set(gtk2_version\n            ${gtk2_major_version}.${gtk2_minor_version}.${gtk2_patch_version})", "confidence": "Low"}, {"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "    set(gtk2_version ${gtk2_major_version}.${gtk2_minor_version}.${gtk2_patch_version})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library( ${_var} ${_lib} ${_expand_vc} ${_append_version} )"}, {"filenames": ["${_lib_list}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library(${_var} \n        names ${_lib_list}\n        paths\n            /opt/gnome/lib\n            /opt/gnome/lib64\n            /usr/openwin/lib\n            /usr/openwin/lib64\n            /sw/lib\n            $env{gtkmm_basepath}/lib\n            [hkey_current_user\\\\software\\\\gtkmm\\\\2.4;path]/lib\n            [hkey_local_machine\\\\software\\\\gtkmm\\\\2.4;path]/lib\n        )"}, {"filenames": ["${_libd_list}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library(${_var}_debug\n            names ${_libd_list}\n            paths\n            $env{gtkmm_basepath}/lib\n            [hkey_current_user\\\\software\\\\gtkmm\\\\2.4;path]/lib\n            [hkey_local_machine\\\\software\\\\gtkmm\\\\2.4;path]/lib\n        )"}, {"filenames": ["glib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_glib_library glib false true)"}, {"filenames": ["gobject"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gobject_library gobject false true)"}, {"filenames": ["gdk_pixbuf"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdk_pixbuf_library gdk_pixbuf false true)"}, {"filenames": ["gdk-x11"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdk_library gdk-x11 false true)"}, {"filenames": ["gtk-x11"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtk_library gtk-x11 false true)"}, {"filenames": ["gdk-win32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdk_library gdk-win32 false true)"}, {"filenames": ["gtk-win32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtk_library gtk-win32 false true)"}, {"filenames": ["cairo"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_cairo_library cairo false false)"}, {"filenames": ["pango"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_pango_library pango false true)"}, {"filenames": ["atk"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_atk_library atk false true)"}, {"filenames": ["glibmm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_glibmm_library glibmm true true)"}, {"filenames": ["gdkmm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdkmm_library gdkmm true true)"}, {"filenames": ["gtkmm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtkmm_library gtkmm true true)"}, {"filenames": ["cairomm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_cairomm_library cairomm true true)"}, {"filenames": ["pangomm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_pangomm_library pangomm true true)"}, {"filenames": ["sigc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_sigc++_library sigc true true)"}, {"filenames": ["giomm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_giomm_library giomm true true)"}, {"filenames": ["atkmm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_atkmm_library atkmm true true)"}, {"filenames": ["glade"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_glade_library glade false true)"}, {"filenames": ["glademm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK2.cmake", "content": "find_library    (gtk2_glademm_library glademm true true)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osg_functions", "version": null, "version_op": null, "unified_name": "osg_functions", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Findosg_functions.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Findosg_functions.cmake", "content": "find_library(${module_uc}_library\n       names ${library}\n       hints\n            $env{${module_uc}_dir}\n            $env{osg_dir}\n            $env{osgdir}\n            $env{osg_root}\n       path_suffixes lib64 lib\n       paths\n            /sw \n            /opt/local \n            /opt/csw \n            /opt\n            /usr/freeware\n   )"}, {"filenames": ["${library}d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Findosg_functions.cmake", "content": "find_library(${module_uc}_library_debug\n       names ${library}d\n       hints\n            $env{${module_uc}_dir}\n            $env{osg_dir}\n            $env{osgdir}\n            $env{osg_root}\n       path_suffixes lib64 lib\n       paths\n            /sw \n            /opt/local \n            /opt/csw \n            /opt\n            /usr/freeware\n    )"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenMP.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fltk2", "version": null, "version_op": null, "unified_name": "fltk2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fltk2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_library(fltk2_base_library names fltk2\n      paths )"}, {"filenames": ["fltk2_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_library(fltk2_gl_library names fltk2_gl \n      paths )"}, {"filenames": ["fltk2_images"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_library(fltk2_images_library names fltk2_images\n      paths )"}, {"filenames": ["fluid2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_program(fltk2_fluid_executable fluid2 paths \n        ${fltk2_executable_dirs}\n        ${fltk2_executable_dirs}/relwithdebinfo\n        ${fltk2_executable_dirs}/debug\n        ${fltk2_executable_dirs}/release\n        no_system_path)"}, {"filenames": ["fluid2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_program(fltk2_fluid_executable fluid2 ${fltk2_include_dir}/fluid)"}, {"filenames": ["fltk2-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK2.cmake", "content": "find_program(fltk2_config_script fltk2-config paths ${fltk2_bin_dir})"}]}, {"deps": [{"depname": "lua50", "version": null, "version_op": null, "unified_name": "lua50", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua50.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lua50", "lua5.0", "lua-5.0", "lua5", "lua"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua50.cmake", "content": "find_library(lua_library_lua \n  names lua50 lua5.0 lua-5.0 lua5 lua\n  hints\n  $env{lua_dir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["lualib50", "lualib5.0", "lualib5", "lualib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua50.cmake", "content": "find_library(lua_library_lualib \n    names lualib50 lualib5.0 lualib5 lualib\n    hints\n    $env{lualib_dir}\n    $env{lua_dir}\n    path_suffixes lib64 lib\n    paths\n    /usr/local\n    /usr\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n  )"}, {"filenames": ["m"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua50.cmake", "content": "find_library(math_library_for_lua m)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["link"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_linker names link hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}ar"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_ar names ${_cmake_toolchain_prefix}ar hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}ranlib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_ranlib names ${_cmake_toolchain_prefix}ranlib hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}strip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_strip names ${_cmake_toolchain_prefix}strip hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}ld"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_linker names ${_cmake_toolchain_prefix}ld hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}nm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_nm names ${_cmake_toolchain_prefix}nm hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}objdump"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_objdump names ${_cmake_toolchain_prefix}objdump hints ${_cmake_toolchain_location})"}, {"filenames": ["${_cmake_toolchain_prefix}objcopy"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_objcopy names ${_cmake_toolchain_prefix}objcopy hints ${_cmake_toolchain_location})"}, {"filenames": ["install_name_tool"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindBinUtils.cmake", "content": "find_program(cmake_install_name_tool names install_name_tool hints ${_cmake_toolchain_location})"}]}, {"deps": [{"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFreetype.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["freetype", "libfreetype", "freetype219"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFreetype.cmake", "content": "find_library(freetype_library\n  names freetype libfreetype freetype219\n  hints\n  $env{freetype_dir}\n  path_suffixes lib64 lib\n  paths\n  /usr/local/x11r6\n  /usr/local/x11\n  /usr/x11\n  /sw\n  /usr/freeware\n)"}]}, {"deps": [{"depname": "osgvolume", "version": null, "version_op": null, "unified_name": "osgvolume", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgVolume.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgvolume"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgVolume.cmake", "content": "find_library(osgvolume osgvolume)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"file\""], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/GetPrerequisites.cmake", "content": "find_program(file_cmd \"file\")"}, {"filenames": ["\"${item}\""], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/GetPrerequisites.cmake", "content": "find_program(ri \"${item}\" paths \"${exepath};${dirs}\" no_default_path)"}, {"filenames": ["\"${item}\""], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/GetPrerequisites.cmake", "content": "find_program(ri \"${item}\" paths \"${exepath};${dirs}\")"}, {"filenames": ["cygpath"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/GetPrerequisites.cmake", "content": "find_program(cygpath_executable cygpath)"}, {"filenames": ["dumpbin"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/GetPrerequisites.cmake", "content": "find_program(gp_cmd dumpbin paths ${gp_cmd_paths})"}]}, {"deps": [{"depname": "quicktime", "version": null, "version_op": null, "unified_name": "quicktime", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQuickTime.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["quicktime"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime)"}, {"filenames": ["quicktime"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime\n    hints\n    $env{quicktime_dir}/lib\n    $env{quicktime_dir}\n  )"}]}, {"deps": [{"depname": "physfs", "version": null, "version_op": null, "unified_name": "physfs", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPhysFS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["physfs"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPhysFS.cmake", "content": "find_library(physfs_library \n  names physfs\n  hints\n  $env{physfsdir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_rpm_package", "version": null, "version_op": null, "unified_name": "cpack_rpm_package", "extractor_type": "cmake", "context": "  set(cpack_rpm_package_version ${cpack_package_version})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["rpmbuild"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackRPM.cmake", "content": "find_program(rpmbuild_executable rpmbuild)"}, {"filenames": ["alien"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackRPM.cmake", "content": "find_program(alien_executable alien)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "perllibs", "version": null, "version_op": null, "unified_name": "perllibs", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPerlLibs.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${perl_possible_library_name}", "perl${perl_version}", "perl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPerlLibs.cmake", "content": "find_library(perl_library\n    names\n      ${perl_possible_library_name}\n      perl${perl_version}\n      perl\n    paths\n      ${perl_possible_lib_paths}\n  )"}]}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPkgConfig.cmake", "confidence": "High"}, {"depname": "pkg_config", "version": "1", "version_op": null, "unified_name": "pkg_config", "extractor_type": "cmake", "context": "set(pkg_config_version 1)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["pkg-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPkgConfig.cmake", "content": "find_program(pkg_config_executable names pkg-config doc \"pkg-config executable\")"}]}, {"deps": [{"depname": "gccxml", "version": null, "version_op": null, "unified_name": "gccxml", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGCCXML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gccxml", "../gcc_xml/gccxml"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGCCXML.cmake", "content": "find_program(gccxml\n  names gccxml\n        ../gcc_xml/gccxml\n  paths [hkey_current_user\\\\software\\\\kitware\\\\gcc_xml;loc]\n  \"$env{programfiles}/gcc_xml\"\n  \"c:/program files/gcc_xml\"\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cxxtest", "version": null, "version_op": null, "unified_name": "cxxtest", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCxxTest.cmake", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp quiet)", "confidence": "High"}, {"depname": "perl", "version": null, "version_op": null, "unified_name": "perl", "extractor_type": "cmake", "context": "find_package(perl quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cxxtestgen.py"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCxxTest.cmake", "content": "find_program(cxxtest_python_testgen_executable cxxtestgen.py\n         paths ${cxxtest_include_dir})"}, {"filenames": ["cxxtestgen.pl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCxxTest.cmake", "content": "find_program(cxxtest_perl_testgen_executable cxxtestgen.pl\n         paths ${cxxtest_include_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "expat", "version": null, "version_op": null, "unified_name": "expat", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindEXPAT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["expat", "libexpat"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindEXPAT.cmake", "content": "find_library(expat_library names expat libexpat)"}]}, {"deps": [{"depname": "cygwin", "version": null, "version_op": null, "unified_name": "cygwin", "extractor_type": "cmake", "context": "find_package(cygwin)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wzzip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackZIP.cmake", "content": "find_program(zip_executable wzzip paths \"$env{programfiles}/winzip\")"}, {"filenames": ["7z"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackZIP.cmake", "content": "find_program(zip_executable 7z paths \"$env{programfiles}/7-zip\")"}, {"filenames": ["zip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackZIP.cmake", "content": "find_program(zip_executable zip paths \"${cygwin_install_path}/bin\")"}]}, {"deps": [{"depname": "sdl_image", "version": null, "version_op": null, "unified_name": "sdl_image", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_image.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl_image"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_image.cmake", "content": "find_library(sdlimage_library \n  names sdl_image\n  hints\n  $env{sdlimagedir}\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}]}, {"deps": [{"depname": "msvc", "version": "1600", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1600)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["msbuild"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS10FindMake.cmake", "content": "find_program(cmake_make_program\n  names msbuild\n  hints\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\10.0\\\\setup\\\\vs;productdir]\n  \"$env{systemroot}/microsoft.net/framework/[hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\10.0;clr version]/\"\n  \"c:/windows/microsoft.net/framework/[hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\10.0;clr version]/\"\n  \"$env{systemroot}/microsoft.net/framework/[hkey_local_machine\\\\software\\\\microsoft\\\\vcexpress\\\\10.0;clr version]/\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${cmake_generator_fc}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineFortranCompiler.cmake", "content": "find_program(cmake_fortran_compiler\n      names ${cmake_generator_fc}\n      paths ${_fortran_compiler_hints}\n      no_default_path\n      doc \"fortran compiler\")"}, {"filenames": ["${cmake_generator_fc}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineFortranCompiler.cmake", "content": "find_program(cmake_fortran_compiler names ${cmake_generator_fc} doc \"fortran compiler\")"}, {"filenames": ["${cmake_fortran_compiler}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineFortranCompiler.cmake", "content": "find_program(cmake_fortran_compiler_with_path names ${cmake_fortran_compiler})"}]}, {"deps": [{"depname": "htmlhelp", "version": null, "version_op": null, "unified_name": "htmlhelp", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHTMLHelp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["htmlhelp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHTMLHelp.cmake", "content": "find_library(html_help_library \n    htmlhelp\n    \"${html_help_compiler_path}/lib\"\n    \"[hkey_current_user\\\\software\\\\microsoft\\\\html help workshop;installdir]/lib\"\n    \"$env{programfiles}/html help workshop/lib\"\n    \"c:/program files/html help workshop/lib\"\n    )"}, {"filenames": ["hhc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHTMLHelp.cmake", "content": "find_program(html_help_compiler\n    hhc\n    \"[hkey_current_user\\\\software\\\\microsoft\\\\html help workshop;installdir]\"\n    \"$env{programfiles}/html help workshop\"\n    \"c:/program files/html help workshop\" \n    )"}]}, {"deps": [{"depname": "sdl", "version": null, "version_op": null, "unified_name": "sdl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl", "sdl-1.1"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL.cmake", "content": "find_library(sdl_library_temp \n  names sdl sdl-1.1\n  hints\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdlmain", "sdlmain-1.1"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL.cmake", "content": "find_library(sdlmain_library \n      names sdlmain sdlmain-1.1\n      hints\n      $env{sdldir}\n      path_suffixes lib64 lib\n      paths\n      /sw\n      /opt/local\n      /opt/csw\n      /opt\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl_net", "version": null, "version_op": null, "unified_name": "sdl_net", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_net.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl_net"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_net.cmake", "content": "find_library(sdlnet_library \n  names sdl_net\n  hints\n  $env{sdlnetdir}\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}]}, {"deps": [{"depname": "dcmtk", "version": null, "version_op": null, "unified_name": "dcmtk", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDCMTK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDCMTK.cmake", "content": "find_library(dcmtk_${lib}_library\n    ${lib}\n    paths\n    ${dcmtk_dir}/${lib}/libsrc\n    ${dcmtk_dir}/${lib}/libsrc/release\n    ${dcmtk_dir}/${lib}/libsrc/debug\n    ${dcmtk_dir}/${lib}/release\n    ${dcmtk_dir}/${lib}/debug\n    ${dcmtk_dir}/lib)"}, {"filenames": ["${executable}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDCMTK.cmake", "content": "find_program(dcmtk_${executable}_executable ${executable} ${dcmtk_dir}/bin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGnuTLS.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_gnutls gnutls)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gnutls", "libgnutls"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGnuTLS.cmake", "content": "find_library(gnutls_library names gnutls libgnutls\n   hints\n   ${pc_gnutls_libdir}\n   ${pc_gnutls_library_dirs}\n   )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCURL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["curl", "curllib", "libcurl_imp", "curllib_static"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCURL.cmake", "content": "find_library(curl_library names \n    curl\n  \n    curllib\n    libcurl_imp\n    curllib_static\n)"}]}, {"deps": [{"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wx${lib}${_ucd}${_dbg}", "wx${lib}${_dbg}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_library(wx_${lib}${_dbg}\n        names\n        wx${lib}${_ucd}${_dbg} \n        wx${lib}${_dbg}\n        paths ${wx_lib_dir}\n        no_default_path\n        )"}, {"filenames": ["wxbase29${_ucd}${_dbg}", "wxbase28${_ucd}${_dbg}", "wxbase27${_ucd}${_dbg}", "wxbase26${_ucd}${_dbg}", "wxbase25${_ucd}${_dbg}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_library(wx_base${_dbg}\n      names\n      wxbase29${_ucd}${_dbg}\n      wxbase28${_ucd}${_dbg}\n      wxbase27${_ucd}${_dbg}\n      wxbase26${_ucd}${_dbg}\n      wxbase25${_ucd}${_dbg}\n      paths ${wx_lib_dir}\n      no_default_path\n      )"}, {"filenames": ["wxbase29${_ucd}${_dbg}_${lib}", "wxbase28${_ucd}${_dbg}_${lib}", "wxbase27${_ucd}${_dbg}_${lib}", "wxbase26${_ucd}${_dbg}_${lib}", "wxbase25${_ucd}${_dbg}_${lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_library(wx_${lib}${_dbg}\n        names\n        wxbase29${_ucd}${_dbg}_${lib}\n        wxbase28${_ucd}${_dbg}_${lib}\n        wxbase27${_ucd}${_dbg}_${lib}\n        wxbase26${_ucd}${_dbg}_${lib}\n        wxbase25${_ucd}${_dbg}_${lib}\n        paths ${wx_lib_dir}\n        no_default_path\n        )"}, {"filenames": ["wxmsw${_unv}29${_ucd}${_dbg}", "wxmsw${_unv}28${_ucd}${_dbg}", "wxmsw${_unv}27${_ucd}${_dbg}", "wxmsw${_unv}26${_ucd}${_dbg}", "wxmsw${_unv}25${_ucd}${_dbg}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_library(wx_mono${_dbg}\n      names\n      wxmsw${_unv}29${_ucd}${_dbg}\n      wxmsw${_unv}28${_ucd}${_dbg}\n      wxmsw${_unv}27${_ucd}${_dbg}\n      wxmsw${_unv}26${_ucd}${_dbg}\n      wxmsw${_unv}25${_ucd}${_dbg}\n      paths ${wx_lib_dir}\n      no_default_path\n      )"}, {"filenames": ["wxmsw${_unv}29${_ucd}${_dbg}_${lib}", "wxmsw${_unv}28${_ucd}${_dbg}_${lib}", "wxmsw${_unv}27${_ucd}${_dbg}_${lib}", "wxmsw${_unv}26${_ucd}${_dbg}_${lib}", "wxmsw${_unv}25${_ucd}${_dbg}_${lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_library(wx_${lib}${_dbg}\n        names\n        wxmsw${_unv}29${_ucd}${_dbg}_${lib}\n        wxmsw${_unv}28${_ucd}${_dbg}_${lib}\n        wxmsw${_unv}27${_ucd}${_dbg}_${lib}\n        wxmsw${_unv}26${_ucd}${_dbg}_${lib}\n        wxmsw${_unv}25${_ucd}${_dbg}_${lib}\n        paths ${wx_lib_dir}\n        no_default_path\n        )"}, {"filenames": ["wx-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_program(wxwidgets_config_executable wx-config\n      only_cmake_find_root_path\n      )"}, {"filenames": ["wxrc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWidgets.cmake", "content": "find_program(wxwidgets_wxrc_executable wxrc\n  ${wxwidgets_root_dir}/utils/wxrc/vc_msw\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "shlibdeps_executable", "version": "1", "version_op": null, "unified_name": "shlibdeps_executable", "extractor_type": "cmake", "context": "    set(shlibdeps_executable_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "cpack_debian_package", "version": null, "version_op": null, "unified_name": "cpack_debian_package", "extractor_type": "cmake", "context": "  set(cpack_debian_package_version ${cpack_package_version})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["dpkg-shlibdeps"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackDeb.cmake", "content": "find_program(shlibdeps_executable dpkg-shlibdeps)"}, {"filenames": ["dpkg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CPackDeb.cmake", "content": "find_program(dpkg_cmd dpkg)"}]}, {"deps": [{"depname": "osgmanipulator", "version": null, "version_op": null, "unified_name": "osgmanipulator", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgManipulator.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgmanipulator"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgManipulator.cmake", "content": "find_library(osgmanipulator osgmanipulator)"}]}, {"deps": [{"depname": "osgshadow", "version": null, "version_op": null, "unified_name": "osgshadow", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgShadow.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgshadow"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgShadow.cmake", "content": "find_library(osgshadow osgshadow)"}]}, {"deps": [{"depname": "jni", "version": null, "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJNI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jawt"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJNI.cmake", "content": "find_library(java_awt_library jawt \n    paths ${java_awt_library_directories}\n  )"}, {"filenames": ["jvm", "javavm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJNI.cmake", "content": "find_library(java_jvm_library names jvm javavm\n    paths ${java_jvm_library_directories}\n  )"}]}, {"deps": [{"depname": "tclstub", "version": null, "version_op": null, "unified_name": "tclstub", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclStub.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tclstub", "tclstub${tk_library_version}", "tclstub${tcl_tclsh_version}", "tclstub${tk_wish_version}", "tclstub86", "tclstub8.6", "tclstub85", "tclstub8.5", "tclstub84", "tclstub8.4", "tclstub83", "tclstub8.3", "tclstub82", "tclstub8.2", "tclstub80", "tclstub8.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclStub.cmake", "content": "find_library(tcl_stub_library\n  names \n  tclstub \n  tclstub${tk_library_version} tclstub${tcl_tclsh_version} tclstub${tk_wish_version}\n  tclstub86 tclstub8.6\n  tclstub85 tclstub8.5 \n  tclstub84 tclstub8.4 \n  tclstub83 tclstub8.3 \n  tclstub82 tclstub8.2 \n  tclstub80 tclstub8.0\n  paths ${tcltk_possible_lib_paths}\n)"}, {"filenames": ["tkstub", "tkstub${tcl_library_version}", "tkstub${tcl_tclsh_version}", "tkstub${tk_wish_version}", "tkstub86", "tkstub8.6", "tkstub85", "tkstub8.5", "tkstub84", "tkstub8.4", "tkstub83", "tkstub8.3", "tkstub82", "tkstub8.2", "tkstub80", "tkstub8.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclStub.cmake", "content": "find_library(tk_stub_library \n  names \n  tkstub \n  tkstub${tcl_library_version} tkstub${tcl_tclsh_version} tkstub${tk_wish_version}\n  tkstub86 tkstub8.6\n  tkstub85 tkstub8.5 \n  tkstub84 tkstub8.4 \n  tkstub83 tkstub8.3 \n  tkstub82 tkstub8.2 \n  tkstub80 tkstub8.0\n  paths ${tcltk_possible_lib_paths}\n)"}, {"filenames": ["ttkstub", "ttkstub${tcl_library_version}", "ttkstub${tcl_tclsh_version}", "ttkstub${tk_wish_version}", "ttkstub88", "ttkstub8.8", "ttkstub87", "ttkstub8.7", "ttkstub86", "ttkstub8.6", "ttkstub85", "ttkstub8.5"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclStub.cmake", "content": "find_library(ttk_stub_library \n  names \n  ttkstub \n  ttkstub${tcl_library_version} ttkstub${tcl_tclsh_version} ttkstub${tk_wish_version}\n  ttkstub88 ttkstub8.8\n  ttkstub87 ttkstub8.7\n  ttkstub86 ttkstub8.6\n  ttkstub85 ttkstub8.5 \n  paths ${tcltk_possible_lib_paths}\n)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["xcodebuild"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindXCode.cmake", "content": "find_program(cmake_make_program\n  names xcodebuild\n  paths\n  /usr/bin\n  )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["javac"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineJavaCompiler.cmake", "content": "find_program(cmake_java_compiler\n      names javac\n      paths ${java_bin_path}\n    )"}, {"filenames": ["java"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineJavaCompiler.cmake", "content": "find_program(cmake_java_runtime\n      names java\n      paths ${java_bin_path}\n    )"}, {"filenames": ["jar"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineJavaCompiler.cmake", "content": "find_program(cmake_java_archive\n      names jar\n      paths ${java_bin_path}\n    )"}]}, {"deps": [{"depname": "cups", "version": null, "version_op": null, "unified_name": "cups", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCups.cmake", "confidence": "High"}, {"depname": "cups", "version": null, "version_op": null, "unified_name": "cups", "extractor_type": "cmake", "context": "check_library_exists(cups ippdeleteattribute \"\" cups_has_ipp_delete_attribute)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cups"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCups.cmake", "content": "find_library(cups_libraries names cups )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osganimation", "version": null, "version_op": null, "unified_name": "osganimation", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgAnimation.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osganimation"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgAnimation.cmake", "content": "find_library(osganimation osganimation)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc", "version": "1310", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1310)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["devenv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS71FindMake.cmake", "content": "find_program(cmake_make_program\n  names devenv\n  paths\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\7.1\\\\setup\\\\vs;environmentdirectory]\n  \"$env{programfiles}/microsoft visual studio .net/common7/ide\"\n  \"c:/program files/microsoft visual studio .net/common7/ide\"\n  \"c:/program files/microsoft visual studio.net/common7/ide\"\n  \"/program files/microsoft visual studio .net/common7/ide/\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fontconfig"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_fontconfig_library names fontconfig)"}, {"filenames": ["dbus-1"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_dbus_library names dbus-1 )"}, {"filenames": ["glib-2.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_glib_library names glib-2.0 )"}, {"filenames": ["gthread-2.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_gthread_library names gthread-2.0 )"}, {"filenames": ["gobject-2.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_gobject_library names gobject-2.0 paths ${_glib_query_output} )"}, {"filenames": ["rt"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Qt4ConfigDependentSettings.cmake", "content": "find_library(qt_rt_library names rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tclsh", "version": null, "version_op": null, "unified_name": "tclsh", "extractor_type": "cmake", "context": "find_package(tclsh)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ecosconfig"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/UseEcos.cmake", "content": "find_program(ecosconfig_executable names ecosconfig)"}]}, {"deps": [{"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLAPACK.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths env lib\n    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env dyld_library_path\n    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env ld_library_path\n    )"}]}, {"deps": [{"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTIFF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${tiff_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTIFF.cmake", "content": "find_library(tiff_library names ${tiff_names} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "producer", "version": null, "version_op": null, "unified_name": "producer", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProducer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["producer"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProducer.cmake", "content": "find_library(producer_library \n  names producer\n  hints\n  $env{producer_dir}\n  $env{osg_dir}\n  $env{osgdir}\n  path_suffixes lib64 lib\n  paths\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt", "version": null, "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["qmake"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt.cmake", "content": "find_program(qt_qmake_executable_findqt names qmake paths \"${qt_search_path}/bin\" \"$env{qtdir}/bin\")"}]}, {"deps": [{"depname": "osgproducer", "version": null, "version_op": null, "unified_name": "osgproducer", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgProducer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgproducer"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgProducer.cmake", "content": "find_library(osgproducer osgproducer)"}]}, {"deps": [{"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonLibs.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python${_current_version_no_dots}_d", "python"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonLibs.cmake", "content": "find_library(python_debug_library\n      names python${_current_version_no_dots}_d python\n      paths\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs/debug\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonLibs.cmake", "content": "find_library(python_library\n    names python${_current_version_no_dots} python${_current_version}\n    paths\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n    \n    no_system_environment_path\n  )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonLibs.cmake", "content": "find_library(python_library\n    names python${_current_version_no_dots} python${_current_version}\n    \n    no_system_environment_path\n    \n    path_suffixes python${_current_version}/config\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindALSA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["asound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindALSA.cmake", "content": "find_library(alsa_library names asound\n          doc \"the alsa (asound) library\"\n)"}]}, {"deps": [{"depname": "gif", "version": null, "version_op": null, "unified_name": "gif", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGIF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${potential_gif_libs}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGIF.cmake", "content": "find_library(gif_library \n  names ${potential_gif_libs}\n  hints\n  $env{gif_dir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;osg_root]\n  /usr/freeware\n)"}]}, {"deps": [{"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLUT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glut", "glut32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLUT.cmake", "content": "find_library( glut_glut_library names glut glut32\n    paths\n    ${opengl_library_dir}\n    ${glut_root_path}/release\n    )"}, {"filenames": ["glut"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLUT.cmake", "content": "find_library( glut_glut_library glut\n      /usr/openwin/lib\n      )"}, {"filenames": ["xi"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLUT.cmake", "content": "find_library( glut_xi_library xi\n      /usr/openwin/lib\n      )"}, {"filenames": ["xmu"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLUT.cmake", "content": "find_library( glut_xmu_library xmu\n      /usr/openwin/lib\n      )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgTerrain.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgterrain"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgTerrain.cmake", "content": "find_library(osgterrain osgterrain)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "unixcommands", "version": null, "version_op": null, "unified_name": "unixcommands", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bash"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(bash\n  bash\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["cp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(cp\n  cp\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["gzip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(gzip\n  gzip\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["mv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(mv\n  mv\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["rm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(rm\n  rm\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["tar", "gtar", "path", "${cygwin_install_path}/bin", "/bin", "/usr/bin", "/usr/local/bin", "/sbin"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindUnixCommands.cmake", "content": "find_program(tar\n  names \n  tar \n  gtar\n  path\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}]}, {"deps": [{"depname": "tiff_right", "version": "1", "version_op": null, "unified_name": "tiff_right", "extractor_type": "cmake", "context": "set(tiff_right_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libxslt", "version": null, "version_op": null, "unified_name": "xslt", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibXslt.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libxslt", "version": null, "version_op": null, "unified_name": "xslt", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libxslt libxslt)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xslt", "libxslt"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibXslt.cmake", "content": "find_library(libxslt_libraries names xslt libxslt\n    hints\n   ${pc_libxslt_libdir}\n   ${pc_libxslt_library_dirs}\n  )"}]}, {"deps": [{"depname": "curses", "version": null, "version_op": null, "unified_name": "curses", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "confidence": "High"}, {"depname": "\"${curses_curses_library}\"", "version": null, "version_op": null, "unified_name": "\"${curses_curses_library}\"", "extractor_type": "cmake", "context": "check_library_exists(\"${curses_curses_library}\" \n    wsyncup \"\" curses_curses_has_wsyncup)", "confidence": "High"}, {"depname": "\"${curses_ncurses_library}\"", "version": null, "version_op": null, "unified_name": "\"${curses_ncurses_library}\"", "extractor_type": "cmake", "context": "check_library_exists(\"${curses_ncurses_library}\" \n      wsyncup \"\" curses_ncurses_has_wsyncup)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["curses"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_curses_library names curses )"}, {"filenames": ["ncurses"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_ncurses_library names ncurses )"}, {"filenames": ["cur_colr"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_extra_library cur_colr hints \"${_curseslibdir}\")"}, {"filenames": ["cur_colr"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_extra_library cur_colr )"}, {"filenames": ["form"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_form_library form hints \"${_curseslibdir}\")"}, {"filenames": ["form"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCurses.cmake", "content": "find_library(curses_form_library form )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "selfpackers", "version": null, "version_op": null, "unified_name": "selfpackers", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSelfPackers.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["upx"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSelfPackers.cmake", "content": "find_program(self_packer_for_executable\n  upx\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}, {"filenames": ["upx"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSelfPackers.cmake", "content": "find_program(self_packer_for_shared_lib\n  upx\n  ${cygwin_install_path}/bin\n  /bin\n  /usr/bin \n  /usr/local/bin\n  /sbin\n)"}]}, {"deps": [{"depname": "openthreads", "version": null, "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenThreads.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openthreads", "openthreadswin32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenThreads.cmake", "content": "find_library(openthreads_library \n    names openthreads openthreadswin32 \n    hints\n        $env{openthreads_library_dir}\n        $env{openthreads_dir}\n        $env{osg_library_dir}\n        $env{osg_dir}\n        $env{osgdir}\n        $env{openthreads_root}\n        $env{osg_root}\n    paths\n        /sw\n        /opt/local\n        /opt/csw\n        /opt\n        /usr/freeware\n    path_suffixes lib64 lib\n)"}, {"filenames": ["openthreadsd", "openthreadswin32d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenThreads.cmake", "content": "find_library(openthreads_library_debug \n    names openthreadsd openthreadswin32d\n    hints\n        $env{openthreads_debug_library_dir}\n        $env{openthreads_library_dir}\n        $env{openthreads_dir}\n        $env{osg_library_dir}\n        $env{osg_dir}\n        $env{osgdir}\n        $env{openthreads_root}\n        $env{osg_root}\n    paths\n        /sw\n        /opt/local\n        /opt/csw\n        /opt\n        /usr/freeware\n    path_suffixes lib64 lib\n)"}]}, {"deps": [{"depname": "cable", "version": null, "version_op": null, "unified_name": "cable", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cabletclfacility"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_library(cable_tcl_library names cabletclfacility paths\n                 ${cable_library_path}\n                 ${cable_library_path}/*)"}, {"filenames": ["cabletclfacility"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_library(cable_tcl_library names cabletclfacility paths\n                 ${cable_binary_dir}/cabletclfacility\n                 ${cable_binary_dir}/cabletclfacility/*)"}, {"filenames": ["cabletclfacility"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_library(cable_tcl_library names cabletclfacility paths\n               ${cable_root_bin}/../lib/cable)"}, {"filenames": ["cable"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_program(cable names cable paths\n                 ${cable_executable_path}\n                 ${cable_executable_path}/*)"}, {"filenames": ["cable"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_program(cable names cable paths\n                 ${cable_binary_dir}/executables\n                 ${cable_binary_dir}/executables/*)"}, {"filenames": ["cable"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCABLE.cmake", "content": "find_program(cable names cable)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${cmake_generator_cxx}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCXXCompiler.cmake", "content": "find_program(cmake_cxx_compiler names ${cmake_generator_cxx} paths ${_cmake_user_c_compiler_path} doc \"c++ compiler\" no_default_path)"}, {"filenames": ["${cmake_generator_cxx}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCXXCompiler.cmake", "content": "find_program(cmake_cxx_compiler names ${cmake_generator_cxx} doc \"c++ compiler\")"}, {"filenames": ["${cmake_cxx_compiler}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCXXCompiler.cmake", "content": "find_program(cmake_cxx_compiler_with_path names ${cmake_cxx_compiler})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "devil", "version": null, "version_op": null, "unified_name": "devil", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDevIL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["il", "devil"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDevIL.cmake", "content": "find_library(il_libraries\n  names il devil\n  path_suffixes lib64 lib lib32\n  doc \"the file that corresponds to the base il library.\"\n)"}, {"filenames": ["ilut"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDevIL.cmake", "content": "find_library(ilut_libraries\n  names ilut\n  path_suffixes lib64 lib lib32\n  doc \"the file that corresponds to the il (system?) utility library.\"\n)"}, {"filenames": ["ilu"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDevIL.cmake", "content": "find_library(ilu_libraries\n  names ilu\n  path_suffixes lib64 lib lib32\n  doc \"the file that corresponds to the il utility library.\"\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpeg", "version": null, "version_op": null, "unified_name": "mpeg", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpeg2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG.cmake", "content": "find_library(mpeg_mpeg2_library mpeg2\n  /usr/local/livid/mpeg2dec/libmpeg2/.libs\n)"}, {"filenames": ["vo"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG.cmake", "content": "find_library( mpeg_vo_library vo\n  /usr/local/livid/mpeg2dec/libvo/.libs\n)"}]}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDoxygen.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["doxygen"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDoxygen.cmake", "content": "find_program(doxygen_executable\n  names doxygen\n  paths\n    \"[hkey_local_machine\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\uninstall\\\\doxygen_is1;inno setup: app path]/bin\"\n    /applications/doxygen.app/contents/resources\n    /applications/doxygen.app/contents/macos\n  doc \"doxygen documentation generation tool (http://www.doxygen.org)\"\n)"}, {"filenames": ["dot"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDoxygen.cmake", "content": "find_program(doxygen_dot_executable\n    names dot\n    paths \n      \"$env{programfiles}/graphviz 2.21/bin\"\n      \"c:/program files/graphviz 2.21/bin\"\n      \"$env{programfiles}/att/graphviz/bin\"\n      \"c:/program files/att/graphviz/bin\"\n      [hkey_local_machine\\\\software\\\\att\\\\graphviz;installpath]/bin\n      /applications/graphviz.app/contents/macos\n      /applications/doxygen.app/contents/resources\n      /applications/doxygen.app/contents/macos\n    doc \"graphviz dot tool for using doxygen\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ctest"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTestTargets.cmake", "content": "find_program(cmake_ctest_command ctest ${cmake_host_path} ${executable_output_path})"}]}, {"deps": [{"depname": "hspell", "version": null, "version_op": null, "unified_name": "hspell", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHSPELL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hspell"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindHSPELL.cmake", "content": "find_library(hspell_libraries names hspell)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ruby", "version": null, "version_op": null, "unified_name": "ruby", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRuby.cmake", "confidence": "High"}, {"depname": "ruby", "version": "1.9.0", "version_op": null, "unified_name": "ruby", "extractor_type": "cmake", "context": "\n\nset(ruby_version \"1.9.0\")", "confidence": "Low"}, {"depname": "ruby_nodot", "version": "190", "version_op": null, "unified_name": "ruby_nodot", "extractor_type": "cmake", "context": "set(_ruby_nodot_version \"190\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_ruby_possible_lib_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRuby.cmake", "content": "find_library(ruby_library names ${_ruby_possible_lib_names} hints ${ruby_possible_lib_dir} )"}, {"filenames": ["ruby"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRuby.cmake", "content": "find_program(ruby_executable names ruby)"}]}, {"deps": [{"depname": "coin3d", "version": null, "version_op": null, "unified_name": "coin3d", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coin"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "content": "find_library(coin3d_libraries coin)"}, {"filenames": ["coin2d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "content": "find_library(coin3d_library_debug coin2d\n      \"[hkey_local_machine\\\\software\\\\sim\\\\coin3d\\\\2;installation path]/lib\"\n    )"}, {"filenames": ["coin2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "content": "find_library(coin3d_library_release coin2\n      \"[hkey_local_machine\\\\software\\\\sim\\\\coin3d\\\\2;installation path]/lib\"\n    )"}, {"filenames": ["coin"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "content": "find_library(coin3d_libraries coin\n      /library/frameworks/inventor.framework/libraries\n    )"}, {"filenames": ["coin"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCoin3D.cmake", "content": "find_library(coin3d_libraries coin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "perl", "version": null, "version_op": null, "unified_name": "perl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPerl.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["perl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPerl.cmake", "content": "find_program(perl_executable\n  names perl\n  paths ${perl_possible_bin_paths}\n  )"}]}, {"deps": [{"depname": "dart", "version": null, "version_op": null, "unified_name": "dart", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindDart.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gnuplot", "version": null, "version_op": null, "unified_name": "gnuplot", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGnuplot.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gnuplot", "pgnuplot", "wgnupl32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGnuplot.cmake", "content": "find_program(gnuplot_executable\n  names \n  gnuplot\n  pgnuplot\n  wgnupl32\n  paths\n  ${cygwin_install_path}/bin\n)"}]}, {"deps": [{"depname": "postgresql", "version": null, "version_op": null, "unified_name": "postgresql", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPostgreSQL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${postgresql_library_to_find}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPostgreSQL.cmake", "content": "find_library( postgresql_library\n names ${postgresql_library_to_find}\n paths\n   $env{postgresql_root}\n path_suffixes\n   lib\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "rti", "version": null, "version_op": null, "unified_name": "rti", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRTI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rti", "rti-ng"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRTI.cmake", "content": "find_library(rti_library\n  names rti rti-ng\n  paths ${rti_possible_dirs}\n  path_suffixes lib\n  doc \"the rti library\")"}, {"filenames": ["fedtime"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindRTI.cmake", "content": "find_library(rti_fedtime_library\n  names fedtime\n  paths ${rti_possible_dirs}\n  path_suffixes lib\n  doc \"the fedtime library\")"}]}, {"deps": [{"depname": "sdl_sound", "version": null, "version_op": null, "unified_name": "sdl_sound", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl_sound"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(sdl_sound_library \n  names sdl_sound\n  hints\n  $env{sdlsounddir}/lib\n  $env{sdlsounddir}\n  $env{sdldir}/lib\n  $env{sdldir}\n  paths\n  /usr/local/lib\n  /usr/lib\n  /sw/lib\n  /opt/local/lib\n  /opt/csw/lib\n  /opt/lib\n  )"}, {"filenames": ["libmikmod-coreaudio", "mikmod"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(mikmod_library\n         names libmikmod-coreaudio mikmod\n         paths\n         $env{mikmoddir}/lib\n         $env{mikmoddir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n       )"}, {"filenames": ["modplug"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(modplug_library\n         names modplug\n         paths\n         $env{modplugdir}/lib\n         $env{modplugdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n       )"}, {"filenames": ["vorbis", "vorbis", "vorbis"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(vorbis_library\n         names vorbis vorbis vorbis\n         paths\n         $env{vorbisdir}/lib\n         $env{vorbisdir}\n         $env{oggdir}/lib\n         $env{oggdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n         )"}, {"filenames": ["ogg", "ogg", "ogg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(ogg_library\n         names ogg ogg ogg\n         paths\n         $env{oggdir}/lib\n         $env{oggdir}\n         $env{vorbisdir}/lib\n         $env{vorbisdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n         )"}, {"filenames": ["smpeg", "smpeg", "smpeg", "smpeg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(smpeg_library\n         names smpeg smpeg smpeg smpeg\n         paths\n         $env{smpegdir}/lib\n         $env{smpegdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n         )"}, {"filenames": ["flac", "flac"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(flac_library\n         names flac flac\n         paths\n         $env{flacdir}/lib\n         $env{flacdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n         )"}, {"filenames": ["speex", "speex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(speex_library\n         names speex speex\n         paths\n         $env{speexdir}/lib\n         $env{speexdir}\n         $env{sdlsounddir}/lib\n         $env{sdlsounddir}\n         $env{sdldir}/lib\n         $env{sdldir}\n         /usr/local/lib\n         /usr/lib\n         /sw/lib\n         /opt/local/lib\n         /opt/csw/lib\n       /opt/lib\n         )"}, {"filenames": ["ogg", "ogg", "ogg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_sound.cmake", "content": "find_library(ogg_library\n           names ogg ogg ogg\n           paths\n           $env{oggdir}/lib\n           $env{oggdir}\n           $env{vorbisdir}/lib\n           $env{vorbisdir}\n           $env{speexdir}/lib\n           $env{speexdir}\n           $env{sdlsounddir}/lib\n           $env{sdlsounddir}\n           $env{sdldir}/lib\n           $env{sdldir}\n           /usr/local/lib\n           /usr/lib\n           /sw/lib\n           /opt/local/lib\n           /opt/csw/lib\n         /opt/lib\n           )"}]}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGit.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${git_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGit.cmake", "content": "find_program(git_executable\n  names ${git_names}\n  doc \"git command line client\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openal", "al", "openal", "openal32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenAL.cmake", "content": "find_library(openal_library \n  names openal al openal openal32\n  hints\n  $env{openaldir}\n  path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  [hkey_local_machine\\\\software\\\\creative\\ labs\\\\openal\\ 1.1\\ software\\ development\\ kit\\\\1.00.0000;installdir]\n)"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "matlab", "version": null, "version_op": null, "unified_name": "matlab", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libmex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_mex_library\n    libmex\n    ${matlab_root}\n    )"}, {"filenames": ["libmx"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_mx_library\n    libmx\n    ${matlab_root}\n    )"}, {"filenames": ["libeng"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_eng_library\n    libeng\n    ${matlab_root}\n    )"}, {"filenames": ["mex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_mex_library\n    mex\n    ${matlab_root}\n    )"}, {"filenames": ["mx"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_mx_library\n    mx\n    ${matlab_root}\n    )"}, {"filenames": ["eng"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMatlab.cmake", "content": "find_library(matlab_eng_library\n    eng\n    ${matlab_root}\n    )"}]}, {"deps": [{"depname": "tiff_right", "version": "1", "version_op": null, "unified_name": "tiff_right", "extractor_type": "cmake", "context": "set(tiff_right_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBLAS.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths env lib\n    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env dyld_library_path\n    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n    names ${_library}\n    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env ld_library_path\n    )"}]}, {"deps": [{"depname": "cmake_build_setting_cmake_major", "version": "40", "version_op": null, "unified_name": "cmake_build_setting_cmake", "extractor_type": "cmake", "context": "\nset(cmake_build_setting_cmake_major_version \"${vtk40_cmake_major_version}\")", "confidence": "Low"}, {"depname": "cmake_build_setting_cmake_minor", "version": "40", "version_op": null, "unified_name": "cmake_build_setting_cmake", "extractor_type": "cmake", "context": "set(cmake_build_setting_cmake_minor_version \"${vtk40_cmake_minor_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindZLIB.cmake", "confidence": "High"}, {"depname": "zlib_major", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "\n    set(zlib_major_version \"${zlib_version_major}\")", "confidence": "Low"}, {"depname": "zlib_minor", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "    set(zlib_minor_version \"${zlib_version_minor}\")", "confidence": "Low"}, {"depname": "zlib_patch", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "    set(zlib_patch_version \"${zlib_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${zlib_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindZLIB.cmake", "content": "find_library(zlib_library\n    names\n        ${zlib_names}\n    paths\n        \"[hkey_local_machine\\\\software\\\\gnuwin32\\\\zlib;installpath]/lib\"\n)"}]}, {"deps": [{"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets)", "confidence": "High"}, {"depname": "wxwindows", "version": null, "version_op": null, "unified_name": "wxwindows", "extractor_type": "cmake", "context": "find_package( wxwindows )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "aspell", "version": null, "version_op": null, "unified_name": "aspell", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindASPELL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["aspell", "aspell-15", "libaspell-15", "libaspell"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindASPELL.cmake", "content": "find_library(aspell_libraries names aspell aspell-15 libaspell-15 libaspell)"}]}, {"deps": [{"depname": "gettext", "version": null, "version_op": null, "unified_name": "gettext", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGettext.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["msgmerge"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGettext.cmake", "content": "find_program(gettext_msgmerge_executable msgmerge)"}, {"filenames": ["msgfmt"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGettext.cmake", "content": "find_program(gettext_msgfmt_executable msgfmt)"}]}, {"deps": [{"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPNG.cmake", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${png_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPNG.cmake", "content": "find_library(png_library names ${png_names} )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineRCCompiler.cmake", "content": "find_program(cmake_rc_compiler names rc doc \"rc compiler\")"}]}, {"deps": [{"depname": "sdl_ttf", "version": null, "version_op": null, "unified_name": "sdl_ttf", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_ttf.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl_ttf"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_ttf.cmake", "content": "find_library(sdlttf_library \n  names sdl_ttf\n  hints\n  $env{sdlttfdir}\n  $env{sdldir}\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n    path_suffixes lib64 lib\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pike", "version": null, "version_op": null, "unified_name": "pike", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPike.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pike7.4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPike.cmake", "content": "find_program(pike_executable\n  names pike7.4\n  )"}]}, {"deps": [{"depname": "packagemessage", "version": null, "version_op": null, "unified_name": "packagemessage", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPackageMessage.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "dart", "version": null, "version_op": null, "unified_name": "dart", "extractor_type": "cmake", "context": "find_package(dart quiet)", "confidence": "High"}, {"depname": "tclsh", "version": null, "version_op": null, "unified_name": "tclsh", "extractor_type": "cmake", "context": "find_package(tclsh)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gzip", "compress", "zip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Dart.cmake", "content": "find_program(compressioncommand names gzip compress zip \n    doc \"path to program used to compress files for transfer to the dart server\")"}, {"filenames": ["gunzip"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Dart.cmake", "content": "find_program(gunzipcommand gunzip doc \"path to gunzip executable\")"}, {"filenames": ["java"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Dart.cmake", "content": "find_program(javacommand java doc \"path to java command, used by the dart server to create html.\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "bullet", "version": null, "version_op": null, "unified_name": "bullet", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBullet.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBullet.cmake", "content": "find_library(${_var}\n     names \n        ${argn}\n     paths\n        ${bullet_root}\n        ${bullet_root}/out/release8/libs\n        ${bullet_root}/out/debug8/libs\n     path_suffixes lib\n  )"}]}, {"deps": [{"depname": "cvs", "version": null, "version_op": null, "unified_name": "cvs", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCVS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cvs"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCVS.cmake", "content": "find_program(cvs_executable cvs\n  ${tortoisecvs_defaulticon}\n  ${tortoisecvs_folder_command}\n  ${wincvs_folder_command}\n  ${cvsnt_services_eventmessagepath}\n  ${cvsnt_typelib_win32}\n  \"[hkey_local_machine\\\\software\\\\cvs\\\\pserver;installpath]\"\n  doc \"cvs command line client\"\n  )"}]}, {"deps": [{"depname": "kde3", "version": null, "version_op": null, "unified_name": "kde3", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "confidence": "High"}, {"depname": "qt3", "version": null, "version_op": null, "unified_name": "qt3", "extractor_type": "cmake", "context": "find_package(qt3 required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["kdecore"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "content": "find_library(kde3_kdecore_library names kdecore\n  hints\n  $env{kdedir}/lib\n  ${kde3prefix}/lib\n  paths\n  /opt/kde3/lib\n  /opt/kde/lib\n)"}, {"filenames": ["kde-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "content": "find_program(kdeconfig_executable names kde-config\n  hints\n   $env{kdedir}/bin\n   paths\n  /opt/kde3/bin\n  /opt/kde/bin\n  )"}, {"filenames": ["dcopidl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "content": "find_program(kde3_dcopidl_executable names dcopidl\n  hints\n  $env{kdedir}/bin\n  ${kde3prefix}/bin\n  paths\n  /opt/kde3/bin\n  /opt/kde/bin\n  )"}, {"filenames": ["dcopidl2cpp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "content": "find_program(kde3_dcopidl2cpp_executable names dcopidl2cpp\n  hints\n  $env{kdedir}/bin\n  ${kde3prefix}/bin\n  paths\n  /opt/kde3/bin\n  /opt/kde/bin\n  )"}, {"filenames": ["kconfig_compiler"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE3.cmake", "content": "find_program(kde3_kcfgc_executable names kconfig_compiler\n  hints\n  $env{kdedir}/bin\n  ${kde3prefix}/bin\n  paths\n  /opt/kde3/bin\n  /opt/kde/bin\n  )"}]}, {"deps": [{"depname": "msvc", "version": "1500", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1500)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["devenv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS9FindMake.cmake", "content": "find_program(cmake_make_program\n  names devenv\n  hints\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\9.0\\\\setup\\\\vs;environmentdirectory]\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\9.0\\\\setup;dbghelp_path]\n  \"$env{programfiles}/microsoft visual studio 9.0/common7/ide\"\n  \"$env{programfiles}/microsoft visual studio9.0/common7/ide\"\n  \"$env{programfiles}/microsoft visual studio 9/common7/ide\"\n  \"$env{programfiles}/microsoft visual studio9/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio 9.0/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio9.0/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio 9/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio9/common7/ide\"\n  \"/program files/microsoft visual studio 9.0/common7/ide/\"\n  \"/program files/microsoft visual studio 9/common7/ide/\"\n  )"}]}, {"deps": [{"depname": "cygwin", "version": null, "version_op": null, "unified_name": "cygwin", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCygwin.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["kdevelop"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindKDevelop3.cmake", "content": "find_program(cmake_kdevelop3_executable names kdevelop doc \"the kdevelop3 executable\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cvs"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(cvscommand cvs )"}, {"filenames": ["svn"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(svncommand svn)"}, {"filenames": ["bzr"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(bzrcommand bzr)"}, {"filenames": ["hg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(hgcommand hg)"}, {"filenames": ["git"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(gitcommand git)"}, {"filenames": ["purify", "valgrind", "boundscheck"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(memorycheck_command\n    names purify valgrind boundscheck\n    paths\n    \"[hkey_local_machine\\\\software\\\\rational software\\\\purify\\\\setup;installfolder]\"\n    doc \"path to the memory checking command, used for memory error detection.\"\n    )"}, {"filenames": ["sbatch"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(slurm_sbatch_command sbatch doc\n    \"path to the slurm sbatch executable\"\n    )"}, {"filenames": ["srun"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(slurm_srun_command srun doc\n    \"path to the slurm srun executable\"\n    )"}, {"filenames": ["scp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(scpcommand scp doc \n    \"path to scp command, used by ctest for submitting results to a dart server\"\n    )"}, {"filenames": ["gcov"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CTest.cmake", "content": "find_program(coverage_command gcov doc \n    \"path to the coverage program that ctest uses for performing coverage inspection\"\n    )"}]}, {"deps": [{"depname": "jasper", "version": null, "version_op": null, "unified_name": "jasper", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJasper.cmake", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jasper", "libjasper"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJasper.cmake", "content": "find_library(jasper_library names jasper libjasper)"}]}, {"deps": [{"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBISON.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bison"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBISON.cmake", "content": "find_program(bison_executable bison doc \"path to the bison executable\")"}]}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProtobuf.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["protobuf"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProtobuf.cmake", "content": "find_library(protobuf_library names protobuf\n             doc \"the google protocol buffers library\"\n)"}, {"filenames": ["protoc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProtobuf.cmake", "content": "find_library(protobuf_protoc_library names protoc\n             doc \"the google protocol buffers compiler library\"\n)"}, {"filenames": ["protoc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindProtobuf.cmake", "content": "find_program(protobuf_protoc_executable names protoc\n             doc \"the google protocol buffers compiler\"\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindVTK.cmake", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk quiet no_module)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt4", "version": null, "version_op": null, "unified_name": "qt4", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "confidence": "High"}, {"depname": "qt_min", "version": "4.0.0", "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "      set(qt_min_version \"4.0.0\")", "confidence": "Low"}, {"depname": "qt_min", "version": "4", "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "      set( qt_min_version ${qt4_find_version} )", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["qtcore${qt_libinfix}", "qtcore${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtcore_library_release\n                 names qtcore${qt_libinfix} qtcore${qt_libinfix}4\n                 hints ${qt_library_dir_tmp}\n                 no_cmake_path no_cmake_environment_path no_system_environment_path\n        )"}, {"filenames": ["qtcore${qt_libinfix}_debug", "qtcore${qt_libinfix}d", "qtcore${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtcore_library_debug\n                 names qtcore${qt_libinfix}_debug qtcore${qt_libinfix}d qtcore${qt_libinfix}d4\n                 hints ${qt_library_dir_tmp}\n                 no_cmake_path no_cmake_environment_path no_system_environment_path\n        )"}, {"filenames": ["${qt_module}${qt_libinfix}", "${qt_module}${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_${_upper_qt_module}_library_release \n                 names ${qt_module}${qt_libinfix} ${qt_module}${qt_libinfix}4\n                 paths ${qt_library_dir} no_default_path\n        )"}, {"filenames": ["${qt_module}${qt_libinfix}_debug", "${qt_module}${qt_libinfix}d", "${qt_module}${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_${_upper_qt_module}_library_debug \n                 names ${qt_module}${qt_libinfix}_debug ${qt_module}${qt_libinfix}d ${qt_module}${qt_libinfix}d4\n                 paths ${qt_library_dir} no_default_path\n        )"}, {"filenames": ["qtuitools${qt_libinfix}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtuitools_library_release names qtuitools${qt_libinfix} paths ${qt_library_dir})"}, {"filenames": ["qtdesignercomponents${qt_libinfix}", "qtdesignercomponents${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtdesignercomponents_library_release names qtdesignercomponents${qt_libinfix} qtdesignercomponents${qt_libinfix}4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtdesignercomponents${qt_libinfix}_debug", "qtdesignercomponents${qt_libinfix}d", "qtdesignercomponents${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtdesignercomponents_library_debug   names qtdesignercomponents${qt_libinfix}_debug qtdesignercomponents${qt_libinfix}d qtdesignercomponents${qt_libinfix}d4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtmain${qt_libinfix}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtmain_library_release names qtmain${qt_libinfix} paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtmain${qt_libinfix}d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtmain_library_debug names qtmain${qt_libinfix}d paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtassistantclient${qt_libinfix}", "qtassistantclient${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtassistantclient_library_release names qtassistantclient${qt_libinfix} qtassistantclient${qt_libinfix}4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtassistantclient${qt_libinfix}_debug", "qtassistantclient${qt_libinfix}d", "qtassistantclient${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtassistantclient_library_debug   names qtassistantclient${qt_libinfix}_debug qtassistantclient${qt_libinfix}d qtassistantclient${qt_libinfix}d4 paths ${qt_library_dir}  no_default_path)"}, {"filenames": ["qtassistantclient${qt_libinfix}", "qtassistantclient${qt_libinfix}4", "qtassistant${qt_libinfix}", "qtassistant${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtassistant_library_release names qtassistantclient${qt_libinfix} qtassistantclient${qt_libinfix}4 qtassistant${qt_libinfix} qtassistant${qt_libinfix}4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtassistantclient${qt_libinfix}_debug", "qtassistantclient${qt_libinfix}d", "qtassistantclient${qt_libinfix}d4", "qtassistant${qt_libinfix}_debug", "qtassistant${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtassistant_library_debug   names qtassistantclient${qt_libinfix}_debug qtassistantclient${qt_libinfix}d qtassistantclient${qt_libinfix}d4 qtassistant${qt_libinfix}_debug qtassistant${qt_libinfix}d4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtclucene${qt_libinfix}", "qtclucene${qt_libinfix}4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtclucene_library_release names qtclucene${qt_libinfix} qtclucene${qt_libinfix}4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtclucene${qt_libinfix}_debug", "qtclucene${qt_libinfix}d", "qtclucene${qt_libinfix}d4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtclucene_library_debug   names qtclucene${qt_libinfix}_debug qtclucene${qt_libinfix}d qtclucene${qt_libinfix}d4 paths ${qt_library_dir} no_default_path)"}, {"filenames": ["qtclucene${qt_libinfix}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_library(qt_qtclucene_library_release names qtclucene${qt_libinfix} paths ${qt_library_dir})"}, {"filenames": ["qmake", "qmake4", "qmake-qt4", "qmake-mac"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_qmake_executable names qmake qmake4 qmake-qt4 qmake-mac paths\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\4.0.0;installdir]/bin\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\versions\\\\4.0.0;installdir]/bin\"\n  \"[hkey_current_user\\\\software\\\\trolltech\\\\versions\\\\${qt_install_version};installdir]/bin\"\n  $env{qtdir}/bin\n  doc \"the qmake executable for the qt installation to use\"\n)"}, {"filenames": ["qmake4", "qmake-qt4"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_qmake_executable names qmake4 qmake-qt4 paths\n      \"[hkey_current_user\\\\software\\\\trolltech\\\\qt3versions\\\\4.0.0;installdir]/bin\"\n      \"[hkey_current_user\\\\software\\\\trolltech\\\\versions\\\\4.0.0;installdir]/bin\"\n      $env{qtdir}/bin\n      doc \"the qmake executable for the qt installation to use\"\n      )"}, {"filenames": ["moc-qt4", "moc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_moc_executable\n    names moc-qt4 moc\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["uic-qt4", "uic"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_uic_executable\n    names uic-qt4 uic\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["uic3"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_uic3_executable\n    names uic3\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["rcc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_rcc_executable \n    names rcc\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["qdbuscpp2xml"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_dbuscpp2xml_executable \n    names qdbuscpp2xml\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["qdbusxml2cpp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_dbusxml2cpp_executable \n    names qdbusxml2cpp\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["lupdate-qt4", "lupdate"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_lupdate_executable\n    names lupdate-qt4 lupdate\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["lrelease-qt4", "lrelease"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_lrelease_executable\n    names lrelease-qt4 lrelease\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["qcollectiongenerator-qt4", "qcollectiongenerator"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_qcollectiongenerator_executable\n    names qcollectiongenerator-qt4 qcollectiongenerator\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["designer-qt4", "designer"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_designer_executable\n    names designer-qt4 designer\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}, {"filenames": ["linguist-qt4", "linguist"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindQt4.cmake", "content": "find_program(qt_linguist_executable\n    names linguist-qt4 linguist\n    paths ${qt_binary_dir}\n    no_default_path\n    )"}]}, {"deps": [{"depname": "squish", "version": null, "version_op": null, "unified_name": "squish", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSquish.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${squish_install_dir}/bin/squishrunner"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSquish.cmake", "content": "find_program(squish_client_executable ${squish_install_dir}/bin/squishrunner doc \"the ${squish_client_executable_string}\")"}, {"filenames": ["${squish_install_dir}/bin/squishserver"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSquish.cmake", "content": "find_program(squish_server_executable ${squish_install_dir}/bin/squishserver doc \"the ${squish_server_executable_string}\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tcl", "version": null, "version_op": null, "unified_name": "tcl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcl", "tcl${tk_library_version}", "tcl${tcl_tclsh_version}", "tcl${tk_wish_version}", "tcl86", "tcl8.6", "tcl85", "tcl8.5", "tcl84", "tcl8.4", "tcl83", "tcl8.3", "tcl82", "tcl8.2", "tcl80", "tcl8.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTCL.cmake", "content": "find_library(tcl_library\n  names \n  tcl   \n  tcl${tk_library_version} tcl${tcl_tclsh_version} tcl${tk_wish_version}\n  tcl86 tcl8.6 \n  tcl85 tcl8.5 \n  tcl84 tcl8.4 \n  tcl83 tcl8.3 \n  tcl82 tcl8.2 \n  tcl80 tcl8.0\n  paths ${tcltk_possible_lib_paths}\n  )"}, {"filenames": ["tk", "tk${tcl_library_version}", "tk${tcl_tclsh_version}", "tk${tk_wish_version}", "tk86", "tk8.6", "tk85", "tk8.5", "tk84", "tk8.4", "tk83", "tk8.3", "tk82", "tk8.2", "tk80", "tk8.0"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTCL.cmake", "content": "find_library(tk_library \n  names \n  tk\n  tk${tcl_library_version} tk${tcl_tclsh_version} tk${tk_wish_version}\n  tk86 tk8.6\n  tk85 tk8.5 \n  tk84 tk8.4 \n  tk83 tk8.3 \n  tk82 tk8.2 \n  tk80 tk8.0\n  paths ${tcltk_possible_lib_paths}\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "unixcommands", "version": null, "version_op": null, "unified_name": "unixcommands", "extractor_type": "cmake", "context": "find_package(unixcommands)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "gnuplot", "version": null, "version_op": null, "unified_name": "gnuplot", "extractor_type": "cmake", "context": "find_package(gnuplot)", "confidence": "High"}, {"depname": "htmlhelp", "version": null, "version_op": null, "unified_name": "htmlhelp", "extractor_type": "cmake", "context": "find_package(htmlhelp)", "confidence": "High"}, {"depname": "perl", "version": null, "version_op": null, "unified_name": "perl", "extractor_type": "cmake", "context": "find_package(perl)", "confidence": "High"}, {"depname": "wget", "version": null, "version_op": null, "unified_name": "wget", "extractor_type": "cmake", "context": "find_package(wget)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSceneGraph.cmake", "confidence": "High"}, {"depname": "${_osg_module}", "version": null, "version_op": null, "unified_name": "${_osg_module}", "extractor_type": "cmake", "context": "find_package(${_osg_module} ${_osg_required} quiet)", "confidence": "High"}, {"depname": "${_osg_module}", "version": null, "version_op": null, "unified_name": "${_osg_module}", "extractor_type": "cmake", "context": "find_package(${_osg_module} quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["latex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(latex_compiler\n  names latex\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["pdflatex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(pdflatex_compiler\n  names pdflatex\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["bibtex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(bibtex_compiler\n  names bibtex\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["makeindex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(makeindex_compiler\n  names makeindex\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["dvips"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(dvips_converter\n  names dvips\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["dvipdfm", "dvipdft", "dvipdf"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(dvipdf_converter\n  names dvipdfm dvipdft dvipdf\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}, {"filenames": ["ps2pdf14.bat"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(ps2pdf_converter\n    names ps2pdf14.bat\n    paths ${ghostscript_library_path}\n  )"}, {"filenames": ["ps2pdf14", "ps2pdf"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(ps2pdf_converter\n    names ps2pdf14 ps2pdf\n  )"}, {"filenames": ["latex2html"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLATEX.cmake", "content": "find_program(latex2html_converter\n  names latex2html\n  paths ${miktex_binary_path}\n        /usr/bin\n)"}]}, {"deps": [{"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJava.cmake", "confidence": "High"}, {"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "        set(java_version ${java_version_major}.${java_version_minor}.${java_version_patch})", "confidence": "Low"}, {"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "        set(java_version ${java_version_major}.${java_version_minor}.${java_version_patch}.${java_version_tweak})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["java"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJava.cmake", "content": "find_program(java_java_executable\n  names java\n  hints ${_java_hints}\n  paths ${_java_paths}\n)"}, {"filenames": ["jar"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJava.cmake", "content": "find_program(java_jar_executable\n  names jar\n  hints ${_java_hints}\n  paths ${_java_paths}\n)"}, {"filenames": ["javac"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindJava.cmake", "content": "find_program(java_javac_executable\n  names javac\n  hints ${_java_hints}\n  paths ${_java_paths}\n)"}]}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBoost.cmake", "confidence": "High"}, {"depname": "boost", "version": "0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "    set(boost_version 0)", "confidence": "Low"}, {"depname": "libboost_", "version": null, "version_op": null, "unified_name": "boost_", "extractor_type": "cmake", "context": "    set(boost_lib_version \"\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_boost_release_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_release\n        names ${_boost_release_names}\n        hints ${_boost_library_search_dirs}\n        no_cmake_system_path\n        doc \"${_boost_docstring_release}\"\n    )"}, {"filenames": ["${_boost_debug_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_debug\n        names ${_boost_debug_names}\n        hints ${_boost_library_search_dirs}\n        no_cmake_system_path\n        doc \"${_boost_docstring_debug}\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonInterp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python2.7", "python2.6", "python2.5", "python2.4", "python2.3", "python2.2", "python2.1", "python2.0", "python1.6", "python1.5", "python"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPythonInterp.cmake", "content": "find_program(python_executable\n  names python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1 python2.0 python1.6 python1.5 python\n  paths\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.7\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.6\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.5\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.4\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.3\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.2\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.1\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\2.0\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\1.6\\\\installpath]\n  [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\1.5\\\\installpath]\n  )"}]}, {"deps": [{"depname": "fltk", "version": null, "version_op": null, "unified_name": "fltk", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["m"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_library(fltk_math_library m)"}, {"filenames": ["fltk", "fltkd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_library(fltk_base_library names fltk fltkd\n      paths )"}, {"filenames": ["fltkgl", "fltkgld", "fltk_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_library(fltk_gl_library names fltkgl fltkgld fltk_gl\n      paths )"}, {"filenames": ["fltkforms", "fltkformsd", "fltk_forms"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_library(fltk_forms_library names fltkforms fltkformsd fltk_forms\n      paths )"}, {"filenames": ["fltkimages", "fltkimagesd", "fltk_images"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_library(fltk_images_library names fltkimages fltkimagesd fltk_images\n      paths )"}, {"filenames": ["fluid"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_program(fltk_fluid_executable fluid paths \n        ${fltk_executable_dirs}\n        ${fltk_executable_dirs}/relwithdebinfo\n        ${fltk_executable_dirs}/debug\n        ${fltk_executable_dirs}/release\n        no_system_path)"}, {"filenames": ["fluid"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_program(fltk_fluid_executable fluid ${fltk_include_dir}/fluid)"}, {"filenames": ["fltk-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLTK.cmake", "content": "find_program(fltk_config_script fltk-config paths ${fltk_bin_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libeay32mdd", "libeay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(lib_eay_debug names libeay32mdd libeay32\n      paths ${openssl_root_dir}/lib/vc\n      )"}, {"filenames": ["libeay32md", "libeay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(lib_eay_release names libeay32md libeay32\n      paths ${openssl_root_dir}/lib/vc\n      )"}, {"filenames": ["ssleay32mdd", "ssleay32", "ssl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(ssl_eay_debug names ssleay32mdd ssleay32 ssl\n      paths ${openssl_root_dir}/lib/vc\n      )"}, {"filenames": ["ssleay32md", "ssleay32", "ssl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(ssl_eay_release names ssleay32md ssleay32 ssl\n      paths ${openssl_root_dir}/lib/vc\n      )"}, {"filenames": ["libeay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(lib_eay names libeay32\n      paths ${openssl_root_dir}/lib/mingw\n      )"}, {"filenames": ["ssleay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(ssl_eay names ssleay32\n      paths ${openssl_root_dir}/lib/mingw\n      )"}, {"filenames": ["libeay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(lib_eay names libeay32\n      paths ${openssl_root_dir}/lib\n      )"}, {"filenames": ["ssleay32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(ssl_eay names ssleay32\n      paths ${openssl_root_dir}/lib\n      )"}, {"filenames": ["ssl", "ssleay32", "ssleay32md"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_libraries names ssl ssleay32 ssleay32md)"}, {"filenames": ["crypto"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_libraries names crypto)"}]}, {"deps": [{"depname": "tclsh", "version": null, "version_op": null, "unified_name": "tclsh", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclsh.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cygtclsh83", "cygtclsh80"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclsh.cmake", "content": "find_program(tcl_tclsh names cygtclsh83 cygtclsh80)"}, {"filenames": ["${tcl_tclsh_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindTclsh.cmake", "content": "find_program(tcl_tclsh\n  names ${tcl_tclsh_names}\n  hints ${tcltk_possible_bin_paths}\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSWIG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["swig"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSWIG.cmake", "content": "find_program(swig_executable swig)"}]}, {"deps": [{"depname": "libarchive", "version": null, "version_op": null, "unified_name": "archive", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibArchive.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["archive", "libarchive"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibArchive.cmake", "content": "find_library(libarchive_library\n  names archive libarchive\n  paths\n  \"[hkey_local_machine\\\\software\\\\gnuwin32\\\\libarchive;installpath]/lib\"\n  )"}]}, {"deps": [{"depname": "sdl_mixer", "version": null, "version_op": null, "unified_name": "sdl_mixer", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_mixer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl_mixer"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSDL_mixer.cmake", "content": "find_library(sdlmixer_library \n  names sdl_mixer\n  hints\n  $env{sdlmixerdir}\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "content": "find_library(mpi_lib ${lib} hints ${mpi_link_path})"}, {"filenames": ["mpi", "mpich", "msmpi"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "content": "find_library(mpi_library\n    names mpi mpich msmpi\n    hints ${_mpi_base_dir} ${_mpi_prefix_path}\n    path_suffixes lib lib/i386 lib lib/i386\n    )"}, {"filenames": ["mpi++"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "content": "find_library(mpi_extra_library\n    names mpi++\n    hints ${_mpi_base_dir} ${_mpi_prefix_path}\n    path_suffixes lib\n    doc \"extra mpi libraries to link against.\")"}, {"filenames": ["mpiexec", "mpirun", "lamexec"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "content": "find_program(mpiexec\n  names mpiexec mpirun lamexec\n  paths ${_mpi_prefix_path}\n  path_suffixes bin\n  doc \"executable for running mpi programs.\"\n  )"}, {"filenames": ["mpic++", "mpicxx", "mpicc", "mpicc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPI.cmake", "content": "find_program(mpi_compiler\n  names mpic++ mpicxx mpicc mpicc\n  hints \"${_mpi_base_dir}\"\n  path_suffixes bin\n  doc \"mpi compiler. used only to detect mpi compilation flags.\")"}]}, {"deps": [{"depname": "itk", "version": null, "version_op": null, "unified_name": "itk", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindITK.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "dumpinformation", "version": null, "version_op": null, "unified_name": "dumpinformation", "extractor_type": "cmake", "context": "project(dumpinformation)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["pkg-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/UsePkgConfig.cmake", "content": "find_program(pkgconfig_executable names pkg-config )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(${_name}\n        names ${argn}\n        hints\n            $env{gtest_root}\n            ${gtest_root}\n        path_suffixes lib\n    )"}, {"filenames": ["gtest-md"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_library            gtest-md  gtest)"}, {"filenames": ["gtest-mdd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_library_debug      gtest-mdd gtestd)"}, {"filenames": ["gtest_main-md"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library       gtest_main-md  gtest_main)"}, {"filenames": ["gtest_main-mdd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library_debug gtest_main-mdd gtest_maind)"}, {"filenames": ["gtest"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_library            gtest)"}, {"filenames": ["gtestd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_library_debug      gtestd)"}, {"filenames": ["gtest_main"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library       gtest_main)"}, {"filenames": ["gtest_maind"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTest.cmake", "content": "find_library(gtest_main_library_debug gtest_maind)"}]}, {"deps": [{"depname": "mfc", "version": null, "version_op": null, "unified_name": "mfc", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMFC.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "wxwindows", "version": null, "version_op": null, "unified_name": "wxwindows", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wx", "wxmsw", "wxmsw26"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library\n      names wx wxmsw wxmsw26\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static release build library\" )"}, {"filenames": ["wxd", "wxmswd", "wxmsw26d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library\n      names wxd wxmswd wxmsw26d\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug build library\" )"}, {"filenames": ["wxmsw26", "wxmsw262", "wxmsw24", "wxmsw242", "wxmsw241", "wxmsw240", "wx23_2", "wx22_9"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_shared_library\n      names wxmsw26 wxmsw262 wxmsw24 wxmsw242 wxmsw241 wxmsw240 wx23_2 wx22_9\n      paths\n      \"${wxwindows_root_dir}/lib/vc_dll\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows shared release build library\" )"}, {"filenames": ["wxmsw26d", "wxmsw262d", "wxmsw24d", "wxmsw241d", "wxmsw240d", "wx23_2d", "wx22_9d"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_shared_debug_library\n      names wxmsw26d wxmsw262d wxmsw24d wxmsw241d wxmsw240d wx23_2d wx22_9d\n      paths\n      \"${wxwindows_root_dir}/lib/vc_dll\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows shared debug build library \" )"}, {"filenames": ["wx_gl", "wxmsw_gl", "wxmsw26_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_gl\n      names wx_gl wxmsw_gl wxmsw26_gl\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static release build gl library\" )"}, {"filenames": ["wxd_gl", "wxmswd_gl", "wxmsw26d_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_gl\n      names wxd_gl wxmswd_gl wxmsw26d_gl\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug build gl library\" )"}, {"filenames": ["wxpngd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_png\n      names wxpngd\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug png library\" )"}, {"filenames": ["wxpng"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_png\n      names wxpng\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static png library\" )"}, {"filenames": ["wxtiffd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_tiff\n      names wxtiffd\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug tiff library\" )"}, {"filenames": ["wxtiff"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_tiff\n      names wxtiff\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static tiff library\" )"}, {"filenames": ["wxjpegd", "wxjpgd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_jpeg\n      names wxjpegd  wxjpgd\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug jpeg library\" )"}, {"filenames": ["wxjpeg", "wxjpg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_jpeg\n      names wxjpeg wxjpg\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static jpeg library\" )"}, {"filenames": ["wxzlibd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_zlib\n      names wxzlibd\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug zlib library\" )"}, {"filenames": ["wxzlib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_zlib\n      names wxzlib\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static zib library\" )"}, {"filenames": ["wxregexd"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_debug_library_regex\n      names wxregexd\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static debug regex library\" )"}, {"filenames": ["wxregex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_static_library_regex\n      names wxregex\n      paths\n      \"${wxwindows_root_dir}/lib/vc_lib\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows static regex library\" )"}, {"filenames": ["wx_gl", "wxmsw_gl", "wxmsw26_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_shared_library_gl\n      names wx_gl wxmsw_gl wxmsw26_gl\n      paths\n      \"${wxwindows_root_dir}/lib/vc_dll\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows shared release build gl library\" )"}, {"filenames": ["wxd_gl", "wxmswd_gl", "wxmsw26d_gl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_library(wxwindows_shared_debug_library_gl\n      names wxd_gl wxmswd_gl wxmsw26d_gl\n      paths\n      \"${wxwindows_root_dir}/lib/vc_dll\"\n      ${wxwindows_possible_lib_paths}\n      doc \"wxwindows shared debug build gl library\" )"}, {"filenames": ["wx-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindwxWindows.cmake", "content": "find_program(cmake_wxwindows_wxconfig_executable wx-config\n      $env{wxwin}\n      $env{wxwin}/bin\n      ../wx/bin\n      ../../wx/bin )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "make", "smake"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeUnixFindMake.cmake", "content": "find_program(cmake_make_program names gmake make smake)"}]}, {"deps": [{"depname": "osgviewer", "version": null, "version_op": null, "unified_name": "osgviewer", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgViewer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgviewer"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgViewer.cmake", "content": "find_library(osgviewer osgviewer)"}]}, {"deps": [{"depname": "php4", "version": null, "version_op": null, "unified_name": "php4", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPHP4.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["php4", "php"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindPHP4.cmake", "content": "find_program(php4_executable names php4 php )"}]}, {"deps": [{"depname": "cvs", "version": null, "version_op": null, "unified_name": "cvs", "extractor_type": "cmake", "context": "find_package(cvs)", "confidence": "High"}, {"depname": "subversion", "version": null, "version_op": null, "unified_name": "subversion", "extractor_type": "cmake", "context": "find_package(subversion)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["mingw32-make.exe"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeMinGWFindMake.cmake", "content": "find_program(cmake_make_program mingw32-make.exe paths\n  \"[hkey_local_machine\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\uninstall\\\\mingw;installlocation]/bin\" \n  c:/mingw/bin /mingw/bin)"}, {"filenames": ["sh.exe"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeMinGWFindMake.cmake", "content": "find_program(cmake_sh sh.exe )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "wish", "version": null, "version_op": null, "unified_name": "wish", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindWish.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cygwish80"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindWish.cmake", "content": "find_program(tk_wish cygwish80 )"}, {"filenames": ["${tk_wish_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindWish.cmake", "content": "find_program(tk_wish\n  names ${tk_wish_names}\n  hints ${tcltk_possible_bin_paths}\n  )"}]}, {"deps": [{"depname": "subversion", "version": null, "version_op": null, "unified_name": "subversion", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSubversion.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["svn"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindSubversion.cmake", "content": "find_program(subversion_svn_executable svn\n  doc \"subversion command line client\")"}]}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "confidence": "High"}, {"depname": "\"${x11_libraries}\"", "version": null, "version_op": null, "unified_name": "\"${x11_libraries}\"", "extractor_type": "cmake", "context": "check_library_exists(\"${x11_libraries}\" \"xopendisplay\" \"\" x11_lib_x11_solo)", "confidence": "High"}, {"depname": "\"dnet\"", "version": null, "version_op": null, "unified_name": "\"dnet\"", "extractor_type": "cmake", "context": "check_library_exists(\"dnet\" \"dnet_ntoa\" \"\" x11_lib_dnet_has_dnet_ntoa)", "confidence": "High"}, {"depname": "\"dnet_stub\"", "version": null, "version_op": null, "unified_name": "\"dnet_stub\"", "extractor_type": "cmake", "context": "check_library_exists(\"dnet_stub\" \"dnet_ntoa\" \"\" x11_lib_dnet_stub_has_dnet_ntoa)", "confidence": "High"}, {"depname": "\"nsl\"", "version": null, "version_op": null, "unified_name": "\"nsl\"", "extractor_type": "cmake", "context": "check_library_exists(\"nsl\" \"gethostbyname\" \"\" cmake_lib_nsl_has_gethostbyname)", "confidence": "High"}, {"depname": "\"bsd\"", "version": null, "version_op": null, "unified_name": "\"bsd\"", "extractor_type": "cmake", "context": "check_library_exists(\"bsd\" \"gethostbyname\" \"\" cmake_lib_bsd_has_gethostbyname)", "confidence": "High"}, {"depname": "\"socket\"", "version": null, "version_op": null, "unified_name": "\"socket\"", "extractor_type": "cmake", "context": "check_library_exists(\"socket\" \"connect\" \"\" cmake_lib_socket_has_connect)", "confidence": "High"}, {"depname": "\"posix\"", "version": null, "version_op": null, "unified_name": "\"posix\"", "extractor_type": "cmake", "context": "check_library_exists(\"posix\" \"remove\" \"\" cmake_lib_posix_has_remove)", "confidence": "High"}, {"depname": "\"ipc\"", "version": null, "version_op": null, "unified_name": "\"ipc\"", "extractor_type": "cmake", "context": "check_library_exists(\"ipc\" \"shmat\" \"\" cmake_lib_ips_has_shmat)", "confidence": "High"}, {"depname": "\"ice\"", "version": null, "version_op": null, "unified_name": "\"ice\"", "extractor_type": "cmake", "context": "check_library_exists(\"ice\" \"iceconnectionnumber\" \"\"\n                            cmake_lib_ice_has_iceconnectionnumber)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["x11"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_x11_lib x11               ${x11_lib_search_path})"}, {"filenames": ["ice"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_ice_lib ice               ${x11_lib_search_path})"}, {"filenames": ["sm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_sm_lib sm                 ${x11_lib_search_path})"}, {"filenames": ["xau"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xau_lib xau               ${x11_lib_search_path})"}, {"filenames": ["xcomposite"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xcomposite_lib xcomposite ${x11_lib_search_path})"}, {"filenames": ["xcursor"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xcursor_lib xcursor       ${x11_lib_search_path})"}, {"filenames": ["xdamage"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xdamage_lib xdamage       ${x11_lib_search_path})"}, {"filenames": ["xdmcp"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xdmcp_lib xdmcp           ${x11_lib_search_path})"}, {"filenames": ["xext"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xext_lib xext             ${x11_lib_search_path})"}, {"filenames": ["xfixes"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xfixes_lib xfixes         ${x11_lib_search_path})"}, {"filenames": ["xft"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xft_lib xft               ${x11_lib_search_path})"}, {"filenames": ["xi"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xi_lib xi                 ${x11_lib_search_path})"}, {"filenames": ["xinerama"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xinerama_lib xinerama     ${x11_lib_search_path})"}, {"filenames": ["xi"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xinput_lib xi             ${x11_lib_search_path})"}, {"filenames": ["xpm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xpm_lib xpm               ${x11_lib_search_path})"}, {"filenames": ["xrandr"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xrandr_lib xrandr         ${x11_lib_search_path})"}, {"filenames": ["xrender"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xrender_lib xrender       ${x11_lib_search_path})"}, {"filenames": ["xss"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xscreensaver_lib xss      ${x11_lib_search_path})"}, {"filenames": ["xt"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xt_lib xt                 ${x11_lib_search_path})"}, {"filenames": ["xtst"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xtest_lib xtst            ${x11_lib_search_path})"}, {"filenames": ["xv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xv_lib xv                 ${x11_lib_search_path})"}, {"filenames": ["xxf86misc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindX11.cmake", "content": "find_library(x11_xxf86misc_lib xxf86misc   ${x11_lib_search_path})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["make"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeMSYSFindMake.cmake", "content": "find_program(cmake_make_program make \n  paths \n  \"[hkey_local_machine\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\uninstall\\\\msys-1.0_is1;inno setup: app path]/bin\"\n  \"[hkey_local_machine\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\uninstall\\\\mingw;installlocation]/bin\"\n  c:/msys/1.0/bin /msys/1.0/bin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgparticle", "version": null, "version_op": null, "unified_name": "osgparticle", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgParticle.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgparticle"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgParticle.cmake", "content": "find_library(osgparticle osgparticle)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "kde4", "version": null, "version_op": null, "unified_name": "kde4", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE4.cmake", "confidence": "High"}, {"depname": "kde4internal", "version": null, "version_op": null, "unified_name": "kde4internal", "extractor_type": "cmake", "context": "find_package(kde4internal required quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["kde4-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindKDE4.cmake", "content": "find_program(kde4_kdeconfig_executable names kde4-config\n   \n   path_suffixes bin               \n   hints\n   ${cmake_install_prefix}\n   ${_kdedirs}\n   /opt/kde4\n   only_cmake_find_root_path\n   )"}]}, {"deps": [{"depname": "osgsim", "version": null, "version_op": null, "unified_name": "osgsim", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgSim.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgsim"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgSim.cmake", "content": "find_library(osgsim osgsim)"}]}, {"deps": [{"depname": "glu", "version": null, "version_op": null, "unified_name": "glu", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGLU.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osg", "version": null, "version_op": null, "unified_name": "osg", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Findosg.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osg"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Findosg.cmake", "content": "find_library(osg osg)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${cmake_generator_cc}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCCompiler.cmake", "content": "find_program(cmake_c_compiler names ${cmake_generator_cc} paths ${_cmake_user_cxx_compiler_path} doc \"c compiler\" no_default_path)"}, {"filenames": ["${cmake_generator_cc}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCCompiler.cmake", "content": "find_program(cmake_c_compiler names ${cmake_generator_cc} doc \"c compiler\")"}, {"filenames": ["${cmake_c_compiler}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineCCompiler.cmake", "content": "find_program(cmake_c_compiler_with_path names ${cmake_c_compiler})"}]}, {"deps": [{"depname": "osgintrospection", "version": null, "version_op": null, "unified_name": "osgintrospection", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgIntrospection.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgintrospection"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgIntrospection.cmake", "content": "find_library(osgintrospection osgintrospection)"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindThreads.cmake", "confidence": "High"}, {"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "check_library_exists(pthreads pthread_create \"\" cmake_have_pthreads_create)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_create \"\" cmake_have_pthread_create)", "confidence": "High"}, {"depname": "thread", "version": null, "version_op": null, "unified_name": "thread", "extractor_type": "cmake", "context": "check_library_exists(thread thr_create \"\" cmake_have_thr_create)", "confidence": "High"}, {"depname": "cma", "version": null, "version_op": null, "unified_name": "cma", "extractor_type": "cmake", "context": "check_library_exists(cma pthread_attr_create \"\" cmake_have_hp_cma)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc", "version": "1400", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1400)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["devenv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS8FindMake.cmake", "content": "find_program(cmake_make_program\n  names devenv\n  hints\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\8.0\\\\setup\\\\vs;environmentdirectory]\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\8.0\\\\setup;dbghelp_path]\n  \"$env{programfiles}/microsoft visual studio 8/common7/ide\"\n  \"$env{programfiles}/microsoft visual studio8/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio 8/common7/ide\"\n  \"$env{programfiles} (x86)/microsoft visual studio8/common7/ide\"\n  \"/program files/microsoft visual studio 8/common7/ide/\"\n  )"}]}, {"deps": [{"depname": "motif", "version": null, "version_op": null, "unified_name": "motif", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMotif.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xm"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMotif.cmake", "content": "find_library(motif_libraries\n    xm\n    /usr/openwin/lib\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "avifile", "version": null, "version_op": null, "unified_name": "avifile", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindAVIFile.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["aviplay"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindAVIFile.cmake", "content": "find_library(avifile_aviplay_library aviplay\n    /usr/local/avifile/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libxml2", "version": null, "version_op": null, "unified_name": "xml2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibXml2.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libxml", "version": "2.0", "version_op": "=", "unified_name": "xml", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libxml libxml-2.0 quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xml2", "libxml2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibXml2.cmake", "content": "find_library(libxml2_libraries names xml2 libxml2\n   hints\n   ${pc_libxml_libdir}\n   ${pc_libxml_library_dirs}\n   )"}, {"filenames": ["xmllint"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLibXml2.cmake", "content": "find_program(libxml2_xmllint_executable xmllint)"}]}, {"deps": [{"depname": "lua51", "version": null, "version_op": null, "unified_name": "lua51", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua51.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lua51", "lua5.1", "lua-5.1", "lua"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua51.cmake", "content": "find_library(lua_library \n  names lua51 lua5.1 lua-5.1 lua\n  hints\n  $env{lua_dir}\n  path_suffixes lib64 lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["m"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindLua51.cmake", "content": "find_library(lua_math_library m)"}]}, {"deps": [{"depname": "flex", "version": null, "version_op": null, "unified_name": "flex", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLEX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLEX.cmake", "content": "find_library(fl_library names fl\n  doc \"path to the fl library\")"}, {"filenames": ["flex"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindFLEX.cmake", "content": "find_program(flex_executable flex doc \"path to the flex executable\")"}]}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opengl32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library opengl32 )"}, {"filenames": ["glu32"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library glu32 )"}, {"filenames": ["opengl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library opengl doc \"opengl lib for osx\")"}, {"filenames": ["agl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library agl doc \"agl lib for osx\")"}, {"filenames": ["gl", "mesagl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library\n      names gl mesagl\n      paths /opt/graphics/opengl/lib\n            /usr/openwin/lib\n            /usr/shlib /usr/x11r6/lib\n            ${hpux_ia_opengl_lib_path}\n    )"}, {"filenames": ["glu", "mesaglu"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library\n      names glu mesaglu\n      paths ${opengl_gl_library}\n            /opt/graphics/opengl/lib\n            /usr/openwin/lib\n            /usr/shlib /usr/x11r6/lib\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCUDA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCUDA.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths ${_cuda_64bit_lib_dir}\n          \"${cuda_toolkit_root_dir}/lib/win32\"\n          \"${cuda_toolkit_root_dir}/lib\"\n    env cuda_lib_path\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCUDA.cmake", "content": "find_library(${_var} names ${_names} doc ${_doc})"}, {"filenames": ["nvcc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}/bin\"\n        \"${cuda_toolkit_root_dir}/bin64\"\n  env cuda_bin_path\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["eclipse"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindEclipseCDT4.cmake", "content": "find_program(cmake_eclipse_executable names eclipse doc \"the eclipse executable\")"}]}, {"deps": [{"depname": "imagemagick", "version": null, "version_op": null, "unified_name": "imagemagick", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindImageMagick.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindImageMagick.cmake", "content": "find_library(imagemagick_${component}_library\n    names ${argn}\n    paths\n      \"[hkey_local_machine\\\\software\\\\imagemagick\\\\current;binpath]/lib\"\n    doc \"path to the imagemagick magick++ library.\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc", "version": "1200", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1200)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["msdev"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS6FindMake.cmake", "content": "find_program(cmake_make_program\n  names msdev\n  paths\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\6.0\\\\setup;vscommondir]/msdev98/bin\n  \"c:/program files/microsoft visual studio/common/msdev98/bin\"\n  \"c:/program files/microsoft visual studio/common/msdev98/bin\"\n  \"/program files/microsoft visual studio/common/msdev98/bin\"\n  )"}]}, {"deps": [{"depname": "osgwidget", "version": null, "version_op": null, "unified_name": "osgwidget", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgWidget.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgwidget"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgWidget.cmake", "content": "find_library(osgwidget osgwidget)"}]}, {"deps": [{"depname": "vtk_major", "version": "4", "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "set(vtk_major_version 4)", "confidence": "Low"}, {"depname": "vtk_minor", "version": "0", "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "set(vtk_minor_version 0)", "confidence": "Low"}, {"depname": "vtk_build", "version": "2", "version_op": null, "unified_name": "vtk_build", "extractor_type": "cmake", "context": "set(vtk_build_version 2)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgga", "version": null, "version_op": null, "unified_name": "osgga", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgGA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgga"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgGA.cmake", "content": "find_library(osgga osgga)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtk", "version": null, "version_op": null, "unified_name": "gtk", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gtkgl"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_gtkgl_library gtkgl\n    /usr/openwin/lib\n    /opt/gnome/lib\n  )"}, {"filenames": ["gtk", "gtk12"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_gtk_library\n    names  gtk gtk12\n    paths /usr/openwin/lib\n          /opt/gnome/lib\n  )"}, {"filenames": ["gdk", "gdk12"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_gdk_library\n    names  gdk gdk12\n    paths  /usr/openwin/lib\n           /opt/gnome/lib\n  )"}, {"filenames": ["gmodule", "gmodule12"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_gmodule_library\n    names  gmodule gmodule12\n    paths  /usr/openwin/lib\n           /opt/gnome/lib\n  )"}, {"filenames": ["glib", "glib12"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_glib_library\n    names  glib glib12\n    paths  /usr/openwin/lib\n           /opt/gnome/lib\n  )"}, {"filenames": ["xi"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_xi_library \n    names xi \n    paths /usr/openwin/lib \n          /opt/gnome/lib \n    )"}, {"filenames": ["gthread", "gthread12"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGTK.cmake", "content": "find_library( gtk_gthread_library\n    names  gthread gthread12\n    paths  /usr/openwin/lib\n           /opt/gnome/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["codeblocks"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeFindCodeBlocks.cmake", "content": "find_program(cmake_codeblocks_executable names codeblocks doc \"the codeblocks executable\")"}]}, {"deps": [{"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBZip2.cmake", "confidence": "High"}, {"depname": "${bzip2_libraries}", "version": null, "version_op": null, "unified_name": "${bzip2_libraries}", "extractor_type": "cmake", "context": "check_library_exists(${bzip2_libraries} bz2_bzcompressinit \"\" bzip2_need_prefix)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bz2", "bzip2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindBZip2.cmake", "content": "find_library(bzip2_libraries names bz2 bzip2 )"}]}, {"deps": [{"depname": "xmlrpc", "version": null, "version_op": null, "unified_name": "xmlrpc", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindXMLRPC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${name}"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindXMLRPC.cmake", "content": "find_library(xmlrpc_${name}_library\n        names ${name}\n        hints ${xmlrpc_library_dirs}\n        )"}, {"filenames": ["xmlrpc-c-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindXMLRPC.cmake", "content": "find_program(xmlrpc_c_config names xmlrpc-c-config)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgtext", "version": null, "version_op": null, "unified_name": "osgtext", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgText.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgtext"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgText.cmake", "content": "find_library(osgtext osgtext)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc", "version": "1300", "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "set(msvc_version 1300)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["devenv"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeVS7FindMake.cmake", "content": "find_program(cmake_make_program\n  names devenv\n  paths\n  [hkey_local_machine\\\\software\\\\microsoft\\\\visualstudio\\\\7.0\\\\setup\\\\vs;environmentdirectory]\n  \"c:/program files/microsoft visual studio .net/common7/ide\"\n  \"c:/program files/microsoft visual studio.net/common7/ide\"\n  \"/program files/microsoft visual studio .net/common7/ide/\"\n  )"}]}, {"deps": [{"depname": "osgdb", "version": null, "version_op": null, "unified_name": "osgdb", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgDB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgdb"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgDB.cmake", "content": "find_library(osgdb osgdb)"}]}, {"deps": [{"depname": "osgutil", "version": null, "version_op": null, "unified_name": "osgutil", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgUtil.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgutil"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindosgUtil.cmake", "content": "find_library(osgutil osgutil)"}]}, {"deps": [{"depname": "cmake_system", "version": null, "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "  set(cmake_system_version   \"${cmake_host_system_version}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["uname"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/CMakeDetermineSystem.cmake", "content": "find_program(cmake_uname uname /bin /usr/bin /usr/local/bin )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpeg2", "version": null, "version_op": null, "unified_name": "mpeg2", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpeg2"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG2.cmake", "content": "find_library(mpeg2_mpeg2_library mpeg2\n  /usr/local/livid/mpeg2dec/libmpeg2/.libs\n)"}, {"filenames": ["vo"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindMPEG2.cmake", "content": "find_library( mpeg2_vo_library vo\n  /usr/local/livid/mpeg2dec/libvo/.libs\n)"}]}, {"deps": [{"depname": "wget", "version": null, "version_op": null, "unified_name": "wget", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindWget.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wget"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindWget.cmake", "content": "find_program(wget_executable\n  wget\n  ${cygwin_install_path}/bin\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGDAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_gdal_lib}", "gdal", "gdal_i", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGDAL.cmake", "content": "find_library(gdal_library \n  names ${_gdal_lib} gdal gdal_i gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  hints\n     $env{gdal_dir}\n     $env{gdal_root}\n     ${_gdal_libpath}\n  path_suffixes lib64 lib\n  paths\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n)"}, {"filenames": ["gdal-config"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FindGDAL.cmake", "content": "find_program(gdal_config gdal-config\n        hints\n          $env{gdal_dir}\n          $env{gdal_root}\n        path_suffixes bin\n        paths\n            /sw \n            /opt/local \n            /opt/csw \n            /opt\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["fortrancinterface"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/FortranCInterface/Detect.cmake", "content": "find_program(fortrancinterface_exe\n    names fortrancinterface\n    paths ${fortrancinterface_binary_dir} ${fortrancinterface_binary_dir}/debug\n    no_default_path\n    )"}]}, {"deps": [{"depname": "fortrancinterface", "version": null, "version_op": null, "unified_name": "fortrancinterface", "extractor_type": "cmake", "context": "project(fortrancinterface c fortran)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "verifyfortranc", "version": null, "version_op": null, "unified_name": "verifyfortranc", "extractor_type": "cmake", "context": "project(verifyfortranc c fortran)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["sdcclib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Generic-SDCC-C.cmake", "content": "find_program(sdcclib_executable sdcclib paths \"${sdcc_location}\" no_default_path)"}, {"filenames": ["sdcclib"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Generic-SDCC-C.cmake", "content": "find_program(sdcclib_executable sdcclib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libtarget.a"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/eCos.cmake", "content": "find_library(ecos_system_target_library names libtarget.a)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["xiar"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Linux-Intel.cmake", "content": "find_program(xiar names xiar hints ${_intel_xiar_hints})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_shared_library_name_with", "version": "1", "version_op": null, "unified_name": "cmake_shared_library_name_with", "extractor_type": "cmake", "context": "set(cmake_shared_library_name_with_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Darwin.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}, {"filenames": ["xcode-select"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Darwin.cmake", "content": "find_program(cmake_xcode_select xcode-select)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["vdkgen"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Generic-ADSP-Common.cmake", "content": "find_program( adsp_vdkgen_executable vdkgen \"${_adsp_family_dir}/vdk\" )"}, {"filenames": ["elfloader"], "version": "", "fromfile": "dinodeck@@dinodeck/lib/physfs/cmake-2.8.3-win32-x86/share/cmake-2.8/Modules/Platform/Generic-ADSP-Common.cmake", "content": "find_program( adsp_elfloader_executable elfloader \"${_adsp_family_dir}\" )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc", "version": null, "version_op": null, "unified_name": "msvc", "extractor_type": "cmake", "context": "      set(msvc_version \"${compilerversion}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_gnuld_image", "version": null, "version_op": null, "unified_name": "cmake_gnuld_image", "extractor_type": "cmake", "context": "\nset(cmake_gnuld_image_version\n  \"-wl,--major-image-version,<target_version_major>,--minor-image-version,<target_version_minor>\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_gnuld_image", "version": null, "version_op": null, "unified_name": "cmake_gnuld_image", "extractor_type": "cmake", "context": "\nset(cmake_gnuld_image_version\n  \"-wl,--major-image-version,<target_version_major>,--minor-image-version,<target_version_minor>\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "6.1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version \"6.1\")", "confidence": "Low"}, {"depname": "cmake_host_system", "version": "6.1", "version_op": null, "unified_name": "cmake_host_system", "extractor_type": "cmake", "context": "set(cmake_host_system_version \"6.1\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "ftgles", "version": "0.1", "version_op": null, "unified_name": "ftgles", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/ftgles/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [{"depname": "FTGLES", "version": "0.1", "version_op": "=", "unified_name": "ftgles", "extractor_type": "pkgconfig", "context": "dinodeck@@dinodeck/lib/ftgles/ftgles.pc", "confidence": "High"}], "type": "pkgconfig"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "FTGLES", "version": "0.1", "version_op": null, "unified_name": "ftgles", "extractor_type": "autoconf", "context": "AC_INIT(FTGLES, 0.1, [david@davidpetrie.com], ftgles)", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "LuaJIT", "version": "${version}", "version_op": "=", "unified_name": "luajit", "extractor_type": "pkgconfig", "context": "dinodeck@@dinodeck/lib/LuaJIT/etc/luajit.pc", "confidence": "High"}], "type": "pkgconfig"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "ftgl", "version": "2.1.3~rc5", "version_op": null, "unified_name": "ftgl", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/ftgl/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "FTGL", "version": "2.1.3~rc5", "version_op": null, "unified_name": "ftgl", "extractor_type": "autoconf", "context": "AC_INIT(FTGL, 2.1.3~rc5, [sam@zoy.org], ftgl)", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "autoconf"}, {"deps": [], "type": "ms"}, {"deps": [{"depname": "freetype", "version": "2.4.6", "version_op": null, "unified_name": "freetype", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/builds/unix/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [{"depname": "FreeType 2", "version": "13.1.7", "version_op": "=", "unified_name": "freetype 2", "extractor_type": "pkgconfig", "context": "dinodeck@@dinodeck/lib/freetype/builds/unix/freetype2.pc", "confidence": "High"}], "type": "pkgconfig"}, {"deps": [{"depname": "FreeType", "version": "2.4.6", "version_op": null, "unified_name": "freetype", "extractor_type": "autoconf", "context": "AC_INIT([FreeType], [2.4.6], [freetype@nongnu.org], [freetype])", "confidence": ""}, {"depname": "z", "version": null, "version_op": null, "unified_name": "z", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/builds/unix/configure.ac", "confidence": "High"}, {"depname": "bz2", "version": null, "version_op": null, "unified_name": "bz2", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/builds/unix/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "ms"}, {"deps": [{"depname": "freetype", "version": "2.4.6", "version_op": null, "unified_name": "freetype", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/jni/builds/unix/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [{"depname": "FreeType 2", "version": "13.1.7", "version_op": "=", "unified_name": "freetype 2", "extractor_type": "pkgconfig", "context": "dinodeck@@dinodeck/lib/freetype/jni/builds/unix/freetype2.pc", "confidence": "High"}], "type": "pkgconfig"}, {"deps": [{"depname": "FreeType", "version": "2.4.6", "version_op": null, "unified_name": "freetype", "extractor_type": "autoconf", "context": "AC_INIT([FreeType], [2.4.6], [freetype@nongnu.org], [freetype])", "confidence": ""}, {"depname": "z", "version": null, "version_op": null, "unified_name": "z", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/jni/builds/unix/configure.ac", "confidence": "High"}, {"depname": "bz2", "version": null, "version_op": null, "unified_name": "bz2", "extractor_type": "autoconf", "context": "dinodeck@@dinodeck/lib/freetype/jni/builds/unix/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}]}