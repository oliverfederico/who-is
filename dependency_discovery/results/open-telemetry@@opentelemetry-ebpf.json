{"target": "open-telemetry@@opentelemetry-ebpf", "extractors": [{"deps": [{"depname": "opentelemetry", "version": "${ebpf_net_major_version}.${ebpf_net_minor_version}.${ebpf_net_patch_version}", "version_op": null, "unified_name": "opentelemetry", "extractor_type": "cmake", "context": "project(   opentelemetry-ebpf   version ${ebpf_net_major_version}.${ebpf_net_minor_version}.${ebpf_net_patch_version} )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm required config)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${lib}"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/bcc.cmake", "content": "find_library(lib${lib} names ${lib} hints ${llvm_library_dirs})"}, {"filenames": ["\"libbcc-combined.a\""], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/bcc.cmake", "content": "find_library(bcc_libs names \"libbcc-combined.a\")"}, {"filenames": ["\"lib${lib}.a\""], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/bcc.cmake", "content": "find_library(bcc_lib_${lib} names \"lib${lib}.a\")"}]}, {"deps": [{"depname": "libelf", "version": null, "version_op": null, "unified_name": "elf", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libelf required libelf)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf config required)", "confidence": "High"}, {"depname": "grpc", "version": null, "version_op": null, "unified_name": "grpc", "extractor_type": "cmake", "context": "find_package(grpc config required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["uv", "libuv"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/uv.cmake", "content": "find_library(libuv_libs names uv libuv)"}, {"filenames": ["libuv.a"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/uv.cmake", "content": "find_library(libuv_static_library names libuv.a)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"liblz4.a\""], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/lz4.cmake", "content": "find_library(lz4_library names \"liblz4.a\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/ccache.cmake", "content": "find_program(ccache_found ccache)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "clang", "version": null, "version_op": null, "unified_name": "clang", "extractor_type": "cmake", "context": "find_package(clang required config names clang)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "awssdk", "version": null, "version_op": null, "unified_name": "awssdk", "extractor_type": "cmake", "context": "find_package(awssdk required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "absl", "version": null, "version_op": null, "unified_name": "absl", "extractor_type": "cmake", "context": "find_package(absl required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "breakpad-client", "version": null, "version_op": null, "unified_name": "breakpad-client", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(google_breakpad required breakpad-client)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"libyaml-cpp.a\""], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/yamlcpp.cmake", "content": "find_library(yamlcpp_library names \"libyaml-cpp.a\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"libmaxminddb.a\""], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/geoip.cmake", "content": "find_library(libmaxminddb_libraries_c names \"libmaxminddb.a\")"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libcurl.a"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/curl.cmake", "content": "find_library(curl_static_library names libcurl.a)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libcurlpp.a"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/cmake/curlpp.cmake", "content": "find_library(curlpp_static_library names libcurlpp.a)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf config required)", "confidence": "High"}, {"depname": "grpc", "version": null, "version_op": null, "unified_name": "grpc", "extractor_type": "cmake", "context": "find_package(grpc config required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["protoc"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/otlp/CMakeLists.txt", "content": "find_program(_protobuf_protoc protoc)"}, {"filenames": ["grpc_cpp_plugin"], "version": "", "fromfile": "open-telemetry@@opentelemetry-ebpf/otlp/CMakeLists.txt", "content": "find_program(_grpc_cpp_plugin_executable grpc_cpp_plugin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}