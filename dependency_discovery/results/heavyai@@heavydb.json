{"target": "heavyai@@heavydb", "extractors": [{"deps": [{"depname": "levelzero", "version": null, "version_op": null, "unified_name": "levelzero", "extractor_type": "cmake", "context": "find_package(levelzero required components ${levelzero_components})", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "nvtx", "version": null, "version_op": null, "unified_name": "nvtx", "extractor_type": "cmake", "context": "find_package(nvtx)", "confidence": "High"}, {"depname": "geos", "version": null, "version_op": null, "unified_name": "geos", "extractor_type": "cmake", "context": "find_package(geos)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "thrift", "version": null, "version_op": null, "unified_name": "thrift", "extractor_type": "cmake", "context": "find_package(thrift config required)", "confidence": "High"}, {"depname": "thrift", "version": null, "version_op": null, "unified_name": "thrift", "extractor_type": "cmake", "context": "find_package(thrift required)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal required)", "confidence": "High"}, {"depname": "gdalextra", "version": null, "version_op": null, "unified_name": "gdalextra", "extractor_type": "cmake", "context": "find_package(gdalextra required)", "confidence": "High"}, {"depname": "blosc", "version": null, "version_op": null, "unified_name": "blosc", "extractor_type": "cmake", "context": "find_package(blosc required)", "confidence": "High"}, {"depname": "folly", "version": null, "version_op": null, "unified_name": "folly", "extractor_type": "cmake", "context": "find_package(folly)", "confidence": "High"}, {"depname": "libevent", "version": null, "version_op": null, "unified_name": "event", "extractor_type": "cmake", "context": "find_package(libevent components core required)", "confidence": "High"}, {"depname": "pdal", "version": null, "version_op": null, "unified_name": "pdal", "extractor_type": "cmake", "context": "find_package(pdal)", "confidence": "High"}, {"depname": "onedal", "version": null, "version_op": null, "unified_name": "onedal", "extractor_type": "cmake", "context": "find_package(onedal required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "armadillo", "version": null, "version_op": null, "unified_name": "armadillo", "extractor_type": "cmake", "context": "find_package(armadillo required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components serialization required)", "confidence": "High"}, {"depname": "mlpack", "version": null, "version_op": null, "unified_name": "mlpack", "extractor_type": "cmake", "context": "find_package(mlpack required)", "confidence": "High"}, {"depname": "curses", "version": null, "version_op": null, "unified_name": "curses", "extractor_type": "cmake", "context": "find_package(curses)", "confidence": "High"}, {"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm config required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components log log_setup filesystem program_options regex system thread timer locale iostreams serialization required)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl required quiet)", "confidence": "High"}, {"depname": "libawss3", "version": null, "version_op": null, "unified_name": "awss3", "extractor_type": "cmake", "context": "find_package(libawss3)", "confidence": "High"}, {"depname": "arrow", "version": null, "version_op": null, "unified_name": "arrow", "extractor_type": "cmake", "context": "find_package(arrow required)", "confidence": "High"}, {"depname": "parquet", "version": null, "version_op": null, "unified_name": "parquet", "extractor_type": "cmake", "context": "find_package(parquet)", "confidence": "High"}, {"depname": "snappy", "version": null, "version_op": null, "unified_name": "snappy", "extractor_type": "cmake", "context": "find_package(snappy required)", "confidence": "High"}, {"depname": "rdkafka", "version": null, "version_op": null, "unified_name": "rdkafka", "extractor_type": "cmake", "context": "find_package(rdkafka required)", "confidence": "High"}, {"depname": "libarchive", "version": null, "version_op": null, "unified_name": "archive", "extractor_type": "cmake", "context": "find_package(libarchive required)", "confidence": "High"}, {"depname": "opensaml", "version": null, "version_op": null, "unified_name": "opensaml", "extractor_type": "cmake", "context": "find_package(opensaml)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb)", "confidence": "High"}, {"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "find_package(gperftools required components tcmalloc profiler)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "heavyai", "version": null, "version_op": null, "unified_name": "heavyai", "extractor_type": "cmake", "context": "project(heavyai)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["name"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_library(memkind_lib_path name memkind paths $env{memkind_prefix}/lib64 $env{memkind_prefix}/lib no_default_path)"}, {"filenames": ["name"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_library(numa_lib_path name numa paths $env{memkind_prefix}/lib no_default_path)"}, {"filenames": ["clang-cpp"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_library(clang_lib clang-cpp)"}, {"filenames": ["llvm"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_library(llvm_lib llvm)"}, {"filenames": ["ccache"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(ccache_exe ccache)"}, {"filenames": ["include-what-you-use"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(iwyu_exe include-what-you-use)"}, {"filenames": ["include-what-you-use"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(iwyu_exe include-what-you-use)"}, {"filenames": ["ld.${use_alternate_linker}"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(linker_executable ld.${use_alternate_linker} ${use_alternate_linker})"}, {"filenames": ["jq"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(jq_executable names jq)"}, {"filenames": ["mvn"], "version": "", "fromfile": "heavyai@@heavydb/CMakeLists.txt", "content": "find_program(mvn_executable names mvn)"}]}, {"deps": [{"depname": "geos", "version": null, "version_op": null, "unified_name": "geos", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGEOS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libgeos_c.so", "libgeos_c.dylib"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGEOS.cmake", "content": "find_library(geos_library\n  names libgeos_c.so libgeos_c.dylib\n  hints\n    ${geos_config_prefix}\n  path_suffixes lib\n  paths\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n)"}, {"filenames": ["geos-config"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGEOS.cmake", "content": "find_program(geos_config geos-config\n    path_suffixes bin\n    paths\n        /sw \n        /opt/local \n        /opt/csw \n        /opt\n)"}]}, {"deps": [{"depname": "rdkafka", "version": null, "version_op": null, "unified_name": "rdkafka", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindRdKafka.cmake", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rdkafka"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindRdKafka.cmake", "content": "find_library(rdkafka_library\n  names rdkafka\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["rdkafka++"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindRdKafka.cmake", "content": "find_library(rdkafka++_library\n  names rdkafka++\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "imgui", "version": null, "version_op": null, "unified_name": "imgui", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindImGui.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "thrust", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindThrust.cmake", "confidence": "High"}, {"depname": "thrust", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "  set( thrust_version \"${major}.${minor}.${version}\")", "confidence": "Low"}, {"depname": "thrust_major", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "  set( thrust_major_version \"${major}\")", "confidence": "Low"}, {"depname": "thrust_minor", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "  set( thrust_minor_version \"${minor}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "folly", "version": null, "version_op": null, "unified_name": "folly", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindFolly.cmake", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["folly"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindFolly.cmake", "content": "find_library(folly_library\n  names folly\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["double-conversion"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindFolly.cmake", "content": "find_library(folly_dc_library\n  names double-conversion\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["fmt"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindFolly.cmake", "content": "find_library(folly_fmt_library\n  names fmt\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGflags.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gflags"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGflags.cmake", "content": "find_library(gflags_library\n  names gflags\n  hints env ld_library_path\n  hints env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "mlpack", "version": null, "version_op": null, "unified_name": "mlpack", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindMLPACK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mlpack"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindMLPACK.cmake", "content": "find_library(mlpack_library\n  names mlpack\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/lib/x86_64-linux-gnu\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib\n)"}]}, {"deps": [{"depname": "libawss3", "version": null, "version_op": null, "unified_name": "awss3", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["aws-cpp-sdk-core"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscore_library\n  names aws-cpp-sdk-core\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-c-common"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawsccommon_library\n  names aws-c-common\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-c-event-stream"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawsceventstream_library\n  names aws-c-event-stream\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-checksums"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawschecksums_library\n  names aws-checksums\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-cpp-sdk-s3"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawss3_library\n  names aws-cpp-sdk-s3\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-cpp-sdk-sts"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawssts_library\n  names aws-cpp-sdk-sts\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-cpp-sdk-identity-management"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawsim_library\n  names aws-cpp-sdk-identity-management\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-cpp-sdk-cognito-identity"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawsci_library\n  names aws-cpp-sdk-cognito-identity\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints ${prefix_libawss3}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["aws-crt-cpp"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscrt_library\n    names aws-crt-cpp\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-io"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscio_library\n    names aws-c-io\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-auth"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscauth_library\n    names aws-c-auth\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-http"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawschttp\n    names aws-c-http\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-sdkutils"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscsdkutils\n    names aws-c-sdkutils\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-cal"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawsccal\n    names aws-c-cal\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["s2n"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libs2n_library\n    names s2n\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-compression"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscompression\n    names aws-c-compression\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-mqtt"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscmqtt\n    names aws-c-mqtt\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}, {"filenames": ["aws-c-s3"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibAwsS3.cmake", "content": "find_library(libawscs3\n    names aws-c-s3\n    hints env ld_library_path\n    hints env dyld_library_path\n    hints ${prefix_libawss3}/lib\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}]}, {"deps": [{"depname": "arrow", "version": null, "version_op": null, "unified_name": "arrow", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindArrow.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["arrow"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindArrow.cmake", "content": "find_library(arrow_library\n  names arrow\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["double-conversion"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindArrow.cmake", "content": "find_library(arrow_dc_library\n  names double-conversion\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["arrow_cuda"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindArrow.cmake", "content": "find_library(arrow_gpu_cuda_library\n  names arrow_cuda\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["arrow_bundled_dependencies"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindArrow.cmake", "content": "find_library(arrow_deps_library\n    names arrow_bundled_dependencies\n    hints\n    env ld_library_path\n    env dyld_library_path\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}]}, {"deps": [{"depname": "cryptopp", "version": null, "version_op": null, "unified_name": "cryptopp", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindCryptopp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cryptopp"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindCryptopp.cmake", "content": "find_library(cryptopp_library\n  names cryptopp\n  hints env ld_library_path\n  hints env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGLFW3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glfw", "glfw3"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGLFW3.cmake", "content": "find_library(glfw3_library\n  names glfw glfw3\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n\t/usr/lib\n\t/usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib\n)"}]}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGlog.cmake", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glog"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGlog.cmake", "content": "find_library(glog_library\n  names glog\n  hints env ld_library_path\n  hints env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["unwind"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGlog.cmake", "content": "find_library(unwind_library names unwind)"}]}, {"deps": [{"depname": "implot", "version": null, "version_op": null, "unified_name": "implot", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindImPlot.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "snappy", "version": null, "version_op": null, "unified_name": "snappy", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindSnappy.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["snappy"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindSnappy.cmake", "content": "find_library(snappy_library\n  names snappy\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindBoost.cmake", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost quiet no_module)", "confidence": "High"}, {"depname": "boost_boostified", "version": null, "version_op": null, "unified_name": "boost_boostified", "extractor_type": "cmake", "context": "        set(_boost_boostified_version\n          \"${cmake_match_1}_${cmake_match_2}_${cmake_match_3}\")", "confidence": "Low"}, {"depname": "boost_boostified", "version": null, "version_op": null, "unified_name": "boost_boostified", "extractor_type": "cmake", "context": "        set(_boost_boostified_version\n          \"${cmake_match_1}_${cmake_match_2}\")", "confidence": "Low"}, {"depname": "boost", "version": "0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "  set(boost_version 0)", "confidence": "Low"}, {"depname": "libboost_", "version": null, "version_op": null, "unified_name": "boost_", "extractor_type": "cmake", "context": "  set(boost_lib_version \"\")", "confidence": "Low"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "    set(_boost_version \"${boost_major_version}.${boost_minor_version}.${boost_subminor_version}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindBoost.cmake", "content": "find_library(${var} ${argn})"}, {"filenames": ["release"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_release release\n    names ${_boost_release_names}\n    hints ${_boost_library_search_dirs_tmp}\n    names_per_dir\n    doc \"${_boost_docstring_release}\"\n    )"}, {"filenames": ["debug"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_debug debug\n    names ${_boost_debug_names}\n    hints ${_boost_library_search_dirs_tmp}\n    names_per_dir\n    doc \"${_boost_docstring_debug}\"\n    )"}]}, {"deps": [{"depname": "gdalextra", "version": null, "version_op": null, "unified_name": "gdalextra", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGDALExtra.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGDALExtra.cmake", "content": "find_library(${name}_library\n    names ${argn}\n    hints env ld_library_path\n    hints env dyld_library_path\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib)"}]}, {"deps": [{"depname": "parquet", "version": null, "version_op": null, "unified_name": "parquet", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindParquet.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["parquet"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindParquet.cmake", "content": "find_library(parquet_library\n  names parquet\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "nvtx", "version": null, "version_op": null, "unified_name": "nvtx", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindNVTX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libarchive", "version": null, "version_op": null, "unified_name": "archive", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindLibArchive.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bz2"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibArchive.cmake", "content": "find_library(bz2_library\n  names bz2\n  hints env ld_library_path\n  hints env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["archive"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibArchive.cmake", "content": "find_library(libarchive_library\n  names archive\n  hints env ld_library_path\n  hints env dyld_library_path\n  hints /usr/local/opt/libarchive/lib\n  hints ${prefix_libarchive}/lib\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["lzma"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindLibArchive.cmake", "content": "find_library(lzma_library\n  names lzma\n  hints env ld_library_path\n  hints env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "blosc", "version": null, "version_op": null, "unified_name": "blosc", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindBLOSC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["blosc"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindBLOSC.cmake", "content": "find_library(blosc_library \n  names blosc   \n  hints \n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib\n)"}, {"filenames": ["blosc"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindBLOSC.cmake", "content": "find_library(blosc_library\n  names blosc\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/mapd-deps/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}]}, {"deps": [{"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindEGL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["egl", "egl", "libegl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindEGL.cmake", "content": "find_library(egl_library names egl egl libegl paths /usr/lib64 /usr/lib path_suffixes nvidia nvidia-375 nvidia-367 nvidia-365 nvidia-361 nvidia-381 nvidia-384 aarch64-linux-gnu no_default_path)"}]}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libname}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "content": "find_library(${libvar}\n    names ${libname}\n    hints env ld_library_path\n    hints env dyld_library_path\n    paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/homebrew/lib\n    /opt/local/lib\n  )"}, {"filenames": ["tcmalloc"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc tcmalloc)"}, {"filenames": ["profiler"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_profiler profiler)"}, {"filenames": ["tcmalloc_minimal"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc_minimal tcmalloc_minimal)"}, {"filenames": ["tcmalloc_and_profiler"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc_and_profiler tcmalloc_and_profiler)"}]}, {"deps": [{"depname": "gd", "version": null, "version_op": null, "unified_name": "gd", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gd"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGD.cmake", "content": "find_library(gd_library names gd path_suffixes lib64)"}]}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_library_release\n             names tbb\n             paths )"}, {"filenames": ["${tbb_library_names_debug}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_library_debug\n             names ${tbb_library_names_debug}\n             paths )"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_library_release\n             names tbbmalloc\n             paths )"}, {"filenames": ["${tbb_malloc_library_names_debug}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_library_debug\n             names ${tbb_malloc_library_names_debug}\n             paths )"}, {"filenames": ["tbbmalloc_proxy"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_proxy_library_release\n             names tbbmalloc_proxy\n             paths )"}, {"filenames": ["${tbb_malloc_proxy_library_names_debug}"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_proxy_library_debug\n             names ${tbb_malloc_proxy_library_names_debug}\n             paths )"}]}, {"deps": [{"depname": "thrift", "version": null, "version_op": null, "unified_name": "thrift", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindThrift.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["thrift"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindThrift.cmake", "content": "find_library(thrift_library\n  names thrift\n  hints\n  env ld_library_path\n  env dyld_library_path\n  paths\n  /usr/lib\n  /usr/local/lib\n  /usr/local/homebrew/lib\n  /opt/local/lib)"}, {"filenames": ["thrift"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindThrift.cmake", "content": "find_program(thrift_executable\n  names thrift\n  hints\n  env path\n  ${thrift_library_dir}/../bin\n  paths\n  /usr/bin\n  /usr/local/bin\n  /usr/local/homebrew/bin\n  /opt/local/bin)"}]}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opengl32"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library opengl32 )"}, {"filenames": ["glu32"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library glu32 )"}, {"filenames": ["opengl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library opengl doc \"opengl library for os x\")"}, {"filenames": ["opengl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library opengl doc\n    \"glu library for os x (usually same as opengl library)\")"}, {"filenames": ["opengl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_opengl_library\n    names opengl\n    hints ${_opengl_lib_path}\n  )"}, {"filenames": ["glx"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glx_library\n    names glx\n    hints ${_opengl_lib_path}\n  )"}, {"filenames": ["egl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_egl_library\n    names egl\n    hints ${_opengl_lib_path}\n  )"}, {"filenames": ["glu", "mesaglu"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library\n    names glu mesaglu\n    paths \n          /opt/graphics/opengl/lib\n          /usr/openwin/lib\n          /usr/shlib\n  )"}, {"filenames": ["gl", "mesagl"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_gl_library\n      names gl mesagl\n      paths /opt/graphics/opengl/lib\n            /usr/openwin/lib\n            /usr/shlib\n            ${_opengl_lib_path}\n      )"}, {"filenames": ["glu", "mesaglu"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindOpenGL.cmake", "content": "find_library(opengl_glu_library\n    names glu mesaglu\n    paths \n          /opt/graphics/opengl/lib\n          /usr/openwin/lib\n          /usr/shlib\n  )"}]}, {"deps": [{"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGLM.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "heavyai@@heavydb/cmake/Modules/FindGDAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gdal", "gdal_i", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGDAL.cmake", "content": "find_library(gdal_library\n  names gdal gdal_i gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  hints\n    ${gdal_config_prefix}\n  path_suffixes lib\n  paths\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n)"}, {"filenames": ["gdal-config"], "version": "", "fromfile": "heavyai@@heavydb/cmake/Modules/FindGDAL.cmake", "content": "find_program(gdal_config gdal-config\n    path_suffixes bin\n    paths\n        /sw \n        /opt/local \n        /opt/csw \n        /opt\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nvidiacomputecapability", "version": null, "version_op": null, "unified_name": "nvidiacomputecapability", "extractor_type": "cmake", "context": "project(nvidiacomputecapability)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xercesc", "version": null, "version_op": null, "unified_name": "xercesc", "extractor_type": "cmake", "context": "find_package(xercesc required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["name"], "version": "", "fromfile": "heavyai@@heavydb/QueryEngine/CMakeLists.txt", "content": "find_program(llvm_clangpp_cmd name clang++ hints ${llvm_tools_binary_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost-algorithm", "version": "", "version_op": null, "unified_name": "boost-algorithm", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "boost-filesystem", "version": "", "version_op": null, "unified_name": "boost-filesystem", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "boost-multiprecision", "version": "", "version_op": null, "unified_name": "boost-multiprecision", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "boost-system", "version": "", "version_op": null, "unified_name": "boost-system", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "brotli", "version": "", "version_op": null, "unified_name": "brotli", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "bzip2", "version": "", "version_op": null, "unified_name": "bzip2", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "double-conversion", "version": "", "version_op": null, "unified_name": "double-conversion", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "flatbuffers", "version": "", "version_op": null, "unified_name": "flatbuffers", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "gflags", "version": "", "version_op": null, "unified_name": "gflags", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "glog", "version": "", "version_op": null, "unified_name": "glog", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "lz4", "version": "", "version_op": null, "unified_name": "lz4", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "openssl", "version": "", "version_op": null, "unified_name": "openssl", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "rapidjson", "version": "", "version_op": null, "unified_name": "rapidjson", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "re2", "version": "", "version_op": null, "unified_name": "re2", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "snappy", "version": "", "version_op": null, "unified_name": "snappy", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "thrift", "version": "", "version_op": null, "unified_name": "thrift", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "uriparser", "version": "", "version_op": null, "unified_name": "uriparser", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "utf8proc", "version": "", "version_op": null, "unified_name": "utf8proc", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "zlib", "version": "", "version_op": null, "unified_name": "zlib", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}, {"depname": "zstd", "version": "", "version_op": null, "unified_name": "zstd", "extractor_type": "control", "context": "heavyai@@heavydb/scripts/windows/port_overlays/arrow/CONTROL", "confidence": "High"}], "type": "control"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["projinfo"], "version": "", "fromfile": "heavyai@@heavydb/Geospatial/CMakeLists.txt", "content": "find_program(projinfo_executable names projinfo)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components system program_options regex required quiet)", "confidence": "High"}, {"depname": "thrift", "version": null, "version_op": null, "unified_name": "thrift", "extractor_type": "cmake", "context": "find_package(thrift config required)", "confidence": "High"}, {"depname": "thrift", "version": null, "version_op": null, "unified_name": "thrift", "extractor_type": "cmake", "context": "find_package(thrift required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "linenoise", "version": null, "version_op": null, "unified_name": "linenoise", "extractor_type": "cmake", "context": "project(linenoise)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "muparserx", "version": "1", "version_op": null, "unified_name": "muparserx", "extractor_type": "cmake", "context": "set(muparserx_version ${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["m"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/muparserx/CMakeLists.txt", "content": "find_library(\n    m_library names m\n    paths /usr/lib /usr/lib64\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "conan"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "benchmark", "version": null, "version_op": null, "unified_name": "benchmark", "extractor_type": "cmake", "context": "project (benchmark cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["filecheck"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/CMakeLists.txt", "content": "find_program(llvm_filecheck_exe filecheck)"}, {"filenames": ["gcc-ar"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/CMakeLists.txt", "content": "find_program(gcc_ar gcc-ar)"}, {"filenames": ["gcc-ranlib"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/CMakeLists.txt", "content": "find_program(gcc_ranlib gcc-ranlib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "llvmnm", "version": null, "version_op": null, "unified_name": "llvmnm", "extractor_type": "cmake", "context": "find_package(llvmnm required)", "confidence": "High"}, {"depname": "llvmranlib", "version": null, "version_op": null, "unified_name": "llvmranlib", "extractor_type": "cmake", "context": "find_package(llvmranlib required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "_get_git", "version": null, "version_op": null, "unified_name": "_get_git", "extractor_type": "cmake", "context": "set(__get_git_version included)", "confidence": "Low"}, {"depname": "git", "version": "0.0.0", "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "          set(git_version \"v0.0.0\")", "confidence": "Low"}, {"depname": "git", "version": "0.0.0", "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "          set(git_version \"v0.0.0-dirty\")", "confidence": "Low"}, {"depname": "git", "version": "0.0.0", "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "      set(git_version \"v0.0.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "llvmar", "version": null, "version_op": null, "unified_name": "llvmar", "extractor_type": "cmake", "context": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMAr.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["llvm-ar"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMAr.cmake", "content": "find_program(llvmar_executable\n  names llvm-ar\n  doc \"the llvm-ar executable\"\n  )"}]}, {"deps": [{"depname": "llvmnm", "version": null, "version_op": null, "unified_name": "llvmnm", "extractor_type": "cmake", "context": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMNm.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["llvm-nm"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMNm.cmake", "content": "find_program(llvmnm_executable\n  names llvm-nm\n  doc \"the llvm-nm executable\"\n  )"}]}, {"deps": [{"depname": "llvmranlib", "version": null, "version_op": null, "unified_name": "llvmranlib", "extractor_type": "cmake", "context": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMRanLib.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["llvm-ranlib"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/cmake/Modules/FindLLVMRanLib.cmake", "content": "find_program(llvmranlib_executable\n  names llvm-ranlib\n  doc \"the llvm-ranlib executable\"\n  )"}]}, {"deps": [{"depname": "cmake_wrapper", "version": null, "version_op": null, "unified_name": "cmake_wrapper", "extractor_type": "cmake", "context": "project(cmake_wrapper)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "conan"}, {"deps": [{"depname": "test_package", "version": null, "version_op": null, "unified_name": "test_package", "extractor_type": "cmake", "context": "project(test_package)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/googlebenchmark/src/CMakeLists.txt", "content": "find_library(librt rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cpr"], "version": "", "fromfile": "heavyai@@heavydb/ThirdParty/cpr/cpr/cpr-config.cmake", "content": "find_library(cpr_library\n             names cpr\n             hints ${cpr_library_root})"}]}, {"deps": [{"depname": "cpr", "version": null, "version_op": null, "unified_name": "cpr", "extractor_type": "cmake", "context": "project(cpr)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl quiet)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "clang", "version": null, "version_op": null, "unified_name": "clang", "extractor_type": "cmake", "context": "find_package(clang required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}