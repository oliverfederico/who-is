{"target": "NERSC@@timemory", "extractors": [{"deps": [{"depname": "compile-time-perf", "version": null, "version_op": null, "unified_name": "compile-time-perf", "extractor_type": "cmake", "context": "find_package(compile-time-perf)", "confidence": "High"}, {"depname": "timemory", "version": "${timemory_version}", "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(     timemory     languages c cxx     version ${timemory_version})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": "11", "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 ${pybind11_python_version} module ${timemory_find_requirement}\n             components interpreter development)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp ${timemory_python_version} exact required)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs ${timemory_python_version} exact required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${_type}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/BuildSettings.cmake", "content": "find_library(${_type}_library names ${_type})"}]}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "set(timemory_version \"${version_string}\")", "confidence": "Low"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "set(timemory_version\n    \"${timemory_version_major}.${timemory_version_minor}.${timemory_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ProjectSetup.cmake", "content": "find_program(timemory_ccache_exe ccache path_suffixes bin)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["unwind"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ConfigCaliper.cmake", "content": "find_library(\n    libunwind_library\n    names unwind\n    path_suffixes lib lib64)"}, {"filenames": ["libunwind.a"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ConfigCaliper.cmake", "content": "find_library(\n    libunwind_static_library\n    names libunwind.a\n    path_suffixes lib lib64)"}]}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/Findgperftools.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${package_name}", "version": null, "version_op": null, "unified_name": "${package_name}", "extractor_type": "cmake", "context": "find_package(${package_name} ${package_find_args})", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi quiet)", "confidence": "High"}, {"depname": "upcxx", "version": null, "version_op": null, "unified_name": "upcxx", "extractor_type": "cmake", "context": "find_package(upcxx ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "upcxx", "version": null, "version_op": null, "unified_name": "upcxx", "extractor_type": "cmake", "context": "find_package(upcxx quiet)", "confidence": "High"}, {"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "papi", "version": null, "version_op": null, "unified_name": "papi", "extractor_type": "cmake", "context": "find_package(papi ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "nvtx", "version": null, "version_op": null, "unified_name": "nvtx", "extractor_type": "cmake", "context": "find_package(nvtx ${timemory_find_quietly})", "confidence": "High"}, {"depname": "cupti", "version": null, "version_op": null, "unified_name": "cupti", "extractor_type": "cmake", "context": "find_package(cupti ${timemory_find_requirement})", "confidence": "High"}, {"depname": "nccl", "version": null, "version_op": null, "unified_name": "nccl", "extractor_type": "cmake", "context": "find_package(nccl ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "find_package(nvml ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "find_package(libunwind ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "caliper", "version": null, "version_op": null, "unified_name": "caliper", "extractor_type": "cmake", "context": "find_package(caliper ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "caliper", "version": null, "version_op": null, "unified_name": "caliper", "extractor_type": "cmake", "context": "find_package(caliper ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "gotcha", "version": null, "version_op": null, "unified_name": "gotcha", "extractor_type": "cmake", "context": "find_package(gotcha ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "gotcha", "version": null, "version_op": null, "unified_name": "gotcha", "extractor_type": "cmake", "context": "find_package(gotcha ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "likwid", "version": null, "version_op": null, "unified_name": "likwid", "extractor_type": "cmake", "context": "find_package(likwid ${timemory_find_requirement})", "confidence": "High"}, {"depname": "ittnotify", "version": null, "version_op": null, "unified_name": "ittnotify", "extractor_type": "cmake", "context": "find_package(ittnotify ${timemory_find_requirement})", "confidence": "High"}, {"depname": "tau", "version": null, "version_op": null, "unified_name": "tau", "extractor_type": "cmake", "context": "find_package(tau ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "dyninst", "version": null, "version_op": null, "unified_name": "dyninst", "extractor_type": "cmake", "context": "find_package(dyninst ${timemory_find_quietly} ${timemory_find_requirement})", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost quiet ${timemory_find_requirement}\n                         components ${timemory_boost_components})", "confidence": "High"}, {"depname": "allineamap", "version": null, "version_op": null, "unified_name": "allineamap", "extractor_type": "cmake", "context": "find_package(allineamap ${timemory_find_requirement})", "confidence": "High"}, {"depname": "craypat", "version": null, "version_op": null, "unified_name": "craypat", "extractor_type": "cmake", "context": "find_package(craypat ${timemory_find_requirement} components ${craypat_components})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthread", "pthreads"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(pthread_library names pthread pthreads)"}, {"filenames": ["pmi"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(\n            pmi_library\n            names pmi\n            paths ${_pmi_hints}\n            hints ${_pmi_hints}\n            path_suffixes lib64 lib)"}, {"filenames": ["gcov"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(gcov_library gcov)"}, {"filenames": ["roctx64"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(\n        rocm_roctx64_library\n        names roctx64\n        path_suffixes lib64 lib\n        hints ${hip_dir}/../../..\n        paths ${hip_dir}/../../..)"}, {"filenames": ["dyninstapi_rt"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(\n        dyninst_api_rt dyninstapi_rt\n        hints ${dyninst_root_dir} ${dyninst_dir}\n        paths ${dyninst_root_dir} ${dyninst_dir}\n        path_suffixes lib)"}, {"filenames": ["dyninstapi_rt"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Packages.cmake", "content": "find_library(\n        dyninst_api_rt dyninstapi_rt\n        hints ${dyninst_root_dir} ${dyninst_dir}\n        paths ${dyninst_root_dir} ${dyninst_dir}\n        path_suffixes lib)"}]}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindPython3.cmake", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package (python3 components interpreter development)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "craypat", "version": null, "version_op": null, "unified_name": "craypat", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindCrayPAT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["_pat_rt"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCrayPAT.cmake", "content": "find_library(\n    craypat_library\n    names _pat_rt\n    path_suffixes lib64 lib lib32\n    hints ${craypat_root_dir} $env{craypat_root}\n    paths ${craypat_root_dir} $env{craypat_root})"}, {"filenames": ["_pat_${_comp}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCrayPAT.cmake", "content": "find_library(\n        craypat_${_comp}_library\n        names _pat_${_comp}\n        path_suffixes lib64 lib lib32\n        hints ${craypat_root_dir} ${craypat_library_dir} $env{craypat_root}\n        paths ${craypat_root_dir} ${craypat_library_dir} $env{craypat_root})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ittnotify", "version": null, "version_op": null, "unified_name": "ittnotify", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/Findittnotify.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ittnotify", "libittnotify"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Findittnotify.cmake", "content": "find_library(\n    ittnotify_library\n    names ittnotify libittnotify\n    path_suffixes lib lib64 lib32\n    hints ${_ittnotify_path_hints}\n    paths ${_ittnotify_path_hints})"}, {"filenames": ["dl"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Findittnotify.cmake", "content": "find_library(\n    ittnotify_dl_library\n    names dl\n    path_suffixes lib lib64 lib32\n    hints ${_ittnotify_path_hints}\n    paths ${_ittnotify_path_hints})"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["clang-format-9", "clang-format-9.0", "clang-format-mp-9.0", "clang-format"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ClangFormat.cmake", "content": "find_program(timemory_clang_formatter names clang-format-9 clang-format-9.0\n                                            clang-format-mp-9.0 clang-format)"}, {"filenames": ["black"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ClangFormat.cmake", "content": "find_program(timemory_black_formatter names black)"}, {"filenames": ["cmake-format"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ClangFormat.cmake", "content": "find_program(timemory_cmake_formatter names cmake-format)"}]}, {"deps": [{"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindPythonLibs.cmake", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python${_current_version_no_dots}_d", "python"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPythonLibs.cmake", "content": "find_library(\n            python_debug_library\n            names python${_current_version_no_dots}_d python names_per_dir\n            hints ${_python_library_path_hint}\n            paths\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs/debug\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs/debug\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs/debug\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs/debug\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs/debug\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs/debug\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs\n                [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs\n                [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs\n            )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}mu", "python${_current_version}m", "python${_current_version}u", "python${_current_version}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPythonLibs.cmake", "content": "find_library(\n        python_library\n        names python${_current_version_no_dots} python${_current_version}mu\n              python${_current_version}m python${_current_version}u\n              python${_current_version} names_per_dir\n        hints ${_python_library_path_hint}\n        paths\n            ${python_framework_libraries}\n            [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n            [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs\n            [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs\n            [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n            [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-64\\\\installpath]/libs\n            [hkey_current_user\\\\software\\\\python\\\\pythoncore\\\\${_current_version}-32\\\\installpath]/libs\n        )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPythonLibs.cmake", "content": "find_library(\n        python_library\n        names python${_current_version_no_dots} python${_current_version} names_per_dir\n        \n        path_suffixes python${_current_version}/config)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dl"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ConfigCUDA.cmake", "content": "find_library(cuda_dl_library names dl)"}, {"filenames": ["rt"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/ConfigCUDA.cmake", "content": "find_library(cuda_rt_library names rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindNVML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvidia-ml"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindNVML.cmake", "content": "find_library(\n    nvml_library\n    names nvidia-ml\n    paths ${_nvml_paths}\n    hints ${_nvml_paths}\n    path_suffixes lib lib64\n    doc \"path to the nvml library\")"}, {"filenames": ["nvidia-ml"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindNVML.cmake", "content": "find_library(\n        nvml_library\n        names nvidia-ml\n        paths ${_nvml_paths}\n        hints ${_nvml_paths}\n        path_suffixes lib/stubs lib64/stubs stubs)"}]}, {"deps": [{"depname": "nccl", "version": null, "version_op": null, "unified_name": "nccl", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindNCCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nccl"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindNCCL.cmake", "content": "find_library(\n    nccl_library\n    names nccl\n    path_suffixes lib lib64 lib 64 lib/64\n    hints ${nccl_root_dir}\n    paths ${nccl_root_dir})"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/LocalFindUtilities.cmake", "content": "find_library(${_var} ${argn})"}]}, {"deps": [{"depname": "allineamap", "version": null, "version_op": null, "unified_name": "allineamap", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindAllineaMAP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["map-sampler"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindAllineaMAP.cmake", "content": "find_library(\n    allineamap_library\n    names map-sampler\n    path_suffixes lib lib64 lib 64 lib/64\n    hints ${allineamap_root_dir} ${allineamap_hints}\n    paths ${allineamap_root_dir} ${allineamap_hints})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cupti", "version": null, "version_op": null, "unified_name": "cupti", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cupti"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_cupti_library\n    names cupti\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["nvperf_host"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_nvperf_host_library\n    names nvperf_host\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["nvperf_host_static"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_nvperf_host_static_library\n    names nvperf_host_static\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["nvperf_target"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_nvperf_target_library\n    names nvperf_target\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["pcsamplingutil"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_pcsampling_util_library\n    names pcsamplingutil\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["cuda"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n    cupti_cuda_library\n    names cuda\n    hints ${cupti_root_dir} ${_cuda_paths}\n    paths ${cupti_root_dir} ${_cuda_paths}\n    path_suffixes lib lib64 lib/nvidia lib64/nvidia nvidia)"}, {"filenames": ["cuda"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindCUPTI.cmake", "content": "find_library(\n        cupti_cuda_library\n        names cuda\n        hints ${_cuda_paths}\n        paths ${_cuda_paths}\n        path_suffixes lib/stubs lib64/stubs stubs)"}]}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dot"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Documentation.cmake", "content": "find_program(graphviz_dot_path dot)"}, {"filenames": ["pdflatex"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Documentation.cmake", "content": "find_program(pdflatex pdflatex)"}]}, {"deps": [{"depname": "upcxx", "version": null, "version_op": null, "unified_name": "upcxx", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindUPCXX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["upcxx-meta"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindUPCXX.cmake", "content": "find_program(\n        upcxx_meta_executable upcxx-meta\n        hints \"$env{upcxx_install}/bin\"\n        no_default_path)"}, {"filenames": ["upcxx-meta"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindUPCXX.cmake", "content": "find_program(\n        upcxx_meta_executable upcxx-meta\n        hints upcxx_root_dir env upcxx_root_dir\n        path_suffixes bin)"}]}, {"deps": [{"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "find_package(libunwind _use_libunwind)", "confidence": "High"}, {"depname": "...", "version": null, "version_op": null, "unified_name": "...", "extractor_type": "cmake", "context": "find_package(...)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["clang-tidy"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Options.cmake", "content": "find_program(clang_tidy_command names clang-tidy)"}]}, {"deps": [{"depname": "cpuarch", "version": null, "version_op": null, "unified_name": "cpuarch", "extractor_type": "cmake", "context": "find_package(cpuarch ${_cpuarch_components})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindBoost.cmake", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost)", "confidence": "High"}, {"depname": "boost", "version": "1.36.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.36.0)", "confidence": "High"}, {"depname": "boost", "version": "1.56", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.56 required components\n               date_time filesystem iostreams)", "confidence": "High"}, {"depname": "boost", "version": "1.67", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.67 required components\n               python36 numpy36)", "confidence": "High"}, {"depname": "boost", "version": "1.66.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.66.0 components date_time filesystem system ...)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost quiet no_module)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads )", "confidence": "High"}, {"depname": "boost_compiler", "version": null, "version_op": null, "unified_name": "boost_compiler", "extractor_type": "cmake", "context": "\n    set(_boost_compiler_version\n        \"${_boost_compiler_version_major}${_boost_compiler_version_minor}\")", "confidence": "Low"}, {"depname": "boost_compiler", "version": null, "version_op": null, "unified_name": "boost_compiler", "extractor_type": "cmake", "context": "                set(_boost_compiler_version \"${_boost_compiler_version_major}\")", "confidence": "Low"}, {"depname": "boost_compiler", "version": null, "version_op": null, "unified_name": "boost_compiler", "extractor_type": "cmake", "context": "                set(_boost_compiler_version \"${_boost_compiler_version_major}\")", "confidence": "Low"}, {"depname": "component_python", "version": "2", "version_op": null, "unified_name": "component_python", "extractor_type": "cmake", "context": "        set(component_python_version \"${cmake_match_2}\")", "confidence": "Low"}, {"depname": "component_python", "version": "2", "version_op": null, "unified_name": "component_python", "extractor_type": "cmake", "context": "        set(component_python_version \"${cmake_match_2}\")", "confidence": "Low"}, {"depname": "boost_boostified", "version": null, "version_op": null, "unified_name": "boost_boostified", "extractor_type": "cmake", "context": "            set(_boost_boostified_version\n                \"${cmake_match_1}_${cmake_match_2}_${cmake_match_3}\")", "confidence": "Low"}, {"depname": "boost_boostified", "version": null, "version_op": null, "unified_name": "boost_boostified", "extractor_type": "cmake", "context": "            set(_boost_boostified_version \"${cmake_match_1}_${cmake_match_2}\")", "confidence": "Low"}, {"depname": "libboost_", "version": null, "version_op": null, "unified_name": "boost_", "extractor_type": "cmake", "context": "    set(boost_lib_version \"\")", "confidence": "Low"}, {"depname": "libboost_", "version": "1", "version_op": null, "unified_name": "boost_", "extractor_type": "cmake", "context": "        set(boost_lib_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "boost_major", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "    set(boost_major_version ${boost_version_major})", "confidence": "Low"}, {"depname": "boost_minor", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "    set(boost_minor_version ${boost_version_minor})", "confidence": "Low"}, {"depname": "boost_subminor", "version": null, "version_op": null, "unified_name": "boost_subminor", "extractor_type": "cmake", "context": "    set(boost_subminor_version ${boost_version_patch})", "confidence": "Low"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "            set(boost_version ${boost_version_major}.${boost_version_minor}.${boost_version_patch})", "confidence": "Low"}, {"depname": "boost", "version": "1", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "            set(boost_version ${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindBoost.cmake", "content": "find_library(${var} ${argn})"}, {"filenames": ["release"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindBoost.cmake", "content": "find_library(\n            boost_${uppercomponent}_library_release\n            release\n            names\n            ${_boost_release_names}\n            hints\n            ${_boost_library_search_dirs_tmp}\n            names_per_dir\n            doc\n            \"${_boost_docstring_release}\")"}, {"filenames": ["debug"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindBoost.cmake", "content": "find_library(\n            boost_${uppercomponent}_library_debug\n            debug\n            names\n            ${_boost_debug_names}\n            hints\n            ${_boost_library_search_dirs_tmp}\n            names_per_dir\n            doc\n            \"${_boost_docstring_debug}\")"}]}, {"deps": [{"depname": "papi", "version": null, "version_op": null, "unified_name": "papi", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindPAPI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["papi"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPAPI.cmake", "content": "find_library(\n    papi_library\n    names papi\n    hints ${papi_root}\n    paths ${papi_root}\n    path_suffixes lib lib64\n    doc \"path to the papi library\" no_cmake_environment_path)"}, {"filenames": ["pfm", "libpfm.so", "libpfm.so.4"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPAPI.cmake", "content": "find_library(\n    papi_pfm_library\n    names pfm libpfm.so libpfm.so.4\n    hints ${papi_root}\n    paths ${papi_root}\n    path_suffixes lib lib64\n    doc \"path to the papi pfm library\" no_cmake_environment_path)"}]}, {"deps": [{"depname": "nvtx", "version": null, "version_op": null, "unified_name": "nvtx", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindNVTX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvtoolsext"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindNVTX.cmake", "content": "find_library(\n    nvtx_library\n    names nvtoolsext\n    paths ${nvtx_root_dir}\n          env\n          nvtx_root_dir\n          ${cuda_toolkit_root_dir}\n          ${cuda_sdk_root_dir}\n          /usr/local/cuda\n          env\n          library_path\n          env\n          ld_library_path\n          env\n          dyld_library_path\n    hints ${nvtx_root_dir}\n          env\n          nvtx_root_dir\n          ${cuda_toolkit_root_dir}\n          ${cuda_sdk_root_dir}\n          /usr/local/cuda\n          env\n          library_path\n          env\n          ld_library_path\n          env\n          dyld_library_path\n    path_suffixes lib lib64\n    doc \"path to the nvtx library\")"}]}, {"deps": [{"depname": "tau", "version": null, "version_op": null, "unified_name": "tau", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindTAU.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tau"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindTAU.cmake", "content": "find_library(\n    tau_library\n    names tau\n    hints ${tau_root_dir}\n          env\n          tau_root_dir\n          env\n          ld_library_path\n          env\n          library_path\n          env\n          dyld_library_path\n    path_suffixes\n        lib\n        lib64\n        tau\n        lib/tau\n        lib64/tau\n        \n        lib/tau/${cmake_system_processor}\n        lib64/tau/${cmake_system_processor}\n        lib/tau/${cmake_system_processor}/lib\n        lib64/tau/${cmake_system_processor}/lib64\n        lib64/tau/${cmake_system_processor}/lib\n        ${cmake_system_processor}/lib\n        ${cmake_system_processor}/lib/tau\n        ${cmake_system_processor}/lib64\n        ${cmake_system_processor}/lib64/tau\n    doc \"path to the tau library\")"}]}, {"deps": [{"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/Findlibunwind.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["unwind", "libunwind"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Findlibunwind.cmake", "content": "find_library(\n        libunwind_library\n        names unwind libunwind\n        hints ${libunwind_root}\n        paths ${libunwind_root}\n        path_suffixes lib lib64\n        doc \"path to the libunwind library\")"}, {"filenames": ["unwind-_${_component}", "libunwind-_${_component}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/Findlibunwind.cmake", "content": "find_library(\n        libunwind_${_component}_library\n        names unwind-_${_component} libunwind-_${_component}\n        hints ${libunwind_root}\n        paths ${libunwind_root}\n        path_suffixes lib lib64\n        doc \"path to the libunwind ${_component} library\")"}]}, {"deps": [{"depname": "cpuarch", "version": null, "version_op": null, "unified_name": "cpuarch", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindCpuArch.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "${package_name}", "version": null, "version_op": null, "unified_name": "${package_name}", "extractor_type": "cmake", "context": "find_package(${package_name} quiet ${package_unparsed_arguments})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "likwid", "version": null, "version_op": null, "unified_name": "likwid", "extractor_type": "cmake", "context": "NERSC@@timemory/cmake/Modules/FindLIKWID.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${library_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindLIKWID.cmake", "content": "find_library(\n        ${_var}\n        names ${library_names}\n        hints ${library_hints}\n        paths ${library_paths}\n        path_suffixes ${library_path_suffixes}\n        doc \"${library_doc}\")"}, {"filenames": ["likwid"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindLIKWID.cmake", "content": "find_library(\n    likwid_library\n    names likwid\n    hints ${likwid_root_dir}\n          env\n          likwid_root_dir\n          env\n          library_path\n          env\n          ld_library_path\n          env\n          dyld_library_path\n    path_suffixes lib lib64\n    doc \"path to the likwid library\")"}, {"filenames": ["likwid-hwloc"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindLIKWID.cmake", "content": "find_library(\n    likwid_hwloc_library\n    names likwid-hwloc\n    hints ${likwid_root_dir}\n          env\n          likwid_root_dir\n          env\n          library_path\n          env\n          ld_library_path\n          env\n          dyld_library_path\n    path_suffixes lib lib64\n    doc \"path to the likwid hwloc library\")"}, {"filenames": ["likwid-lua"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindLIKWID.cmake", "content": "find_library(\n    likwid_lua_library\n    names likwid-lua\n    hints ${likwid_root_dir}\n          env\n          likwid_root_dir\n          env\n          ld_library_path\n          env\n          library_path\n          env\n          dyld_library_path\n    path_suffixes lib lib64\n    doc \"path to the likwid lua library\")"}]}, {"deps": [{"depname": "expected", "version": null, "version_op": null, "unified_name": "expected", "extractor_type": "cmake", "context": "        set(expected_version \"${_pvi_unparsed_arguments}\")", "confidence": "Low"}, {"depname": "major", "version": null, "version_op": null, "unified_name": "major", "extractor_type": "cmake", "context": "        set(major_version false)", "confidence": "Low"}, {"depname": "expected", "version": null, "version_op": null, "unified_name": "expected", "extractor_type": "cmake", "context": "        set(expected_version \"${_pvc_unparsed_arguments}\")", "confidence": "Low"}, {"depname": "major", "version": null, "version_op": null, "unified_name": "major", "extractor_type": "cmake", "context": "        set(major_version true)", "confidence": "Low"}, {"depname": "expected", "version": null, "version_op": null, "unified_name": "expected", "extractor_type": "cmake", "context": "        set(expected_version \"${_${_python_prefix}_required_version_major}\")", "confidence": "Low"}, {"depname": "expected", "version": null, "version_op": null, "unified_name": "expected", "extractor_type": "cmake", "context": "        set(expected_version ${_pvl_unparsed_arguments})", "confidence": "Low"}, {"depname": "expected", "version": null, "version_op": null, "unified_name": "expected", "extractor_type": "cmake", "context": "        set(expected_version ${_pvid_unparsed_arguments})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                    _${_python_prefix}_library_release\n                    names ${_${_python_prefix}_lib_names} names_per_dir\n                    hints ${_${_python_prefix}_hints}\n                    path_suffixes ${_${_python_prefix}_path_suffixes}\n                    no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                            _${_python_prefix}_library_release\n                            names ${_${_python_prefix}_lib_names} names_per_dir\n                            hints ${_${_python_prefix}_hints}\n                            paths ${_${_python_prefix}_virtualenv_paths}\n                                  ${_${_python_prefix}_framework_paths}\n                            path_suffixes ${_${_python_prefix}_path_suffixes}\n                            no_cmake_path no_cmake_environment_path\n                            no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                            _${_python_prefix}_library_release\n                            names ${_${_python_prefix}_lib_names} names_per_dir\n                            hints ${_${_python_prefix}_hints}\n                            paths ${_${_python_prefix}_virtualenv_paths}\n                                  ${_${_python_prefix}_registry_paths}\n                            path_suffixes ${_${_python_prefix}_path_suffixes}\n                            no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                        _${_python_prefix}_library_release\n                        names ${_${_python_prefix}_lib_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_virtualenv_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                        _${_python_prefix}_library_release\n                        names ${_${_python_prefix}_lib_names} names_per_dir\n                        paths ${__${_python_prefix}_framework_paths}\n                              ${__${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                                _${_python_prefix}_library_release\n                                names ${_${_python_prefix}_lib_names} names_per_dir\n                                hints ${_${_python_prefix}_hints}\n                                paths ${_${_python_prefix}_virtualenv_paths}\n                                      ${_${_python_prefix}_framework_paths}\n                                path_suffixes ${_${_python_prefix}_path_suffixes}\n                                no_cmake_path no_cmake_environment_path\n                                no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                                _${_python_prefix}_library_release\n                                names ${_${_python_prefix}_lib_names} names_per_dir\n                                hints ${_${_python_prefix}_hints}\n                                paths ${_${_python_prefix}_virtualenv_paths}\n                                      ${_${_python_prefix}_registry_paths}\n                                path_suffixes ${_${_python_prefix}_path_suffixes}\n                                no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                            _${_python_prefix}_library_release\n                            names ${_${_python_prefix}_lib_names} names_per_dir\n                            hints ${_${_python_prefix}_hints}\n                            paths ${_${_python_prefix}_virtualenv_paths}\n                            path_suffixes ${_${_python_prefix}_path_suffixes}\n                            no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_lib_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                            _${_python_prefix}_library_release\n                            names ${_${_python_prefix}_lib_names} names_per_dir\n                            paths ${__${_python_prefix}_framework_paths}\n                                  ${__${_python_prefix}_registry_paths}\n                            path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_lib_names_debug}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                _${_python_prefix}_library_debug\n                names ${_${_python_prefix}_lib_names_debug} names_per_dir\n                hints \"${_${_python_prefix}_path}\" ${_${_python_prefix}_hints}\n                no_default_path)"}, {"filenames": ["${_${_python_prefix}_lib_names_debug}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_library(\n                _${_python_prefix}_library_debug\n                names ${_${_python_prefix}_lib_names_debug} names_per_dir\n                no_system_environment_path no_cmake_system_path)"}, {"filenames": ["\"mono\""], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(${_python_prefix}_dotnet_launcher names \"mono\")"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths env virtual_env env conda_prefix\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_executable\n                    names ${_${_python_prefix}_names} names_per_dir\n                    hints ${_${_python_prefix}_hints}\n                    path_suffixes ${_${_python_prefix}_path_suffixes}\n                    no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_executable\n                    names ${_${_python_prefix}_names} names_per_dir\n                    path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths env virtual_env env conda_prefix\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_executable\n                    names ${_${_python_prefix}_names} names_per_dir\n                    hints ${_${_python_prefix}_hints}\n                    path_suffixes ${_${_python_prefix}_path_suffixes}\n                    no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_executable\n                    names ${_${_python_prefix}_names}\n                    path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_executable\n                        names ${_${_python_prefix}_names} names_per_dir\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(_${_python_prefix}_executable\n                             names ${_${_python_prefix}_names})"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_compiler\n                    names ${_${_python_prefix}_compiler_names} names_per_dir\n                    hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                    path_suffixes ${_${_python_prefix}_path_suffixes}\n                    no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_compiler\n                    names ${_${_python_prefix}_compiler_names} names_per_dir\n                    path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_compiler\n                    names ${_${_python_prefix}_compiler_names} names_per_dir\n                    hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                    path_suffixes ${_${_python_prefix}_path_suffixes}\n                    no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_compiler\n                        names ${_${_python_prefix}_compiler_names} names_per_dir\n                        paths ${_${_python_prefix}_registry_paths}\n                        path_suffixes ${_${_python_prefix}_path_suffixes}\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_compiler_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                _${_python_prefix}_compiler\n                names ${_${_python_prefix}_compiler_names}\n                hints ${_${_python_prefix}_iron_root} ${_${_python_prefix}_hints}\n                path_suffixes ${_${_python_prefix}_path_suffixes})"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_config\n                        names ${_${_python_prefix}_config_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_virtualenv_paths}\n                              ${_${_python_prefix}_framework_paths}\n                        path_suffixes bin\n                        no_cmake_path no_cmake_environment_path\n                        no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                    _${_python_prefix}_config\n                    names ${_${_python_prefix}_config_names} names_per_dir\n                    hints ${_${_python_prefix}_hints}\n                    paths ${_${_python_prefix}_virtualenv_paths}\n                    path_suffixes bin)"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_config\n                        names ${_${_python_prefix}_config_names} names_per_dir\n                        paths ${_${_python_prefix}_framework_paths}\n                        path_suffixes bin\n                        no_default_path)"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                            _${_python_prefix}_config\n                            names ${_${_python_prefix}_config_names} names_per_dir\n                            hints ${_${_python_prefix}_hints}\n                            paths ${_${_python_prefix}_virtualenv_paths}\n                                  ${_${_python_prefix}_framework_paths}\n                            path_suffixes bin\n                            no_cmake_path no_cmake_environment_path\n                            no_system_environment_path no_cmake_system_path)"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                        _${_python_prefix}_config\n                        names ${_${_python_prefix}_config_names} names_per_dir\n                        hints ${_${_python_prefix}_hints}\n                        paths ${_${_python_prefix}_virtualenv_paths}\n                        path_suffixes bin)"}, {"filenames": ["${_${_python_prefix}_config_names}"], "version": "", "fromfile": "NERSC@@timemory/cmake/Modules/FindPython/Support.cmake", "content": "find_program(\n                            _${_python_prefix}_config\n                            names ${_${_python_prefix}_config_names} names_per_dir\n                            paths ${_${_python_prefix}_framework_paths}\n                            path_suffixes bin\n                            no_default_path)"}]}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-examples c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components ${components}\n    optional_components mpi common cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-cpu-roofline-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components threading compile-options analysis-tools\n    optional_components cxx cuda cuda-compiler cudart nvtx papi hip hip-device)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-gpu-examples languages ${langs})", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-gpu-example-v3 languages ${langs})", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "kokkos", "version": "3.0", "version_op": null, "unified_name": "kokkos", "extractor_type": "cmake", "context": "find_package(kokkos 3.0 quiet)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-ert-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components c\n    optional_components compile-options analysis-tools)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-c-example languages c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-statistics-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components headers gotcha\n    optional_components cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-gotcha-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 quiet)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi quiet)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory\n    components headers\n    optional_components mpi cxx shared)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-python-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components compile-options analysis-tools\n    optional_components cxx shared)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi quiet)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-optional-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-derived-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components ${components}\n    optional_components cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-likwid-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-custom-dynamic-instr-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components ${components}\n    optional_components cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-cxx-basic-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-cxx-tuple-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-cxx-overhead-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components fortran)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-fortran-example languages fortran)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory required components ${components})", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-minimal-example languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(timemory optional_components compiler-instrument)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-compiler-instrument-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components cxx\n    optional_components compile-options)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-array-of-bundles-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components ${components}\n    optional_components cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-caliper-example languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "find_package(\n    timemory required\n    components headers roofline\n    optional_components cxx)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-gpu-roofline-example languages c cxx cuda)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-ncclp-tool)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "papi", "version": null, "version_op": null, "unified_name": "papi", "extractor_type": "cmake", "context": "find_package(papi quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["explain"], "version": "", "fromfile": "NERSC@@timemory/source/tools/timemory-timem/CMakeLists.txt", "content": "find_library(\n        libexplain_library\n        names explain\n        path_suffixes lib lib64 lib32)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-mallocp-tool)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-ompt-tool)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "kokkos", "version": "3.1", "version_op": null, "unified_name": "kokkos", "extractor_type": "cmake", "context": "find_package(kokkos 3.1 required)", "confidence": "High"}, {"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-kokkos-connector languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "timemory", "version": null, "version_op": null, "unified_name": "timemory", "extractor_type": "cmake", "context": "project(timemory-mpip-tool)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["lldb"], "version": "", "fromfile": "NERSC@@timemory/source/python/CMakeLists.txt", "content": "find_program(lldb_exe names lldb)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}, {"depname": "ptl", "version": null, "version_op": null, "unified_name": "ptl", "extractor_type": "cmake", "context": "find_package(ptl quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["otool"], "version": "", "fromfile": "NERSC@@timemory/source/tests/CMakeLists.txt", "content": "find_program(otool_exe names otool)"}, {"filenames": ["ldd"], "version": "", "fromfile": "NERSC@@timemory/source/tests/CMakeLists.txt", "content": "find_program(ldd_exe names ldd)"}, {"filenames": ["nm"], "version": "", "fromfile": "NERSC@@timemory/source/tests/CMakeLists.txt", "content": "find_program(nm_exe names nm)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cython", "version": null, "version_op": null, "unified_name": "cython", "extractor_type": "cmake", "context": "find_package(cython quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}