{"target": "RocketGod-git@@HackRF-Treasure-Chest", "extractors": [{"deps": [{"depname": "portapack", "version": null, "version_op": null, "unified_name": "portapack", "extractor_type": "cmake", "context": "project(portapack-h1)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "hackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "project (hackrf c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "usb1", "version": null, "version_op": null, "unified_name": "usb1", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindUSB1.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libusb libusb-1.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["usb"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindUSB1.cmake", "content": "find_library(libusb_libraries names usb\n    paths ${pc_libusb_libdir} ${pc_libusb_library_dirs})"}]}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindFFTW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${fftw_libraries}"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindFFTW.cmake", "content": "find_library (fftw_libraries names ${fftw_libraries})"}, {"filenames": ["fftw3f"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindFFTW.cmake", "content": "find_library (fftw_libraries names fftw3f)"}]}, {"deps": [{"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindLIBHACKRF.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libhackrf quiet libhackrf)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hackrf"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindLIBHACKRF.cmake", "content": "find_library(libhackrf_libraries\n    names hackrf\n    hints $env{libhackrf_dir}/lib ${pc_libhackrf_libdir}\n    paths /usr/local/lib /usr/lib /opt/local/lib ${pc_libhackrf_libdir} ${pc_libhackrf_library_dirs} ${cmake_source_dir}/../libhackrf/src\n  )"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindThreads.cmake", "confidence": "High"}, {"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "check_library_exists(pthreads pthread_create \"\" cmake_have_pthreads_create)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_create \"\" cmake_have_pthread_create)", "confidence": "High"}, {"depname": "thread", "version": null, "version_op": null, "unified_name": "thread", "extractor_type": "cmake", "context": "check_library_exists(thread thr_create \"\" cmake_have_thr_create)", "confidence": "High"}, {"depname": "cma", "version": null, "version_op": null, "unified_name": "cma", "extractor_type": "cmake", "context": "check_library_exists(cma pthread_attr_create \"\" cmake_have_hp_cma)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthreadgc2"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/portapack-mayhem/hackrf/host/cmake/modules/FindThreads.cmake", "content": "find_library(threads_pthreads_win32_library\n               names pthreadgc2\n               paths \n               doc \"the portable threads library for win32\"\n               no_system_path\n               )"}]}, {"deps": [{"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "find_package(libhackrf required)", "confidence": "High"}, {"depname": "hackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "project(hackrf-tools c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "find_package(fftw required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "usb1", "version": null, "version_op": null, "unified_name": "usb1", "extractor_type": "cmake", "context": "find_package(usb1 required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "project(libhackrf c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hackrf_firmware_all", "version": null, "version_op": null, "unified_name": "hackrf_firmware_all", "extractor_type": "cmake", "context": "project (hackrf_firmware_all c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "blinky", "version": null, "version_op": null, "unified_name": "blinky", "extractor_type": "cmake", "context": "project(blinky c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "hackrf_usb", "version": null, "version_op": null, "unified_name": "hackrf_usb", "extractor_type": "cmake", "context": "project(hackrf_usb c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "firmware", "version": null, "version_op": null, "unified_name": "firmware", "extractor_type": "cmake", "context": "project(firmware)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "application", "version": null, "version_op": null, "unified_name": "application", "extractor_type": "cmake", "context": "project(application)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "baseband_shared", "version": null, "version_op": null, "unified_name": "baseband_shared", "extractor_type": "cmake", "context": "project(baseband_shared)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hamlib", "version": null, "version_op": null, "unified_name": "hamlib", "extractor_type": "cmake", "context": "find_package(hamlib required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "liquid", "version": null, "version_op": null, "unified_name": "liquid", "extractor_type": "cmake", "context": "find_package(liquid required)", "confidence": "High"}, {"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets components gl core propgrid adv base required)", "confidence": "High"}, {"depname": "soapysdr", "version": "0.4.0", "version_op": null, "unified_name": "soapysdr", "extractor_type": "cmake", "context": "find_package(soapysdr \"0.4.0\" no_module required)", "confidence": "High"}, {"depname": "rtaudio", "version": null, "version_op": null, "unified_name": "rtaudio", "extractor_type": "cmake", "context": "find_package(rtaudio)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake", "context": "find_package(jack)", "confidence": "High"}, {"depname": "cubicsdr", "version": null, "version_op": null, "unified_name": "cubicsdr", "extractor_type": "cmake", "context": "project (cubicsdr)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["coreaudio"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/CMakeLists.txt", "content": "find_library(coreaudio_library coreaudio)"}]}, {"deps": [{"depname": "hamlib", "version": null, "version_op": null, "unified_name": "hamlib", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/Findhamlib.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hamlib"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/Findhamlib.cmake", "content": "find_library(hamlib_library\n\tnames hamlib\n\tpaths\n\t\t/usr/lib64/hamlib\n\t\t/usr/lib/hamlib\n\t\t/usr/lib64\n\t\t/usr/lib\n\t\t/usr/local/lib64/hamlib\n\t\t/usr/local/lib/hamlib\n\t\t/usr/local/lib64\n\t\t/usr/local/lib\n\t\t/opt/local/lib\n\t\t/opt/local/lib/hamlib\n)"}, {"filenames": ["libhamlib.a"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/Findhamlib.cmake", "content": "find_library(hamlib_static_library\n\tnames libhamlib.a\n\tpaths\n\t\t/usr/lib64/hamlib\n\t\t/usr/lib/hamlib\n\t\t/usr/lib64\n\t\t/usr/lib\n\t\t/usr/local/lib64/hamlib\n\t\t/usr/local/lib/hamlib\n\t\t/usr/local/lib64\n\t\t/usr/local/lib\n\t\t/opt/local/lib\n\t\t/opt/local/lib/hamlib\n)"}]}, {"deps": [{"depname": "rtaudio", "version": null, "version_op": null, "unified_name": "rtaudio", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindRtAudio.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "rtaudio", "version": null, "version_op": null, "unified_name": "rtaudio", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_rtaudio rtaudio)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rtaudio"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindRtAudio.cmake", "content": "find_library(\n  rtaudio_libraries names rtaudio\n  hints ${pc_rtaudio_libdir} ${pc_rtaudio_library_dirs}\n)"}]}, {"deps": [{"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindJack.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_jack jack)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jack"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindJack.cmake", "content": "find_library(jack_library\n    names\n      jack\n    paths\n      ${_jack_libdir}\n  )"}]}, {"deps": [{"depname": "liquid", "version": null, "version_op": null, "unified_name": "liquid", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindLiquid.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["liquid"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/CubicSDR/cmake/Modules/FindLiquid.cmake", "content": "find_library (liquid_libraries names liquid)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "btle_all", "version": null, "version_op": null, "unified_name": "btle_all", "extractor_type": "cmake", "context": "project (btle_all)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libbladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindLIBBLADERF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bladerf"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindLIBBLADERF.cmake", "content": "find_library(libbladerf_library\n  names bladerf\n  paths ${libbladerf_dir}/libs\n  \"${libbladerf_dir}\\\\win32\\\\lib\"\n  /usr/pkgs64/lib\n  /usr/lib64\n  /usr/lib\n  /usr/local/lib\n  /usr/lib/x86_64-linux-gnu\n  no_default_path\n)"}]}, {"deps": [{"depname": "usb1", "version": null, "version_op": null, "unified_name": "usb1", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindUSB1.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libusb libusb-1.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["usb-1.0"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindUSB1.cmake", "content": "find_library(libusb_libraries names usb-1.0\n    paths ${pc_libusb_libdir} ${pc_libusb_library_dirs})"}]}, {"deps": [{"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindLIBHACKRF.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libhackrf quiet libhackrf)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hackrf"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindLIBHACKRF.cmake", "content": "find_library(libhackrf_libraries\n    names hackrf\n    hints $env{libhackrf_dir}/lib ${pc_libhackrf_libdir}\n    paths /usr/local/lib /usr/lib /opt/local/lib ${pc_libhackrf_libdir} ${pc_libhackrf_library_dirs} ${cmake_source_dir}/../libhackrf/src\n  )"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindThreads.cmake", "confidence": "High"}, {"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "check_library_exists(pthreads pthread_create \"\" cmake_have_pthreads_create)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_create \"\" cmake_have_pthread_create)", "confidence": "High"}, {"depname": "thread", "version": null, "version_op": null, "unified_name": "thread", "extractor_type": "cmake", "context": "check_library_exists(thread thr_create \"\" cmake_have_thr_create)", "confidence": "High"}, {"depname": "cma", "version": null, "version_op": null, "unified_name": "cma", "extractor_type": "cmake", "context": "check_library_exists(cma pthread_attr_create \"\" cmake_have_hp_cma)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthreadgc2"], "version": "", "fromfile": "RocketGod-git@@HackRF-Treasure-Chest/Software/BTLE/host/cmake/modules/FindThreads.cmake", "content": "find_library(threads_pthreads_win32_library\n               names pthreadgc2\n               paths \n               doc \"the portable threads library for win32\"\n               no_system_path\n               )"}]}, {"deps": [{"depname": "libbladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake", "context": "find_package(libbladerf required)", "confidence": "High"}, {"depname": "libhackrf", "version": null, "version_op": null, "unified_name": "hackrf", "extractor_type": "cmake", "context": "find_package(libhackrf required)", "confidence": "High"}, {"depname": "btle", "version": null, "version_op": null, "unified_name": "btle", "extractor_type": "cmake", "context": "project(btle-tools c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}