{"target": "SteveMacenski@@slam_toolbox", "extractors": [{"deps": [{"depname": "ament_cmake", "version": null, "version_op": null, "unified_name": "ament_cmake", "extractor_type": "cmake", "context": "find_package(ament_cmake required)", "confidence": "High"}, {"depname": "message_filters", "version": null, "version_op": null, "unified_name": "message_filters", "extractor_type": "cmake", "context": "find_package(message_filters required)", "confidence": "High"}, {"depname": "nav_msgs", "version": null, "version_op": null, "unified_name": "nav_msgs", "extractor_type": "cmake", "context": "find_package(nav_msgs required)", "confidence": "High"}, {"depname": "rclcpp", "version": null, "version_op": null, "unified_name": "rclcpp", "extractor_type": "cmake", "context": "find_package(rclcpp required)", "confidence": "High"}, {"depname": "sensor_msgs", "version": null, "version_op": null, "unified_name": "sensor_msgs", "extractor_type": "cmake", "context": "find_package(sensor_msgs required)", "confidence": "High"}, {"depname": "tf2", "version": null, "version_op": null, "unified_name": "tf2", "extractor_type": "cmake", "context": "find_package(tf2 required)", "confidence": "High"}, {"depname": "tf2_ros", "version": null, "version_op": null, "unified_name": "tf2_ros", "extractor_type": "cmake", "context": "find_package(tf2_ros required)", "confidence": "High"}, {"depname": "visualization_msgs", "version": null, "version_op": null, "unified_name": "visualization_msgs", "extractor_type": "cmake", "context": "find_package(visualization_msgs required)", "confidence": "High"}, {"depname": "pluginlib", "version": null, "version_op": null, "unified_name": "pluginlib", "extractor_type": "cmake", "context": "find_package(pluginlib required)", "confidence": "High"}, {"depname": "tf2_geometry_msgs", "version": null, "version_op": null, "unified_name": "tf2_geometry_msgs", "extractor_type": "cmake", "context": "find_package(tf2_geometry_msgs required)", "confidence": "High"}, {"depname": "tf2_sensor_msgs", "version": null, "version_op": null, "unified_name": "tf2_sensor_msgs", "extractor_type": "cmake", "context": "find_package(tf2_sensor_msgs required)", "confidence": "High"}, {"depname": "std_msgs", "version": null, "version_op": null, "unified_name": "std_msgs", "extractor_type": "cmake", "context": "find_package(std_msgs required)", "confidence": "High"}, {"depname": "std_srvs", "version": null, "version_op": null, "unified_name": "std_srvs", "extractor_type": "cmake", "context": "find_package(std_srvs required)", "confidence": "High"}, {"depname": "builtin_interfaces", "version": null, "version_op": null, "unified_name": "builtin_interfaces", "extractor_type": "cmake", "context": "find_package(builtin_interfaces required)", "confidence": "High"}, {"depname": "rosidl_default_generators", "version": null, "version_op": null, "unified_name": "rosidl_default_generators", "extractor_type": "cmake", "context": "find_package(rosidl_default_generators required)", "confidence": "High"}, {"depname": "rviz_common", "version": null, "version_op": null, "unified_name": "rviz_common", "extractor_type": "cmake", "context": "find_package(rviz_common required)", "confidence": "High"}, {"depname": "rviz_default_plugins", "version": null, "version_op": null, "unified_name": "rviz_default_plugins", "extractor_type": "cmake", "context": "find_package(rviz_default_plugins required)", "confidence": "High"}, {"depname": "rviz_ogre_vendor", "version": null, "version_op": null, "unified_name": "rviz_ogre_vendor", "extractor_type": "cmake", "context": "find_package(rviz_ogre_vendor required)", "confidence": "High"}, {"depname": "rviz_rendering", "version": null, "version_op": null, "unified_name": "rviz_rendering", "extractor_type": "cmake", "context": "find_package(rviz_rendering required)", "confidence": "High"}, {"depname": "interactive_markers", "version": null, "version_op": null, "unified_name": "interactive_markers", "extractor_type": "cmake", "context": "find_package(interactive_markers required)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 required components core gui widgets test concurrent)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "find_package(cholmod required)", "confidence": "High"}, {"depname": "csparse", "version": null, "version_op": null, "unified_name": "csparse", "extractor_type": "cmake", "context": "find_package(csparse required)", "confidence": "High"}, {"depname": "g2o", "version": null, "version_op": null, "unified_name": "g2o", "extractor_type": "cmake", "context": "find_package(g2o required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}, {"depname": "ceres", "version": null, "version_op": null, "unified_name": "ceres", "extractor_type": "cmake", "context": "find_package(ceres required components suitesparse)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required system serialization filesystem thread)", "confidence": "High"}, {"depname": "slam_toolbox", "version": null, "version_op": null, "unified_name": "slam_toolbox", "extractor_type": "cmake", "context": "project(slam_toolbox)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cholmod"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(cholmod_library cholmod paths $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["amd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(amd_library amd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["colamd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(colamd_library colamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["camd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(camd_library camd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["ccolamd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(ccolamd_library ccolamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["metis"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(cholmod_metis_library metis paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["suitesparseconfig"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCHOLMOD.cmake", "content": "find_library(suitesparseconfig_library names suitesparseconfig\n    paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}]}, {"deps": [{"depname": "csparse", "version": null, "version_op": null, "unified_name": "csparse", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindCSparse.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cxsparse"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindCSparse.cmake", "content": "find_library(csparse_library names cxsparse\n  paths\n  /usr/lib\n  /usr/local/lib\n  /opt/local/lib\n  /sw/lib\n)"}]}, {"deps": [{"depname": "gtsam", "version": null, "version_op": null, "unified_name": "gtsam", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindGTSAM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gtsam"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindGTSAM.cmake", "content": "find_library(gtsam_libs names gtsam\n    hints \"${gtsam_root}/lib\" \"${gtsam_root}\" no_default_path\n    path_suffixes ${gtsam_build_names}\n    doc \"gtsam libraries\")"}, {"filenames": ["gtsam"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindGTSAM.cmake", "content": "find_library(gtsam_libs names gtsam\n    hints ${cmake_install_prefix}/lib \"$env{home}/lib\" \"${project_source_dir}/../gtsam\" /usr/local/lib /usr/lib\n    path_suffixes ${gtsam_build_names}\n    doc \"gtsam libraries\")"}]}, {"deps": [{"depname": "g2o", "version": null, "version_op": null, "unified_name": "g2o", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindG2O.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"g2o_${mylibraryname}_d\""], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindG2O.cmake", "content": "find_library(\"${mylibrary}_debug\"\n    names \"g2o_${mylibraryname}_d\"\n    paths\n    ${g2o_root}/lib/debug\n    ${g2o_root}/lib\n    $env{g2o_root}/lib/debug\n    $env{g2o_root}/lib\n    no_default_path\n    )"}, {"filenames": ["\"g2o_${mylibraryname}_d\""], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindG2O.cmake", "content": "find_library(\"${mylibrary}_debug\"\n    names \"g2o_${mylibraryname}_d\"\n    paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /opt/local/lib\n    /sw/local/lib\n    /sw/lib\n    /opt/ros/indigo/lib\n    /opt/ros/jade/lib\n    /opt/ros/kinetic/lib\n    )"}, {"filenames": ["\"g2o_${mylibraryname}\""], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindG2O.cmake", "content": "find_library(${mylibrary}\n    names \"g2o_${mylibraryname}\"\n    paths\n    ${g2o_root}/lib/release\n    ${g2o_root}/lib\n    $env{g2o_root}/lib/release\n    $env{g2o_root}/lib\n    no_default_path\n    )"}, {"filenames": ["\"g2o_${mylibraryname}\""], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindG2O.cmake", "content": "find_library(${mylibrary}\n    names \"g2o_${mylibraryname}\"\n    paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /opt/local/lib\n    /sw/local/lib\n    /sw/lib\n    /opt/ros/indigo/lib\n    /opt/ros/jade/lib\n    /opt/ros/kinetic/lib\n    )"}]}, {"deps": [{"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(lapack lapack)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cholmod"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(cholmod_library names cholmod\n     paths\n     ${suite_sparse_root}/lib\n     /usr/lib\n     /usr/local/lib\n     /opt/local/lib\n     /sw/lib\n   )"}, {"filenames": ["shared", "names", "amd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(amd_library names shared names amd\n  paths\n  ${suite_sparse_root}/lib\n  /usr/lib\n  /usr/local/lib\n  /opt/local/lib\n  /sw/lib\n  )"}, {"filenames": ["camd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(camd_library names camd\n  paths\n  ${suite_sparse_root}/lib\n  /usr/lib\n  /usr/local/lib\n  /opt/local/lib\n  /sw/lib\n  )"}, {"filenames": ["suitesparseconfig"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(suitesparseconfig_library names suitesparseconfig\n  paths\n  ${suite_sparse_root}/lib\n  /usr/lib\n  /usr/local/lib\n  /opt/local/lib\n  /sw/lib\n  )"}, {"filenames": ["colamd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(colamd_library names colamd\n    paths\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    /sw/lib\n    )"}, {"filenames": ["colamd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(colamd_library names colamd\n    paths\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    /sw/lib\n    )"}, {"filenames": ["ccolamd"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(ccolamd_library names ccolamd\n    paths\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    /sw/lib\n    )"}, {"filenames": ["metis"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(metis_library names metis\n    paths\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    /sw/lib\n    )"}, {"filenames": ["cxsparse"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindSuiteSparse.cmake", "content": "find_library(csparse_library names cxsparse\n  paths\n  /usr/lib\n  /usr/local/lib\n  /opt/local/lib\n  /sw/lib\n  )"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(${lib}_path ${lib} paths ${mkl_lib_searchpath} env library_path)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_core_library\n          mkl_core\n          paths\n                ${mkl_root_dir}/lib/ia32\n                ${mkl_root_dir}/lib/\n        )"}, {"filenames": ["mkl_sequential"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_sequential_library\n          mkl_sequential\n          paths\n                ${mkl_root_dir}/lib/ia32\n                ${mkl_root_dir}/lib/\n        )"}, {"filenames": ["mkl_intel_thread"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_intelthread_library\n          mkl_intel_thread\n          paths\n                ${mkl_root_dir}/lib/ia32\n                ${mkl_root_dir}/lib/\n        )"}, {"filenames": ["mkl_gnu_thread"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_gnuthread_library\n              mkl_gnu_thread\n              paths\n                    ${mkl_root_dir}/lib/ia32\n                    ${mkl_root_dir}/lib/\n            )"}, {"filenames": ["mkl_intel"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_lp_library\n                  mkl_intel\n                  paths\n                        ${mkl_root_dir}/lib/ia32\n                        ${mkl_root_dir}/lib/\n                )"}, {"filenames": ["mkl_intel"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_ilp_library\n                  mkl_intel\n                  paths\n                        ${mkl_root_dir}/lib/ia32\n                        ${mkl_root_dir}/lib/\n                )"}, {"filenames": ["mkl_intel_lp64"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_lp_library\n                  mkl_intel_lp64\n                  paths\n                        ${mkl_root_dir}/lib/ia32\n                        ${mkl_root_dir}/lib/\n                )"}, {"filenames": ["mkl_intel_ilp64"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_ilp_library\n                  mkl_intel_ilp64\n                  paths\n                        ${mkl_root_dir}/lib/ia32\n                        ${mkl_root_dir}/lib/\n                )"}, {"filenames": ["mkl_lapack"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_lapack_library\n          mkl_lapack\n          paths\n                ${mkl_root_dir}/lib/ia32\n                ${mkl_root_dir}/lib/\n        )"}, {"filenames": ["mkl_lapack95_lp64"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_lapack_library\n                  mkl_lapack95_lp64\n                  paths\n                        ${mkl_root_dir}/lib/ia32\n                        ${mkl_root_dir}/lib/\n                )"}, {"filenames": ["iomp5"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_iomp5_library\n                          iomp5\n                          paths\n                                ${mkl_root_dir}/../lib/ia32\n                        )"}, {"filenames": ["iomp5"], "version": "", "fromfile": "SteveMacenski@@slam_toolbox/CMake/FindMKL.cmake", "content": "find_library(mkl_iomp5_library\n                          iomp5\n                          paths\n                                ${mkl_root_dir}/../lib/intel64\n                        )"}]}, {"deps": [{"depname": "ament_cmake", "version": null, "version_op": null, "unified_name": "ament_cmake", "extractor_type": "cmake", "context": "find_package(ament_cmake required)", "confidence": "High"}, {"depname": "rclcpp", "version": null, "version_op": null, "unified_name": "rclcpp", "extractor_type": "cmake", "context": "find_package(rclcpp required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required system serialization filesystem thread)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required no_cmake_package_registry)", "confidence": "High"}, {"depname": "karto_sdk", "version": null, "version_op": null, "unified_name": "karto_sdk", "extractor_type": "cmake", "context": "project(karto_sdk)", "confidence": ""}], "type": "cmake", "libs": []}]}