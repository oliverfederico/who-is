{"target": "facebookresearch@@loop_tool", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "find_package(cudatoolkit)", "confidence": "High"}, {"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config)", "confidence": "High"}, {"depname": "loop_tool", "version": null, "version_op": null, "unified_name": "loop_tool", "extractor_type": "cmake", "context": "project(loop_tool)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package(packagehandlestandardargs)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "    set(cudatoolkit_version \"${cmake_cuda_compiler_version}\")", "confidence": "Low"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "    set(cudatoolkit_version  \"${cmake_match_1}.${cmake_match_2}.${cmake_match_3}\")", "confidence": "Low"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "      set(cudatoolkit_version  \"${cmake_match_1}.${cmake_match_2}.${cmake_match_3}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["cudart"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cuda_cudart\n  names cudart\n  path_suffixes lib64 lib/x64\n)"}, {"filenames": ["cudart"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cuda_cudart\n  names cudart\n  path_suffixes lib64/stubs lib/x64/stubs\n)"}, {"filenames": ["${search_names}"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cuda_${lib_name}_library\n      names ${search_names}\n      hints ${cudatoolkit_library_dir}\n            env cuda_path\n      path_suffixes nvidia/current lib64 lib/x64 lib\n                    ${arg_extra_path_suffixes}\n    )"}, {"filenames": ["${search_names}"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cuda_${lib_name}_library\n      names ${search_names}\n      hints ${cudatoolkit_library_dir}\n            env cuda_path\n      path_suffixes lib64/stubs lib/x64/stubs lib/stubs stubs\n    )"}, {"filenames": ["rt"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cudatoolkit_rt_library rt)"}, {"filenames": ["nvtoolsext64_1", "nvtoolsext64", "nvtoolsext"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_library(cuda_nvtoolsext_library\n      names nvtoolsext64_1 nvtoolsext64 nvtoolsext\n      paths env nvtoolsext_path\n            env cuda_path\n      path_suffixes lib/x64 lib\n    )"}, {"filenames": ["nvcc", "nvcc.exe"], "version": "", "fromfile": "facebookresearch@@loop_tool/src/backends/cuda/FindCUDAToolkit.cmake", "content": "find_program(cudatoolkit_nvcc_executable\n          names nvcc nvcc.exe\n          paths ${arg_search_paths}\n          ${arg_find_flags}\n        )"}]}]}