{"target": "stitchEm@@stitchEm", "extractors": [{"deps": [{"depname": "videostitch", "version": null, "version_op": null, "unified_name": "videostitch", "extractor_type": "cmake", "context": "project(videostitch)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["${name_debug}"], "version": "", "fromfile": "stitchEm@@stitchEm/CMakeLists.txt", "content": "find_library(${library_name}_debug names ${name_debug} paths \"${cmake_external_lib}/${library_path_debug}\" no_default_path)"}, {"filenames": ["${name_optimized}"], "version": "", "fromfile": "stitchEm@@stitchEm/CMakeLists.txt", "content": "find_library(${library_name}_optimized names ${name_optimized} paths \"${cmake_external_lib}/${library_path_optimized}\" no_default_path)"}, {"filenames": ["\"delayimp.lib\""], "version": "", "fromfile": "stitchEm@@stitchEm/CMakeLists.txt", "content": "find_library(delay_load_lib names \"delayimp.lib\")"}, {"filenames": ["ccache"], "version": "", "fromfile": "stitchEm@@stitchEm/CMakeLists.txt", "content": "find_program(ccache_found ccache)"}]}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${gnu_machine}hf-gcc-${gcc_compiler_version}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm.toolchain.cmake", "content": "find_program(cmake_c_compiler names ${gnu_machine}hf-gcc-${gcc_compiler_version})"}, {"filenames": ["${gnu_machine}hf-g++-${gcc_compiler_version}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm.toolchain.cmake", "content": "find_program(cmake_cxx_compiler names ${gnu_machine}hf-g++-${gcc_compiler_version})"}, {"filenames": ["${gnu_machine}hf-ld-${gcc_compiler_version}", "${gnu_machine}hf-ld"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm.toolchain.cmake", "content": "find_program(cmake_linker names ${gnu_machine}hf-ld-${gcc_compiler_version} ${gnu_machine}hf-ld)"}, {"filenames": ["${gnu_machine}hf-ar-${gcc_compiler_version}", "${gnu_machine}hf-ar"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm.toolchain.cmake", "content": "find_program(cmake_ar names ${gnu_machine}hf-ar-${gcc_compiler_version} ${gnu_machine}hf-ar)"}]}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/Findcppcheck.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cppcheck", "cli"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable\n        names\n        cppcheck\n        cli\n        paths\n        \"${cppcheck_root_dir}\"\n        path_suffixes\n        cli\n        no_default_path)"}, {"filenames": ["cppcheck"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable names cppcheck)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"glew32\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(glew \"glew32\" path \"${vcpkg_path}\\\\${vcpkg_target_triplet}-static\\\\lib\" no_default_path)"}, {"filenames": ["cuda"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cuda cuda paths \"${cuda_toolkit_root_dir}/lib/x64\" no_default_path)"}, {"filenames": ["cudart"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cudart cudart paths \"${cuda_toolkit_root_dir}/lib/x64\" no_default_path)"}, {"filenames": ["nvcuvid"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cuvid nvcuvid paths \"${nvidia_video_codec}\\\\lib\\\\x64\")"}, {"filenames": ["nvml"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(nvml nvml paths \"${cuda_toolkit_root_dir}/lib/x64\" no_default_path)"}, {"filenames": ["glew"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(glew_libraries glew no_cmake_find_root_path)"}, {"filenames": ["gl"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(opengl_libraries gl no_cmake_find_root_path)"}, {"filenames": ["cuda"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cuda cuda paths \"${linux_cuda_path}/stubs\")"}, {"filenames": ["cudart"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cudart cudart paths ${linux_cuda_path})"}, {"filenames": ["nvidia-ml"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(nvml nvidia-ml paths \"${linux_cuda_path}/stubs\")"}, {"filenames": ["nvcuvid"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cuvid nvcuvid)"}, {"filenames": ["cuda"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cuda cuda paths ${mac_cuda_path} no_default_path)"}, {"filenames": ["cudart"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(cudart cudart paths ${mac_cuda_path} no_default_path)"}, {"filenames": ["nvtoolsext"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/CUDA.cmake", "content": "find_library(nvtx nvtoolsext paths ${linux_cuda_path} no_default_path)"}]}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package( ${argn} )", "confidence": "High"}, {"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["arm-linux-gnueabihf-gcc-${gcc_compiler_version}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm-linux-gnueabihf.cmake", "content": "find_program(cmake_c_compiler names arm-linux-gnueabihf-gcc-${gcc_compiler_version})"}, {"filenames": ["arm-linux-gnueabihf-g++-${gcc_compiler_version}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/arm-linux-gnueabihf.cmake", "content": "find_program(cmake_cxx_compiler names arm-linux-gnueabihf-g++-${gcc_compiler_version})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"ceres\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(ceres_optimized_library names \"ceres\" paths ${cmake_external_deps}/lib no_default_path no_cmake_find_root_path)"}, {"filenames": ["z"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(zlib_library z)"}, {"filenames": ["log"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(log_library log)"}, {"filenames": ["glesv2"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(gles_libraries glesv2)"}, {"filenames": ["egl"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(egl_libraries egl)"}, {"filenames": ["glew"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(glew_libraries_ names glew paths ${cmake_external_deps}/lib no_default_path no_cmake_find_root_path)"}, {"filenames": ["\"opencl\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.cmake", "content": "find_library(opencl_libraries names \"opencl\" paths ${target_productlib} no_default_path no_cmake_find_root_path)"}]}, {"deps": [{"depname": "iwyu", "version": null, "version_op": null, "unified_name": "iwyu", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindIWYU.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["include-what-you-use", "iwyu"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/FindIWYU.cmake", "content": "find_program(iwyu names include-what-you-use iwyu)"}]}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package( ${argn} )", "confidence": "High"}, {"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set( cmake_system_version 1 )", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["\"${_ndk_ccache}\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.toolchain.cmake", "content": "find_program( ndk_ccache \"${_ndk_ccache}\" doc \"the path to ccache binary\")"}, {"filenames": ["install_name_tool"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/android.toolchain.cmake", "content": "find_program( cmake_install_name_tool names install_name_tool )"}]}, {"deps": [{"depname": "tsan", "version": null, "version_op": null, "unified_name": "tsan", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindTSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "lsan", "version": null, "version_op": null, "unified_name": "lsan", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindLSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png required)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["corefoundation"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/external_deps.cmake", "content": "find_library(core_foundation corefoundation required)"}, {"filenames": ["png"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/external_deps.cmake", "content": "find_library(png_library png)"}, {"filenames": ["png"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/external_deps.cmake", "content": "find_library(png_library png paths ${cmake_external_lib} no_default_path no_cmake_find_root_path)"}]}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "asan", "version": null, "version_op": null, "unified_name": "asan", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindASan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ubsan", "version": null, "version_op": null, "unified_name": "ubsan", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindUBSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "find_package(cppcheck quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda exact \"${cuda_version}\")", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"cudart\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/getCuda.cmake", "content": "find_library(cuda_libraries names \"cudart\" paths ${cuda_toolkit_target_dir}/lib no_default_path)"}, {"filenames": ["cuda"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/getCuda.cmake", "content": "find_library(cuda cuda paths ${cuda_toolkit_target_dir}/lib/stubs no_default_path no_cmake_find_root_path)"}, {"filenames": ["\"cudart\""], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/getCuda.cmake", "content": "find_library(cuda_libraries names \"cudart\" paths ${cuda_toolkit_target_dir}/lib no_default_path no_cmake_find_root_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "stitchEm@@stitchEm/cmake/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libhalf.so"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/FindOpenEXR.cmake", "content": "find_library(openexr_library_dir libhalf.so)"}, {"filenames": ["${openexr_lib}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/FindOpenEXR.cmake", "content": "find_library(openexr_${openexr_lib}_library ${openexr_lib})"}, {"filenames": ["${openexr_lib}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/FindOpenEXR.cmake", "content": "find_library(openexr_${openexr_lib}_library ${openexr_lib} no_default_path hints \"${cmake_external_deps}\" path_suffixes lib/ no_default_path no_cmake_find_root_path)"}, {"filenames": ["${openexr_lib}"], "version": "", "fromfile": "stitchEm@@stitchEm/cmake/FindOpenEXR.cmake", "content": "find_library(openexr_${openexr_lib}_library ${openexr_lib} no_default_path hints ${openexr_root_dir} path_suffixes lib/)"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "r8b", "version": null, "version_op": null, "unified_name": "r8b", "extractor_type": "cmake", "context": "project(r8b)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "lib_gpudiscovery", "version": null, "version_op": null, "unified_name": "_gpudiscovery", "extractor_type": "cmake", "context": "project(lib_gpudiscovery)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["corefoundation"], "version": "", "fromfile": "stitchEm@@stitchEm/discovery/CMakeLists.txt", "content": "find_library(core_foundation corefoundation required)"}]}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl required)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"glew32\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/libvideostitch_OpenCL.cmake", "content": "find_library(glew \"glew32\" path \"${vcpkg_path}\\\\${vcpkg_target_triplet}-static\\\\lib\" no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["glog"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/linux.cmake", "content": "find_library(glog glog paths ${cmake_external_lib} no_default_path no_cmake_find_root_path)"}, {"filenames": ["\"ceres\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/linux.cmake", "content": "find_library(ceres_optimized_library names \"ceres\" paths ${cmake_external_lib} no_default_path no_cmake_find_root_path)"}, {"filenames": ["\"ceres\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/linux.cmake", "content": "find_library(ceres_optimized_library names \"ceres\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"ceres\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/windows.cmake", "content": "find_library(ceres_libs \"ceres\")"}, {"filenames": ["\"glog\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/windows.cmake", "content": "find_library(glog names \"glog\")"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package( ${argn} )", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr required)", "confidence": "High"}, {"depname": "videostitch_lib", "version": null, "version_op": null, "unified_name": "videostitch_lib", "extractor_type": "cmake", "context": "project(videostitch_lib)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["\"drm\""], "version": "", "fromfile": "stitchEm@@stitchEm/lib/CMakeLists.txt", "content": "find_library(drm names \"drm\")"}]}, {"deps": [{"depname": "ceres", "version": null, "version_op": null, "unified_name": "ceres", "extractor_type": "cmake", "context": "find_package(ceres required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["iokit"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/apple.cmake", "content": "find_library(io_kit iokit required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["openclc"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler openclc\n               paths ${opencl_libraries}/libraries/\n                     /system/library/frameworks/opencl.framework/libraries\n               doc \"opencl offline compiler to build spir files from kernel sources\")"}, {"filenames": ["openclc"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler_alternative openclc\n                        paths /system/library/privateframeworks/gpucompiler.framework/libraries\n                              /system/library/privateframeworks/gpucompiler.framework/versions/a/libraries\n                        doc \"alternative opencl offline compiler\")"}, {"filenames": ["clang"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler clang\n               doc \"opencl offline compiler to build spir files from kernel sources\")"}, {"filenames": ["${android_clang_toolchain_root}/bin/clang"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler ${android_clang_toolchain_root}/bin/clang\n               doc \"opencl offline compiler to build spir files from kernel sources\")"}, {"filenames": ["ioc64"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler ioc64\n                   doc \"intel opencl offline compiler to build spir files from kernel sources\")"}, {"filenames": ["${cmake_source_dir}/bin/clang.exe"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(opencl_offline_compiler_alternative ${cmake_source_dir}/bin/clang.exe\n                  doc \"opencl offline compiler to build spir files from kernel sources\")"}, {"filenames": ["cl"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/src/backend/cl/CMakeLists.txt", "content": "find_program(configure_time_compiler cl doc \"compiler to preprocess opencl files at configure time to resolve includes. use default cl.exe. did you run vcvarsall.bat?\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glfw"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/bindings/CMakeLists.txt", "content": "find_library(glfw glfw hints \"/opt/local/lib\" required no_default_path)"}, {"filenames": ["glfw"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/bindings/CMakeLists.txt", "content": "find_library(glfw glfw required)"}, {"filenames": ["glfw"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/bindings/CMakeLists.txt", "content": "find_library(glfw glfw hints \"${cmake_external_lib}\" required no_default_path)"}]}, {"deps": [], "type": "control"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["glfw"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/samples/sample-02-fullCmd/CMakeLists.txt", "content": "find_library(glfw glfw required)"}, {"filenames": ["glfw"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/samples/sample-02-fullCmd/CMakeLists.txt", "content": "find_library(glfw glfw hints \"${cmake_external_lib}/glfw\" required)"}, {"filenames": ["glfw3dll"], "version": "", "fromfile": "stitchEm@@stitchEm/lib/samples/sample-02-fullCmd/CMakeLists.txt", "content": "find_library(glfw glfw3dll required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 ${qt_mini_version} components core concurrent gui multimedia network opengl widgets linguisttools test required)", "confidence": "High"}, {"depname": "videostitch", "version": null, "version_op": null, "unified_name": "videostitch", "extractor_type": "cmake", "context": "project(videostitch-apps)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["\"libovr\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/CMakeLists.txt", "content": "find_library(ovr names \"libovr\" hints \"${oculus_path}\\\\lib\\\\windows\\\\x64\\\\release\\\\vs2015\")"}, {"filenames": ["\"openvr_api\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/CMakeLists.txt", "content": "find_library(openvr names \"openvr_api\")"}]}, {"deps": [{"depname": "studio", "version": null, "version_op": null, "unified_name": "studio", "extractor_type": "cmake", "context": "\nset(studio_version \"${studio_version_from_git}-${git_branch}.${tag_timestamp}\")", "confidence": "Low"}, {"depname": "vahana", "version": null, "version_op": null, "unified_name": "vahana", "extractor_type": "cmake", "context": "set(vahana_version \"${vahanavr_version_from_git}-${git_branch}.${tag_timestamp}\")", "confidence": "Low"}, {"depname": "player", "version": null, "version_op": null, "unified_name": "player", "extractor_type": "cmake", "context": "set(player_version \"${player_version_from_git}-${git_branch}.${tag_timestamp}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"libcurl\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(curl names \"libcurl\" paths \"${cmake_external_lib}/curl\")"}, {"filenames": ["\"jsoncpp\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(json_cpp names \"jsoncpp\" paths ${cmake_external_lib})"}, {"filenames": ["\"google_youtube_api\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggyoutube names \"google_youtube_api\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_jsoncpp\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggjson_cpp names \"googleapis_jsoncpp\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_utils\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggutils names \"googleapis_utils\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_internal\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(gginternal names \"googleapis_internal\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_http\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(gghttp names \"googleapis_http\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_oauth2\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggoauth names \"googleapis_oauth2\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_curl_http\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggcurlhttp names \"googleapis_curl_http\" paths ${cmake_external_lib})"}, {"filenames": ["\"googleapis_openssl_codec\""], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/videostitch-live-gui/CMakeLists.txt", "content": "find_library(ggssl names \"googleapis_openssl_codec\" paths ${cmake_external_lib})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "stitch360", "version": null, "version_op": null, "unified_name": "stitch360", "extractor_type": "cmake", "context": "project(stitch360)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["nvgameworks"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(nvgameworks names nvgameworks paths \"${vs_root_dir}/external_deps/lib64\" no_default_path no_cmake_find_root_path)"}, {"filenames": ["videostitch_opencl"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(vs_lib_opencl names videostitch_opencl paths \"${vs_root_dir}/bin/x64/release\" no_default_path no_cmake_find_root_path)"}, {"filenames": ["videostitch-gpudiscovery"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(vs_discovery names videostitch-gpudiscovery paths \"${vs_root_dir}/bin/x64/release\" no_default_path no_cmake_find_root_path)"}, {"filenames": ["log"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(log-lib log)"}, {"filenames": ["android"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(android-lib android)"}, {"filenames": ["egl"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(egl-lib egl)"}, {"filenames": ["glesv2"], "version": "", "fromfile": "stitchEm@@stitchEm/apps/src/AndroidDemo/CMakeLists.txt", "content": "find_library(glesv2-lib glesv2)"}]}, {"deps": [{"depname": "qt5test", "version": null, "version_op": null, "unified_name": "qt5test", "extractor_type": "cmake", "context": "find_package(qt5test required hints ${qt_dir})", "confidence": "High"}, {"depname": "appstest", "version": null, "version_op": null, "unified_name": "appstest", "extractor_type": "cmake", "context": "project(appstest)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "io", "version": null, "version_op": null, "unified_name": "io", "extractor_type": "cmake", "context": "project(io)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["libmfx_vs2015"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/CMakeLists.txt", "content": "find_library(libmfxhw64 libmfx_vs2015 hints \"${intel_media_sdk_path}\\\\lib\\\\x64\" required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"libxistream2\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/magewell/CMakeLists.txt", "content": "find_library(magewell_stream2 \"libxistream2\" hints \"${magewell_path}\\\\sdkv2\\\\lib\\\\x64\\\\release\")"}, {"filenames": ["\"libxiproperty\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/magewell/CMakeLists.txt", "content": "find_library(magewell_property \"libxiproperty\" hints \"${magewell_path}\\\\sdkv2\\\\lib\\\\x64\\\\release\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["avcodec"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avcodec avcodec required)"}, {"filenames": ["avformat"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avformat avformat required)"}, {"filenames": ["avutil"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avutil avutil required)"}, {"filenames": ["avcodec"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avcodec avcodec paths ${cmake_external_deps}/lib required no_default_path no_cmake_find_root_path)"}, {"filenames": ["avformat"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avformat avformat paths ${cmake_external_deps}/lib required no_default_path no_cmake_find_root_path)"}, {"filenames": ["avutil"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avutil avutil paths ${cmake_external_deps}/lib required no_default_path no_cmake_find_root_path)"}, {"filenames": ["avcodec"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avcodec names avcodec required)"}, {"filenames": ["avformat"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avformat names avformat required)"}, {"filenames": ["avutil"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avutil names avutil required)"}, {"filenames": ["avcodec"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avcodec names avcodec)"}, {"filenames": ["avformat"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avformat names avformat)"}, {"filenames": ["avutil"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avutil names avutil)"}, {"filenames": ["avcodec"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avcodec names avcodec)"}, {"filenames": ["avformat"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avformat names avformat)"}, {"filenames": ["avutil"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/common/format/CMakeLists.txt", "content": "find_library(ffmpeg_avutil names avutil)"}]}, {"deps": [{"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"jpeg\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/jpg/CMakeLists.txt", "content": "find_library(jpeg names \"jpeg\")"}, {"filenames": ["jpeg"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/jpg/CMakeLists.txt", "content": "find_library(jpeg names jpeg paths /opt/local/lib)"}, {"filenames": ["jpeg"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/jpg/CMakeLists.txt", "content": "find_library(jpeg names jpeg paths /usr/local/lib)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"xiapi64\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/ximea_2/CMakeLists.txt", "content": "find_library(ximea_lib names \"xiapi64\" hints \"${ximea_path}\\\\x64\" required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"portaudio\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/portaudio/CMakeLists.txt", "content": "find_library(portaudio names \"portaudio\" required)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "mp3lame", "version": null, "version_op": null, "unified_name": "mp3lame", "extractor_type": "cmake", "context": "find_package(mp3lame config required)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["v4l2"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libv4l2 v4l2 hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["libx264"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libx264 libx264 required)"}, {"filenames": ["librtmp"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(librtmp librtmp required)"}, {"filenames": ["x264"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libx264 x264 required)"}, {"filenames": ["rtmp"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(librtmp rtmp required)"}, {"filenames": ["rtmp"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(librtmp rtmp hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["x264"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libx264 x264 hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["mp3lame"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libmp3lame mp3lame hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["faac"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libfaac faac hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["faad"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libvfaad faad hints ${cmake_external_lib} required no_default_path no_cmake_find_root_path)"}, {"filenames": ["mp3lame"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libmp3lame mp3lame)"}, {"filenames": ["faac"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libfaac faac)"}, {"filenames": ["faad"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libvfaad faad)"}, {"filenames": ["igfx_s3dcontrol"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(igfx_s3dcontrol igfx_s3dcontrol path \"${intel_media_sdk_path}\\\\igfx_s3dcontrol\\\\lib\\\\x64\" required)"}, {"filenames": ["va"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libva va hints ${cmake_external_lib} required no_system_environment_path)"}, {"filenames": ["va-drm"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libva_drm va-drm hints ${cmake_external_lib} required no_system_environment_path)"}, {"filenames": ["rtmp"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(librtmp rtmp required)"}, {"filenames": ["x264"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libx264 x264 required)"}, {"filenames": ["faac"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libfaac faac required)"}, {"filenames": ["faad.2"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libfaad faad.2 required)"}, {"filenames": ["mp3lame"], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/rtmp/CMakeLists.txt", "content": "find_library(libmp3lame mp3lame required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"tiff\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/tiff/CMakeLists.txt", "content": "find_library(tiff names \"tiff\")"}, {"filenames": ["\"tiff\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/tiff/CMakeLists.txt", "content": "find_library(tiff names \"tiff\" paths ${cmake_external_deps}/lib no_default_path no_cmake_find_root_path)"}, {"filenames": ["\"tiff\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/tiff/CMakeLists.txt", "content": "find_library(tiff names \"tiff\")"}, {"filenames": ["\"tiff\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/tiff/CMakeLists.txt", "content": "find_library(tiff names \"tiff\" paths \"/opt/local/lib\" required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"libmwcapture\""], "version": "", "fromfile": "stitchEm@@stitchEm/IO/src/magewellpro/CMakeLists.txt", "content": "find_library(magewell_device \"libmwcapture\" hints \"${magewell_path}\\\\sdkv3\\\\lib\\\\x64\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}