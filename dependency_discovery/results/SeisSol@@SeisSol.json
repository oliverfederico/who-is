{"target": "SeisSol@@SeisSol", "extractors": [{"deps": [], "type": "gitsubmod"}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 required components interpreter development)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 required components interpreter)", "confidence": "High"}, {"depname": "gemmtools", "version": null, "version_op": null, "unified_name": "gemmtools", "extractor_type": "cmake", "context": "find_package(gemmtools required)", "confidence": "High"}, {"depname": "easi", "version": "1.0.0", "version_op": null, "unified_name": "easi", "extractor_type": "cmake", "context": "find_package(easi 1.0.0 required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "numa", "version": null, "version_op": null, "unified_name": "numa", "extractor_type": "cmake", "context": "find_package(numa required)", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf required)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 required components c hl)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis required)", "confidence": "High"}, {"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "find_package(parmetis required)", "confidence": "High"}, {"depname": "parhip", "version": null, "version_op": null, "unified_name": "parhip", "extractor_type": "cmake", "context": "find_package(parhip required)", "confidence": "High"}, {"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "find_package(scotch required)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "memkind", "version": null, "version_op": null, "unified_name": "memkind", "extractor_type": "cmake", "context": "find_package(memkind required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}, {"depname": "eigen3", "version": "3.4", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.4 required)", "confidence": "High"}, {"depname": "yaml-cpp", "version": null, "version_op": null, "unified_name": "yaml-cpp", "extractor_type": "cmake", "context": "find_package(yaml-cpp required)", "confidence": "High"}, {"depname": "hipsycl", "version": null, "version_op": null, "unified_name": "hipsycl", "extractor_type": "cmake", "context": "find_package(hipsycl quiet)", "confidence": "High"}, {"depname": "dpcppflags", "version": null, "version_op": null, "unified_name": "dpcppflags", "extractor_type": "cmake", "context": "find_package(dpcppflags required)", "confidence": "High"}, {"depname": "filesystem", "version": null, "version_op": null, "unified_name": "filesystem", "extractor_type": "cmake", "context": "find_package(filesystem required)", "confidence": "High"}, {"depname": "pybind11", "version": "2.6.2", "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 2.6.2 required)", "confidence": "High"}, {"depname": "pybind11", "version": "2.3.0", "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 2.3.0 required)", "confidence": "High"}, {"depname": "likwid", "version": null, "version_op": null, "unified_name": "likwid", "extractor_type": "cmake", "context": "find_package(likwid required)", "confidence": "High"}, {"depname": "seissol", "version": null, "version_op": null, "unified_name": "seissol", "extractor_type": "cmake", "context": "project(seissol languages c cxx)", "confidence": ""}, {"depname": "asagi", "version": null, "version_op": null, "unified_name": "asagi", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(asagi required imported_target asagi)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pspamm", "version": null, "version_op": null, "unified_name": "pspamm", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindPSpaMM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pspamm.py"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindPSpaMM.cmake", "content": "find_program(pspamm_program pspamm.py\n  hints env pspamm_dir\n  doc \"directory where the pspamm python script is located\"\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3", "version": "3", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 ${eigen3_find_version} no_module quiet)", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gemmtools", "version": null, "version_op": null, "unified_name": "gemmtools", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindGemmTools.cmake", "confidence": "High"}, {"depname": "libxsmm_executable", "version": null, "version_op": null, "unified_name": "xsmm_executable", "extractor_type": "cmake", "context": "find_package(libxsmm_executable required)", "confidence": "High"}, {"depname": "libxsmm", "version": "1.17", "version_op": null, "unified_name": "xsmm", "extractor_type": "cmake", "context": "find_package(libxsmm 1.17 required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "pspamm", "version": null, "version_op": null, "unified_name": "pspamm", "extractor_type": "cmake", "context": "find_package(pspamm required)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl required)", "confidence": "High"}, {"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "find_package(openblas required)", "confidence": "High"}, {"depname": "blis", "version": null, "version_op": null, "unified_name": "blis", "extractor_type": "cmake", "context": "find_package(blis required)", "confidence": "High"}, {"depname": "gemmforge", "version": "0.0.207", "version_op": null, "unified_name": "gemmforge", "extractor_type": "cmake", "context": "find_package(gemmforge 0.0.207 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libxsmm_executable", "version": null, "version_op": null, "unified_name": "xsmm_executable", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindLibxsmm_executable.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libxsmm_gemm_generator"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindLibxsmm_executable.cmake", "content": "find_program(libxsmm_executable_program libxsmm_gemm_generator\n  hints env libxsmm_dir\n  path_suffixes bin\n  doc \"directory where the libxsmm binary file is located\"\n)"}]}, {"deps": [{"depname": "blis", "version": null, "version_op": null, "unified_name": "blis", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindBLIS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libblis.a", "libblis.so"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindBLIS.cmake", "content": "find_library(blis_libraries\n  names libblis.a libblis.so\n  hints env blis_dir\n  path_suffixes lib\n  doc \"directory where the blis library is located\"\n)"}]}, {"deps": [{"depname": "parhip", "version": null, "version_op": null, "unified_name": "parhip", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindParHIP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["parhip_interface"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindParHIP.cmake", "content": "find_library(parhip_library names parhip_interface\n        hints\n        env parhip_root\n        env library_path\n        env ld_library_path\n    )"}]}, {"deps": [{"depname": "memkind", "version": null, "version_op": null, "unified_name": "memkind", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindMemkind.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["memkind"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindMemkind.cmake", "content": "find_library(memkind_libraries memkind)"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_intel_ilp64"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindMKL.cmake", "content": "find_library(mkl_interface_library\n             names mkl_intel_ilp64\n             paths $env{mklroot}/lib\n                   $env{mklroot}/lib/intel64\n                   $env{intel}/mkl/lib/intel64\n             no_default_path)"}, {"filenames": ["mkl_sequential"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindMKL.cmake", "content": "find_library(mkl_sequential_layer_library\n             names mkl_sequential\n             paths $env{mklroot}/lib\n                   $env{mklroot}/lib/intel64\n                   $env{intel}/mkl/lib/intel64\n             no_default_path)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindMKL.cmake", "content": "find_library(mkl_core_library\n             names mkl_core\n             paths $env{mklroot}/lib\n                   $env{mklroot}/lib/intel64\n                   $env{intel}/mkl/lib/intel64\n             no_default_path)"}]}, {"deps": [{"depname": "libxsmm", "version": null, "version_op": null, "unified_name": "xsmm", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindLIBXSMM.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "libxsmm", "version": null, "version_op": null, "unified_name": "xsmm", "extractor_type": "cmake", "context": "        set(libxsmm_version \"${_libxsmm_version}\")", "confidence": "Low"}, {"depname": "libxsmm", "version": null, "version_op": null, "unified_name": "xsmm", "extractor_type": "cmake", "context": "    set(libxsmm_version \"${libxsmm_version_major}.${libxsmm_version_minor}\")", "confidence": "Low"}, {"depname": "libxsmm", "version": null, "version_op": null, "unified_name": "xsmm", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_libxsmm quiet libxsmm imported_target)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xsmm", "path_suffices", "lib"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindLIBXSMM.cmake", "content": "find_library(libxsmm_libraries\n        names xsmm\n        path_suffices lib\n        doc \"path to libxsmm library\"\n        )"}, {"filenames": ["dl", "path_suffices", "lib"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindLIBXSMM.cmake", "content": "find_library(libdl_libraries\n        names dl\n        path_suffices lib\n        doc \"path to libdl library\"\n        )"}]}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindMETIS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["metis", "metis${parmetis_lib_suffix}"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindMETIS.cmake", "content": "find_library(metis_library\n  names metis metis${parmetis_lib_suffix}\n  hints ${parmetis_lib_dir} \n        env parmetis_lib_dir \n        ${parmetis_dir} \n        env parmetis_dir\n        ${metis_lib_dir} \n        env metis_lib_dir \n        ${metis_dir} \n        env metis_dir\n  path_suffixes lib\n  doc \"directory where the metis library is located\"\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "filesystem", "version": null, "version_op": null, "unified_name": "filesystem", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindFILESYSTEM.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gcov"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( gcov_path gcov )"}, {"filenames": ["lcov", "lcov.bat", "lcov.exe", "lcov.perl"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( lcov_path  names lcov lcov.bat lcov.exe lcov.perl)"}, {"filenames": ["fastcov", "fastcov.py"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( fastcov_path names fastcov fastcov.py )"}, {"filenames": ["genhtml", "genhtml.perl", "genhtml.bat"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( genhtml_path names genhtml genhtml.perl genhtml.bat )"}, {"filenames": ["gcovr"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( gcovr_path gcovr paths ${cmake_source_dir}/scripts/test)"}, {"filenames": ["c++filt"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/CodeCoverage.cmake", "content": "find_program( cppfilt_path names c++filt )"}]}, {"deps": [{"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindParMETIS.cmake", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi quiet required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["parmetis", "parmetis${parmetis_lib_suffix}"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindParMETIS.cmake", "content": "find_library(parmetis_library\n  names parmetis parmetis${parmetis_lib_suffix}\n  hints ${parmetis_lib_dir} env parmetis_lib_dir ${parmetis_dir} env parmetis_dir\n  path_suffixes lib\n  doc \"directory where the parmetis library is located\"\n)"}, {"filenames": ["metis", "metis${parmetis_lib_suffix}"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindParMETIS.cmake", "content": "find_library(metis_library\n  names metis metis${parmetis_lib_suffix}\n  hints ${parmetis_lib_dir} env parmetis_lib_dir ${parmetis_dir} env parmetis_dir\n  path_suffixes lib\n  doc \"directory where the metis library is located\"\n)"}]}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindNetCDF.cmake", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf config quiet)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "  set(netcdf_version \"${_netcdf_version_major}.${_netcdf_version_minor}.${_netcdf_version_patch}${_netcdf_version_note}\")", "confidence": "Low"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "    set(netcdf_version \"${netcdfversion}\")", "confidence": "Low"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "      set(netcdf_version \"${_netcdf_version}\")", "confidence": "Low"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_netcdf quiet netcdf imported_target)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["netcdf"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindNetCDF.cmake", "content": "find_library(netcdf_library\n  names netcdf\n  hints $env{netcdf_dir}/lib $env{netcdf_lib_dir}\n  doc \"netcdf library\")"}]}, {"deps": [{"depname": "numa", "version": null, "version_op": null, "unified_name": "numa", "extractor_type": "cmake", "context": "SeisSol@@SeisSol/cmake/FindNUMA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["numa"], "version": "", "fromfile": "SeisSol@@SeisSol/cmake/FindNUMA.cmake", "content": "find_library(numa_library\n        names numa\n        hints ${numa_root_dir}\n        doc \"numa library\")"}]}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": "3.4", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.4 required)", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf required)", "confidence": "High"}, {"depname": "proj4", "version": null, "version_op": null, "unified_name": "proj4", "extractor_type": "cmake", "context": "find_package(proj4 quiet)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 required components c hl)", "confidence": "High"}, {"depname": "seissol", "version": null, "version_op": null, "unified_name": "seissol", "extractor_type": "cmake", "context": "project(seissol-rconv languages c cxx)", "confidence": ""}, {"depname": "proj", "version": "4.9", "version_op": ">=", "unified_name": "proj", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(proj4 quiet proj>=4.9)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf required)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 required\n          components c hl)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "cube_c", "version": null, "version_op": null, "unified_name": "cube_c", "extractor_type": "cmake", "context": "project(cube_c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components context fiber)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "hipsycl", "version": null, "version_op": null, "unified_name": "hipsycl", "extractor_type": "cmake", "context": "find_package(hipsycl config required)", "confidence": "High"}, {"depname": "dpcppflags", "version": null, "version_op": null, "unified_name": "dpcppflags", "extractor_type": "cmake", "context": "find_package(dpcppflags required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}]}