{"target": "falkenber9@@falcon", "extractors": [{"deps": [], "type": "gitsubmod"}, {"deps": [{"depname": "cmnalib", "version": null, "version_op": null, "unified_name": "cmnalib", "extractor_type": "cmake", "context": "find_package(cmnalib)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}, {"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "find_package(fftw3f required)", "confidence": "High"}, {"depname": "uhd", "version": null, "version_op": null, "unified_name": "uhd", "extractor_type": "cmake", "context": "find_package(uhd)", "confidence": "High"}, {"depname": "bladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake", "context": "find_package(bladerf)", "confidence": "High"}, {"depname": "soapysdr", "version": null, "version_op": null, "unified_name": "soapysdr", "extractor_type": "cmake", "context": "find_package(soapysdr)", "confidence": "High"}, {"depname": "srslte", "version": null, "version_op": null, "unified_name": "srslte", "extractor_type": "cmake", "context": "find_package(srslte)", "confidence": "High"}, {"depname": "boost", "version": "1.35", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost \"1.35\" components ${boost_required_components})", "confidence": "High"}, {"depname": "sse", "version": null, "version_op": null, "unified_name": "sse", "extractor_type": "cmake", "context": "find_package(sse)", "confidence": "High"}, {"depname": "qt5widgets", "version": null, "version_op": null, "unified_name": "qt5widgets", "extractor_type": "cmake", "context": "find_package(qt5widgets config required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package (opengl required)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 required components core gui widgets charts)", "confidence": "High"}, {"depname": "falcon", "version": null, "version_op": null, "unified_name": "falcon", "extractor_type": "cmake", "context": "project (falcon)", "confidence": ""}, {"depname": "glib", "version": "2.0", "version_op": "=", "unified_name": "glib", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(glib2\t\trequired\tglib-2.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindFFTW3F.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "\"fftw3f ", "version": " 3.0\"", "version_op": ">=", "unified_name": "\"fftw3f ", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_fftw3f \"fftw3f >= 3.0\")", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fftw3f.a", "libfftw3f.a", "libfftw3f-3.a"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindFFTW3F.cmake", "content": "find_library(fftw3f_static_library\n            names fftw3f.a libfftw3f.a libfftw3f-3.a\n            hints ${pc_fftw3f_libdir} ${pc_fftw3f_library_dirs} $env{fftw3_dir}/lib\n            paths /usr/local/lib\n                  /usr/lib)"}, {"filenames": ["fftw3f", "libfftw3f", "libfftw3f-3"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindFFTW3F.cmake", "content": "find_library(fftw3f_library \n            names fftw3f libfftw3f libfftw3f-3\n            hints ${pc_fftw3f_libdir} ${pc_fftw3f_library_dirs} $env{fftw3_dir}/lib\n            paths /usr/local/lib\n                  /usr/lib)"}]}, {"deps": [{"depname": "srsgui", "version": null, "version_op": null, "unified_name": "srsgui", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindSRSGUI.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "srsgui", "version": null, "version_op": null, "unified_name": "srsgui", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_srsgui quiet srsgui)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["srsgui"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSGUI.cmake", "content": "find_library(\n    srsgui_libraries\n    names srsgui\n    hints ${pc_srsgui_libdir}\n          ${cmake_install_prefix}/lib\n          ${cmake_install_prefix}/lib64\n          $env{srsgui_dir}/lib\n    paths /usr/local/lib\n          /usr/local/lib64\n          /usr/lib\n          /usr/lib64\n)"}]}, {"deps": [{"depname": "bladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindbladeRF.cmake", "confidence": "High"}, {"depname": "libbladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (bladerf_pkg libbladerf)", "confidence": "High"}, {"depname": "bladerf", "version": null, "version_op": null, "unified_name": "bladerf", "extractor_type": "cmake", "context": "check_library_exists(bladerf bladerf_get_board_name bladerf_libraries bladerf_version_ok)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bladerf"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindbladeRF.cmake", "content": "find_library(bladerf_libraries names bladerf\n    paths\n    ${bladerf_pkg_library_dirs}\n    /usr/lib\n    /usr/local/lib\n  )"}]}, {"deps": [{"depname": "limesdr", "version": null, "version_op": null, "unified_name": "limesdr", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindLimeSDR.cmake", "confidence": "High"}, {"depname": "limesuite", "version": null, "version_op": null, "unified_name": "limesuite", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (limesdr_pkg limesuite)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["limesuite"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindLimeSDR.cmake", "content": "find_library(limesdr_libraries \n    names limesuite\n    paths ${limesdr_pkg_library_dirs}\n          /usr/lib\n          /usr/local/lib\n  )"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_rt"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_libraries\n            names mkl_rt\n            hints $env{mkl_dir}/lib/intel64\n            paths)"}, {"filenames": ["libmkl_core.a"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_core\n            names libmkl_core.a\n            hints $env{mkl_dir}/lib/intel64\n            paths)"}, {"filenames": ["libmkl_intel_ilp64.a"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_ilp\n            names libmkl_intel_ilp64.a\n            hints $env{mkl_dir}/lib/intel64\n            paths)"}, {"filenames": ["libmkl_sequential.a"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_seq\n            names libmkl_sequential.a\n            hints $env{mkl_dir}/lib/intel64\n            paths)"}]}, {"deps": [{"depname": "soapysdr", "version": null, "version_op": null, "unified_name": "soapysdr", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindSoapySDR.cmake", "confidence": "High"}, {"depname": "soapysdr", "version": null, "version_op": null, "unified_name": "soapysdr", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (soapysdr_pkg soapysdr)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["soapysdr"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSoapySDR.cmake", "content": "find_library(soapysdr_libraries \n    names soapysdr\n    paths ${limesdr_pkg_library_dirs}\n          /usr/lib\n          /usr/local/lib\n          /usr/lib/arm-linux-gnueabihf     \n  )"}]}, {"deps": [{"depname": "sse", "version": null, "version_op": null, "unified_name": "sse", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindSSE.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmnalib", "version": null, "version_op": null, "unified_name": "cmnalib", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindCMNALIB.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "cmnalib", "version": null, "version_op": null, "unified_name": "cmnalib", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_cmnalib quiet cmnalib)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cmnalib"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindCMNALIB.cmake", "content": "find_library(\n    cmnalib_library\n    names   cmnalib\n    hints   $env{cmnalib_dir}/lib\n            ${cmnalib_builddir}/cmnalib/lib\n            ${pc_cmnalib_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}]}, {"deps": [{"depname": "uhd", "version": null, "version_op": null, "unified_name": "uhd", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindUHD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["uhd"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindUHD.cmake", "content": "find_library(\n    uhd_libraries\n    names uhd\n    hints $env{uhd_dir}/lib\n    paths /usr/local/lib\n          /usr/lib\n          /usr/lib/x86_64-linux-gnu\n          /usr/local/lib64\n          /usr/local/lib32\n)"}]}, {"deps": [{"depname": "srslte", "version": null, "version_op": null, "unified_name": "srslte", "extractor_type": "cmake", "context": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "srslte", "version": null, "version_op": null, "unified_name": "srslte", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_srslte quiet srslte)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["srslte_common"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library\n    names   srslte_common\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}, {"filenames": ["srslte_radio"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library_radio\n    names   srslte_radio\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}, {"filenames": ["srslte_upper"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library_upper\n    names   srslte_upper\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}, {"filenames": ["srslte_asn1"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library_asn1\n    names   srslte_asn1\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}, {"filenames": ["srslte_phy"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library_phy\n    names   srslte_phy\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}, {"filenames": ["srslte_rf"], "version": "", "fromfile": "falkenber9@@falcon/cmake/modules/FindSRSLTE.cmake", "content": "find_library(\n    srslte_library_rf\n    names   srslte_rf\n    hints   $env{srslte_dir}/lib\n            ${srslte_builddir}/srslte/lib\n            ${pc_srslte_libdir}\n            ${cmake_install_prefix}/lib\n            ${cmake_install_prefix}/lib64\n    paths   /usr/local/lib\n            /usr/local/lib64\n            /usr/lib\n            /usr/lib64\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "srsgui", "version": null, "version_op": null, "unified_name": "srsgui", "extractor_type": "cmake", "context": "find_package(srsgui)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}