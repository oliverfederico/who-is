{"target": "bazhenovc@@sigrlinn", "extractors": [{"deps": [{"depname": "d3d11", "version": null, "version_op": null, "unified_name": "d3d11", "extractor_type": "cmake", "context": "find_package(d3d11 required)", "confidence": "High"}, {"depname": "sigrlinn", "version": null, "version_op": null, "unified_name": "sigrlinn", "extractor_type": "cmake", "context": "project(sigrlinn)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "d3d11", "version": null, "version_op": null, "unified_name": "d3d11", "extractor_type": "cmake", "context": "bazhenovc@@sigrlinn/cmake/FindD3D11.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["d3d11"], "version": "", "fromfile": "bazhenovc@@sigrlinn/cmake/FindD3D11.cmake", "content": "find_library (d3d11_lib \n\t\t\tnames d3d11\n\t\t\t\n\t\t\tpaths \"${win8_sdk_dir}/lib/winv6.3/um/x86\"\n\t\t\tno_default_path\n\t\t\tdoc \"path to the windows 8 d3d11.lib file\"\n\t\t)"}, {"filenames": ["d3d11"], "version": "", "fromfile": "bazhenovc@@sigrlinn/cmake/FindD3D11.cmake", "content": "find_library (d3d11_lib \n\t\t\t\tnames d3d11\n\t\t\t\tpaths \"$env{dxsdk_dir}/lib/x86\"\n\t\t\t\tno_default_path\n\t\t\t\tdoc \"path to the legacy d3d11.lib file\"\n\t\t\t)"}, {"filenames": ["d3dx11"], "version": "", "fromfile": "bazhenovc@@sigrlinn/cmake/FindD3D11.cmake", "content": "find_library (d3dx11_lib \n\t\t\t\tnames d3dx11\n\t\t\t\tpaths \"$env{dxsdk_dir}/lib/x86\"\n\t\t\t\tno_default_path\n\t\t\t\tdoc \"path to the legacy d3dx11.lib file\"\n\t\t\t)"}, {"filenames": ["dxerr", "dxerr11"], "version": "", "fromfile": "bazhenovc@@sigrlinn/cmake/FindD3D11.cmake", "content": "find_library (dxerr11_lib \n\t\t\t\tnames dxerr dxerr11\n\t\t\t\tpaths \"$env{dxsdk_dir}/lib/x86\"\n\t\t\t\tno_default_path\n\t\t\t\tdoc \"path to the legacy dxerr11x.lib file\"\n\t\t\t)"}]}, {"deps": [{"depname": "d3d12", "version": null, "version_op": null, "unified_name": "d3d12", "extractor_type": "cmake", "context": "bazhenovc@@sigrlinn/cmake/FindD3D12.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["d3d12"], "version": "", "fromfile": "bazhenovc@@sigrlinn/cmake/FindD3D12.cmake", "content": "find_library (d3d12_lib \n            names d3d12\n            paths \"${win10_sdk_dir}/lib/10.0.10069.0/um/x86\"\n            no_default_path\n            doc \"path to the windows 8 d3d12.lib file\"\n        )"}]}, {"deps": [], "type": "cmake", "libs": []}]}