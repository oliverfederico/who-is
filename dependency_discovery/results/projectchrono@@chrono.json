{"target": "projectchrono@@chrono", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "chrono", "version": "8.0.0", "version_op": null, "unified_name": "chrono", "extractor_type": "cmake", "context": "project(chrono version 8.0.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "projectchrono@@chrono/CMakeLists.txt", "content": "find_program(ccache_exe ccache)"}]}, {"deps": [{"depname": "cudaarch", "version": null, "version_op": null, "unified_name": "cudaarch", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindCudaArch.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pkgmacros", "version": null, "version_op": null, "unified_name": "pkgmacros", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindPkgMacros.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "${pkgname}", "version": null, "version_op": null, "unified_name": "${pkgname}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(${prefix} ${pkgname})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "omp", "version": "2.0", "version_op": null, "unified_name": "omp", "extractor_type": "cmake", "context": "set(omp_version \"2.0\")", "confidence": "Low"}, {"depname": "omp", "version": "3.0", "version_op": null, "unified_name": "omp", "extractor_type": "cmake", "context": "  set(omp_version \"3.0\")", "confidence": "Low"}, {"depname": "omp", "version": "4.0", "version_op": null, "unified_name": "omp", "extractor_type": "cmake", "context": "  set(omp_version \"4.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "thrust", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindThrust.cmake", "confidence": "High"}, {"depname": "thrust", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "set( thrust_version \"${major}.${minor}.${version}\")", "confidence": "Low"}, {"depname": "thrust_major", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "set( thrust_major_version \"${major}\")", "confidence": "Low"}, {"depname": "thrust_minor", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "set( thrust_minor_version \"${minor}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "simd", "version": null, "version_op": null, "unified_name": "simd", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindSIMD.cmake", "confidence": "High"}, {"depname": "sse", "version": "4.2", "version_op": null, "unified_name": "sse", "extractor_type": "cmake", "context": "\t   set(sse_version \"4.2\")", "confidence": "Low"}, {"depname": "sse", "version": "4.1", "version_op": null, "unified_name": "sse", "extractor_type": "cmake", "context": "\t   set(sse_version \"4.1\")", "confidence": "Low"}, {"depname": "sse", "version": "3.0", "version_op": null, "unified_name": "sse", "extractor_type": "cmake", "context": "\t   set(sse_version \"3.0\")", "confidence": "Low"}, {"depname": "avx", "version": "2.0", "version_op": null, "unified_name": "avx", "extractor_type": "cmake", "context": "\t\tset(avx_version \"2.0\")", "confidence": "Low"}, {"depname": "avx", "version": "1.0", "version_op": null, "unified_name": "avx", "extractor_type": "cmake", "context": "\t\tset(avx_version \"1.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3", "version": "3", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 ${eigen3_find_version} no_module quiet)", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ogre", "version": null, "version_op": null, "unified_name": "ogre", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindOgre.cmake", "confidence": "High"}, {"depname": "cg", "version": null, "version_op": null, "unified_name": "cg", "extractor_type": "cmake", "context": "find_package(cg quiet)", "confidence": "High"}, {"depname": "directx", "version": null, "version_op": null, "unified_name": "directx", "extractor_type": "cmake", "context": "find_package(directx quiet)", "confidence": "High"}, {"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "find_package(freeimage quiet)", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype quiet)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl quiet)", "confidence": "High"}, {"depname": "opengles", "version": null, "version_op": null, "unified_name": "opengles", "extractor_type": "cmake", "context": "find_package(opengles quiet)", "confidence": "High"}, {"depname": "opengles2", "version": null, "version_op": null, "unified_name": "opengles2", "extractor_type": "cmake", "context": "find_package(opengles2 quiet)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib quiet)", "confidence": "High"}, {"depname": "zzip", "version": null, "version_op": null, "unified_name": "zzip", "extractor_type": "cmake", "context": "find_package(zzip quiet)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 quiet)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components ${ogre_boost_components} quiet)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components ${ogre_boost_components} quiet)", "confidence": "High"}, {"depname": "poco", "version": null, "version_op": null, "unified_name": "poco", "extractor_type": "cmake", "context": "find_package(poco quiet)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb quiet)", "confidence": "High"}, {"depname": "ogre", "version": null, "version_op": null, "unified_name": "ogre", "extractor_type": "cmake", "context": "  set(ogre_version \"${ogre_version_major}.${ogre_version_minor}.${ogre_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["ogremain"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_library_rel names ogremain hints ${ogre_lib_search_path} ${ogre_pkgc_library_dirs} ${ogre_framework_search_path} path_suffixes \"\" \"release\" \"relwithdebinfo\" \"minsizerel\")"}, {"filenames": ["${ogre_library_names_dbg}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_library_dbg names ${ogre_library_names_dbg} hints ${ogre_lib_search_path} ${ogre_pkgc_library_dirs} ${ogre_framework_search_path} path_suffixes \"\" \"debug\")"}, {"filenames": ["xaw", "xaw7"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(xaw_library names xaw xaw7 paths ${dep_lib_search_dir} ${x11_lib_search_path})"}, {"filenames": ["${ogre_${component}_library_names}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_${component}_library_rel names ${ogre_${component}_library_names} hints ${ogre_library_dir_rel} ${ogre_framework_path} path_suffixes \"\" \"release\" \"relwithdebinfo\" \"minsizerel\")"}, {"filenames": ["${ogre_${component}_library_names_dbg}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_${component}_library_dbg names ${ogre_${component}_library_names_dbg} hints ${ogre_library_dir_dbg} ${ogre_framework_path} path_suffixes \"\" \"debug\")"}, {"filenames": ["${ogre_${plugin}_library_names}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_${plugin}_library_rel names ${ogre_${plugin}_library_names}\n    hints \"${ogre_build}/lib\" ${ogre_library_dirs} ${ogre_framework_path} path_suffixes \"\" ogre ogre-${ogre_version} opt release release/opt relwithdebinfo relwithdebinfo/opt minsizerel minsizerel/opt)"}, {"filenames": ["${ogre_${plugin}_library_names_dbg}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindOgre.cmake", "content": "find_library(ogre_${plugin}_library_dbg names ${ogre_${plugin}_library_names_dbg}\n    hints \"${ogre_build}/lib\" ${ogre_library_dirs} ${ogre_framework_path} path_suffixes \"\" ogre ogre-${ogre_version} opt debug debug/opt)"}]}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library_temp\n\tnames sdl2\n\thints\n\t$env{sdl2dir}\n\tpath_suffixes lib64 lib lib/x64\n\tpaths ${sdl2_search_paths}\n)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindSDL2.cmake", "content": "find_library(sdl2main_library\n\t\t\tnames sdl2main\n\t\t\thints\n\t\t\t$env{sdl2dir}\n\t\t\tpath_suffixes lib64 lib\n\t\t\tpaths ${sdl2_search_paths}\n\t\t)"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_mkl_lib}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMKL.cmake", "content": "find_library(${_mkl_lib_upper}_library\n        names ${_mkl_lib}\n        paths $env{mklroot}\n        path_suffixes lib\n        doc \"the path to intel(r) mkl ${_mkl_lib_raw} library\"\n    )"}, {"filenames": ["pthread"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMKL.cmake", "content": "find_library(pthread_library pthread doc \"path to posix threads library\")"}, {"filenames": ["iomp5"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMKL.cmake", "content": "find_library(iomp5_library\n    names iomp5\n    paths ${_intel_library_search_dirs}\n    path_suffixes lib\n    doc \"path to openmp runtime library\"\n)"}, {"filenames": ["imf"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMKL.cmake", "content": "find_library(math_library\n    names imf\n    paths ${_intel_library_search_dirs}\n    path_suffixes lib\n    doc \"path to optimized math library\"\n)"}]}, {"deps": [{"depname": "mygui", "version": null, "version_op": null, "unified_name": "mygui", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype)", "confidence": "High"}, {"depname": "myguistatic", "version": null, "version_op": null, "unified_name": "myguistatic", "extractor_type": "cmake::pkg", "context": "pkg_search_module(mygui myguistatic myguistatic)", "confidence": "High"}, {"depname": "myguistatic", "version": null, "version_op": null, "unified_name": "myguistatic", "extractor_type": "cmake::pkg", "context": "pkg_search_module(mygui myguistatic myguistatic)", "confidence": "High"}, {"depname": "mygui", "version": null, "version_op": null, "unified_name": "mygui", "extractor_type": "cmake::pkg", "context": "pkg_search_module(mygui mygui mygui)", "confidence": "High"}, {"depname": "mygui", "version": null, "version_op": null, "unified_name": "mygui", "extractor_type": "cmake::pkg", "context": "pkg_search_module(mygui mygui mygui)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["myguiengine.lib", "mygui.ogreplatform.lib"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library ( mygui_libraries_rel names\n        myguiengine.lib\n        mygui.ogreplatform.lib\n        hints\n        ${mygui_libraries}\n        path_suffixes \"\" release relwithdebinfo minsizerel )"}, {"filenames": ["myguiengine_d.lib", "mygui.ogreplatform_d.lib"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library ( mygui_libraries_dbg names\n        myguiengine_d.lib\n        mygui.ogreplatform_d.lib\n        hints\n        ${mygui_libraries}\n        path_suffixes \"\" debug )"}, {"filenames": ["mygui.ogreplatform.lib"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library ( mygui_platform_libraries_rel names\n        mygui.ogreplatform.lib\n        hints\n        ${mygui_libraries}\n        path_suffixes \"\" release relwithdebinfo minsizerel )"}, {"filenames": ["mygui.ogreplatform_d.lib"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library ( mygui_platform_libraries_dbg names\n        mygui.ogreplatform_d.lib\n        hints\n        ${mygui_libraries}\n        path_suffixes \"\" debug )"}, {"filenames": ["myguistatic"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library(mygui_libraries myguistatic paths /usr/lib /usr/local/lib)"}, {"filenames": ["myguienginestatic"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library(mygui_libraries myguienginestatic paths /usr/lib /usr/local/lib)"}, {"filenames": ["mygui"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMyGUI.cmake", "content": "find_library(mygui_libraries mygui paths /usr/lib /usr/local/lib)"}]}, {"deps": [{"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindBLAS.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n      names ${_library}\n      paths ${argn}\n      )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "moderncxx", "version": null, "version_op": null, "unified_name": "moderncxx", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindModernCXX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindMumps.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"libmumps_common\"", "\"libmumps_common.a\""], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMumps.cmake", "content": "find_library(mumps_only_library_common\n\t\t\t names \"libmumps_common\" \"libmumps_common.a\"\n\t\t\t paths ${mumps_root}\n\t\t\t path_suffixes \"lib\" \"lib64\" \"libraries\"\n         )"}, {"filenames": ["\"lib${mumps_arith_prefix}mumps\"", "\"lib${mumps_arith_prefix}mumps.a\""], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMumps.cmake", "content": "find_library(mumps_only_library_arithmetic_specific\n\t\t\t names \"lib${mumps_arith_prefix}mumps\" \"lib${mumps_arith_prefix}mumps.a\"\n\t\t\t paths ${mumps_root}\n\t\t\t path_suffixes \"lib\" \"lib64\" \"libraries\"\n         )"}, {"filenames": ["libmpiseq", "libmpiseq.a"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMumps.cmake", "content": "find_library(mumps_mpi_libraries\n\t\t\t\tnames libmpiseq libmpiseq.a\n\t\t\t\tpaths ${mumps_root}\n\t\t\t\tpath_suffixes \"libseq\" \"libseqmpi\" \"lib\" \"lib64\"\n\t\t\t\tno_default_path\n\t\t\t    no_system_environment_path)"}, {"filenames": ["libpord", "libpord.a"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindMumps.cmake", "content": "find_library(mumps_orderings_libraries\n\t\t\t\tnames libpord libpord.a\n\t\t\t\tpaths ${mumps_root}\n\t\t\t\tpath_suffixes \"pord/lib\" \"pord\" \"pord/libraries\" \"lib\" \"lib64\"\n\t)"}]}, {"deps": [{"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindOptiX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindTBB.cmake", "confidence": "High"}, {"depname": "tbb_interface", "version": "0", "version_op": null, "unified_name": "tbb_interface", "extractor_type": "cmake", "context": "\tset(tbb_interface_version 0)", "confidence": "Low"}, {"depname": "tbb_interface", "version": null, "version_op": null, "unified_name": "tbb_interface", "extractor_type": "cmake", "context": "\tset(tbb_interface_version \"${tbb_interface_version}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindTBB.cmake", "content": "find_library(tbb_library tbb hints ${_tbb_library_dir}\n        paths env library_path env ld_library_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindTBB.cmake", "content": "find_library(tbb_malloc_library tbbmalloc hints ${_tbb_library_dir}\n        paths env library_path env ld_library_path)"}, {"filenames": ["tbb_debug"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindTBB.cmake", "content": "find_library(tbb_library_debug tbb_debug hints ${_tbb_library_dir}\n        paths env library_path env ld_library_path)"}, {"filenames": ["tbbmalloc_debug"], "version": "", "fromfile": "projectchrono@@chrono/cmake/FindTBB.cmake", "content": "find_library(tbb_malloc_library_debug tbbmalloc_debug hints ${_tbb_library_dir}\n        paths env library_path env ld_library_path)"}]}, {"deps": [{"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "projectchrono@@chrono/cmake/FindGLM.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencrg", "version": null, "version_op": null, "unified_name": "opencrg", "extractor_type": "cmake", "context": "project(opencrg)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "\"tbb\"", "version": null, "version_op": null, "unified_name": "\"tbb\"", "extractor_type": "cmake", "context": "find_package(\"tbb\")", "confidence": "High"}, {"depname": "simd", "version": null, "version_op": null, "unified_name": "simd", "extractor_type": "cmake", "context": "find_package(simd)", "confidence": "High"}, {"depname": "eigen3", "version": "3.3.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.3.0)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda quiet)", "confidence": "High"}, {"depname": "thrust", "version": null, "version_op": null, "unified_name": "thrust", "extractor_type": "cmake", "context": "find_package(thrust)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 components cxx)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 names hdf5 components cxx ${search_type})", "confidence": "High"}, {"depname": "chrono_cuda", "version": null, "version_op": null, "unified_name": "chrono_cuda", "extractor_type": "cmake", "context": "  set(chrono_cuda_version \"#undef chrono_cuda_version\")", "confidence": "Low"}, {"depname": "chrono_thrust", "version": null, "version_op": null, "unified_name": "chrono_thrust", "extractor_type": "cmake", "context": "  set(chrono_thrust_version \"#undef chrono_thrust_version\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fastrtps", "version": null, "version_op": null, "unified_name": "fastrtps", "extractor_type": "cmake", "context": "find_package(fastrtps required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "vsg", "version": null, "version_op": null, "unified_name": "vsg", "extractor_type": "cmake", "context": "find_package(vsg required)", "confidence": "High"}, {"depname": "vsgimgui", "version": null, "version_op": null, "unified_name": "vsgimgui", "extractor_type": "cmake", "context": "find_package(vsgimgui required)", "confidence": "High"}, {"depname": "vsgxchange", "version": null, "version_op": null, "unified_name": "vsgxchange", "extractor_type": "cmake", "context": "find_package(vsgxchange required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl quiet)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew quiet)", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3 quiet)", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "find_package(optix required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvinfer"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_sensor/CMakeLists.txt", "content": "find_library(tensor_rt_nvinfer nvinfer ${tensor_rt_install_dir}/lib)"}, {"filenames": ["nvparsers"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_sensor/CMakeLists.txt", "content": "find_library(tensor_rt_parsers nvparsers ${tensor_rt_install_dir}/lib)"}, {"filenames": ["nvonnxparser"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_sensor/CMakeLists.txt", "content": "find_library(tensor_rt_onnxparser nvonnxparser ${tensor_rt_install_dir}/lib)"}, {"filenames": ["nvrtc"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_sensor/CMakeLists.txt", "content": "find_library(cuda_nvrtc_library nvrtc hints ${cuda_toolkit_root_dir}\n    ${cuda_toolkit_root_dir}/lib\n    ${cuda_toolkit_root_dir}/lib64 \n    ${cuda_toolkit_root_dir}/lib/x64)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library( irrlicht_library names irrlicht paths \"${irrlicht_install_dir}/lib/win32-visualstudio\")"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library( irrlicht_library names irrlicht paths \"${irrlicht_install_dir}/lib/win64-visualstudio\")"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library( irrlicht_library names irrlicht paths \"${irrlicht_install_dir}/lib/win32-gcc\")"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library( irrlicht_library names irrlicht paths \"${irrlicht_install_dir}/lib/win64-gcc\")"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library(irrlicht_library names irrlicht paths  ${irrlicht_install_dir}/lib/linux)"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library( irrlicht_library names irrlicht paths \"/usr/local/lib\" ${irrlicht_install_dir}/lib/linux)"}, {"filenames": ["cocoa"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library(cocoa_library cocoa)"}, {"filenames": ["opengl"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library(opengl_library opengl)"}, {"filenames": ["iokit"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library(iokit_library iokit)"}, {"filenames": ["irrlicht"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_irrlicht/CMakeLists.txt", "content": "find_library(irrlicht_library names irrlicht paths ${irrlicht_install_dir}/../../lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "vsg", "version": null, "version_op": null, "unified_name": "vsg", "extractor_type": "cmake", "context": "find_package(vsg required)", "confidence": "High"}, {"depname": "vsgimgui", "version": null, "version_op": null, "unified_name": "vsgimgui", "extractor_type": "cmake", "context": "find_package(vsgimgui required)", "confidence": "High"}, {"depname": "vsgxchange", "version": null, "version_op": null, "unified_name": "vsgxchange", "extractor_type": "cmake", "context": "find_package(vsgxchange required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opencrg"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_vehicle/CMakeLists.txt", "content": "find_library(opencrg_library names opencrg paths \"/usr/local/lib\")"}, {"filenames": ["opencrg"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_vehicle/CMakeLists.txt", "content": "find_library(opencrg_library names opencrg paths \"/usr/local/lib\")"}, {"filenames": ["irrklang"], "version": "", "fromfile": "projectchrono@@chrono/src/chrono_vehicle/CMakeLists.txt", "content": "find_library(irrklang_library names irrklang paths \"/usr/local/lib\" ${irrklang_install_dir}/lib/linux)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs ${python_version_string} exact)", "confidence": "High"}, {"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required)", "confidence": "High"}, {"depname": "blaze_major", "version": "1", "version_op": null, "unified_name": "blaze", "extractor_type": "cmake", "context": "  set(blaze_major_version ${cmake_match_1})", "confidence": "Low"}, {"depname": "blaze_minor", "version": "1", "version_op": null, "unified_name": "blaze", "extractor_type": "cmake", "context": "  set(blaze_minor_version ${cmake_match_1})", "confidence": "Low"}, {"depname": "blaze", "version": null, "version_op": null, "unified_name": "blaze", "extractor_type": "cmake", "context": "  set(blaze_version \"${cmake_match_1}.${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "find_package(glm required)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fastrtps", "version": null, "version_op": null, "unified_name": "fastrtps", "extractor_type": "cmake", "context": "find_package(fastrtps required paths \"${fastrtps_install_dir}/cmake\" \"${fastrtps}/share/fastrtps/cmake\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "urdfdom", "version": null, "version_op": null, "unified_name": "urdfdom", "extractor_type": "cmake", "context": "find_package(urdfdom quiet)", "confidence": "High"}, {"depname": "urdfdom_headers", "version": null, "version_op": null, "unified_name": "urdfdom_headers", "extractor_type": "cmake", "context": "find_package(urdfdom_headers required)", "confidence": "High"}, {"depname": "console_bridge", "version": null, "version_op": null, "unified_name": "console_bridge", "extractor_type": "cmake", "context": "find_package(console_bridge required)", "confidence": "High"}, {"depname": "tinyxml2", "version": null, "version_op": null, "unified_name": "tinyxml2", "extractor_type": "cmake", "context": "find_package(tinyxml2 required)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs ${python_version_string} exact)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "find_package(mumps required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "find_package(opencascade config)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "chrono", "version": null, "version_op": null, "unified_name": "chrono", "extractor_type": "cmake", "context": "find_package(chrono\n             components irrlicht\n             optional_components pardisomkl\n             config)", "confidence": "High"}, {"depname": "my_project", "version": null, "version_op": null, "unified_name": "my_project", "extractor_type": "cmake", "context": "project(my_project)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "chrono", "version": null, "version_op": null, "unified_name": "chrono", "extractor_type": "cmake", "context": "find_package(chrono\n             components vehiclecosim\n             config)", "confidence": "High"}, {"depname": "vehicle_cosim", "version": null, "version_op": null, "unified_name": "vehicle_cosim", "extractor_type": "cmake", "context": "project(vehicle_cosim)", "confidence": ""}], "type": "cmake", "libs": []}]}