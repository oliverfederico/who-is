{"target": "cb-geo@@mpm", "extractors": [{"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components filesystem system)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 components cxx hl)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}, {"depname": "kahip", "version": null, "version_op": null, "unified_name": "kahip", "extractor_type": "cmake", "context": "find_package(kahip)", "confidence": "High"}, {"depname": "kahip", "version": null, "version_op": null, "unified_name": "kahip", "extractor_type": "cmake", "context": "find_package(kahip required)", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk)", "confidence": "High"}, {"depname": "partio", "version": null, "version_op": null, "unified_name": "partio", "extractor_type": "cmake", "context": "find_package(partio)", "confidence": "High"}, {"depname": "codecov", "version": null, "version_op": null, "unified_name": "codecov", "extractor_type": "cmake", "context": "find_package(codecov)", "confidence": "High"}, {"depname": "mpm", "version": null, "version_op": null, "unified_name": "mpm", "extractor_type": "cmake", "context": "project(mpm languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindHDF5.cmake", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 quiet no_module\n      hints ${hdf5_root}\n      no_default_path\n      )", "confidence": "High"}, {"depname": "hdf5", "version": "5", "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "        set(hdf5_version ${hdf5_${__lang}_version})", "confidence": "Low"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "                  set( hdf5_version ${hdf5_version}.${cmake_match_3})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["lib${l}.a", "${l}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library(hdf5_${__lang}_library_${l}\n              names lib${l}.a ${l} names_per_dir\n              hints ${hdf5_${__lang}_library_dirs}\n                    ${hdf5_root}\n              no_default_path\n              )"}, {"filenames": ["lib${l}.a", "${l}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library(hdf5_${__lang}_library_${l}\n                names lib${l}.a ${l} names_per_dir\n                hints ${hdf5_${__lang}_library_dirs}\n                      ${hdf5_root}\n                no_default_path\n                )"}, {"filenames": ["${this_library_search_debug}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library(hdf5_${lib}_library_debug\n                names ${this_library_search_debug}\n                hints ${hdf5_root} path_suffixes lib lib\n                no_default_path\n            )"}, {"filenames": ["${this_library_search_release}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_release\n                names ${this_library_search_release}\n                hints ${hdf5_root} path_suffixes lib lib\n                no_default_path\n            )"}, {"filenames": ["${this_library_search_debug}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library(hdf5_${lib}_library_debug\n                    names ${this_library_search_debug}\n                    hints ${hdf5_root} path_suffixes lib lib\n                    no_default_path\n                )"}, {"filenames": ["${this_library_search_release}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_release\n                    names ${this_library_search_release}\n                    hints ${hdf5_root} path_suffixes lib lib\n                    no_default_path\n                )"}, {"filenames": ["${hdf5_${__lang}_compiler_names}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_program(hdf5_${__lang}_compiler_executable\n        names ${hdf5_${__lang}_compiler_names} names_per_dir\n        hints ${hdf5_root}\n        path_suffixes bin bin\n        doc \"hdf5 ${__lang} wrapper compiler.  used only to detect hdf5 compile flags.\"\n        no_default_path\n      )"}, {"filenames": ["h5diff"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindHDF5.cmake", "content": "find_program( hdf5_diff_executable\n    names h5diff\n    hints ${hdf5_root}\n    path_suffixes bin bin\n    no_default_path\n    doc \"hdf5 file differencing tool.\" )"}]}, {"deps": [{"depname": "lcov", "version": null, "version_op": null, "unified_name": "lcov", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindLcov.cmake", "confidence": "High"}, {"depname": "gcov", "version": null, "version_op": null, "unified_name": "gcov", "extractor_type": "cmake", "context": "find_package(gcov)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lcov"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindLcov.cmake", "content": "find_program(lcov_bin lcov)"}, {"filenames": ["geninfo"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindLcov.cmake", "content": "find_program(geninfo_bin geninfo)"}, {"filenames": ["genhtml"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindLcov.cmake", "content": "find_program(genhtml_bin genhtml)"}, {"filenames": ["c++filt"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindLcov.cmake", "content": "find_program(cppfilt_bin c++filt)"}]}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/Findcppcheck.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cppcheck", "cli"], "version": "", "fromfile": "cb-geo@@mpm/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable\n\t\tnames\n\t\tcppcheck\n\t\tcli\n\t\tpaths\n\t\t\"${cppcheck_root_dir}\"\n\t\tpath_suffixes\n\t\tcli\n\t\tno_default_path)"}, {"filenames": ["cppcheck"], "version": "", "fromfile": "cb-geo@@mpm/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable names cppcheck)"}]}, {"deps": [{"depname": "valgrind", "version": null, "version_op": null, "unified_name": "valgrind", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/Findvalgrind.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["name"], "version": "", "fromfile": "cb-geo@@mpm/cmake/Findvalgrind.cmake", "content": "find_program(valgrind_executable name valgrind\n             hints $env{valgrind_home}\n                   \"/usr/bin/\"\n                   \"/usr/local/bin\")"}]}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "codecov", "version": null, "version_op": null, "unified_name": "codecov", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/Findcodecov.cmake", "confidence": "High"}, {"depname": "gcov", "version": null, "version_op": null, "unified_name": "gcov", "extractor_type": "cmake", "context": "find_package(gcov)", "confidence": "High"}, {"depname": "lcov", "version": null, "version_op": null, "unified_name": "lcov", "extractor_type": "cmake", "context": "find_package(lcov)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gcov", "version": null, "version_op": null, "unified_name": "gcov", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindGcov.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gcov-${gcc_version}", "gcov"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindGcov.cmake", "content": "find_program(gcov_bin names gcov-${gcc_version} gcov\n\t\t\t\thints ${compiler_path})"}, {"filenames": ["\"llvm-cov-${llvm_version}\"", "\"llvm-cov\""], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindGcov.cmake", "content": "find_program(llvm_cov_bin names \"llvm-cov-${llvm_version}\"\n\t\t\t\t\t\"llvm-cov\" hints ${compiler_path})"}, {"filenames": ["\"llvm-cov-wrapper\""], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindGcov.cmake", "content": "find_program(llvm_cov_wrapper \"llvm-cov-wrapper\" paths\n\t\t\t\t\t\t${cmake_module_path})"}, {"filenames": ["gcov"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindGcov.cmake", "content": "find_program(gcov_bin gcov hints ${compiler_path})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "kahip", "version": null, "version_op": null, "unified_name": "kahip", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libkahip.a"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(kahip_library libkahip.a\n    hints ${kahip_root}/deploy $env{kahip_root}/deploy /usr/local/kahip/deploy\n    no_default_path\n    doc \"directory where the kahip library is located\"\n    )"}, {"filenames": ["kahip"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(kahip_library kahip\n    doc \"directory where the kahip library is located\"\n  )"}, {"filenames": ["kahip"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(mkahip_library kahip\n    hints ${kahip_root}/deploy/parallel $env{kahip_root}/deploy/parallel /usr/local/kahip/deploy/parallel\n    no_default_path\n    doc \"directory where the parallel kahip library is located\"\n  )"}, {"filenames": ["kahip"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(mkahip_library kahip\n    doc \"directory where the parallel kahip library is located\"\n  )"}, {"filenames": ["parhip"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(parhip_library parhip\n    hints ${kahip_root}/deploy $env{kahip_root}/deploy /usr/local/kahip/deploy\n    no_default_path\n    doc \"directory where the parhip interface is located\"\n  )"}, {"filenames": ["parhip"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindKaHIP.cmake", "content": "find_library(parhip_library parhip\n    doc \"directory where the parhip interface is located\"\n  )"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_core"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMKL.cmake", "content": "find_library(mkl_core mkl_core hints ${mkl_library_path} env ld_library_path)"}, {"filenames": ["mkl_intel_thread"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMKL.cmake", "content": "find_library(mkl_thread mkl_intel_thread hints ${mkl_library_path} env ld_library_path)"}, {"filenames": ["mkl_intel_lp64"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMKL.cmake", "content": "find_library(mkl_lp mkl_intel_lp64 hints ${mkl_library_path} env ld_library_path)"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindPackageHandleStandardArgs.cmake", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename>)", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename> no_module)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 quiet no_module hints /opt/automoc4)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 no_module)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagemessage", "version": null, "version_op": null, "unified_name": "packagemessage", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindPackageMessage.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "partio", "version": null, "version_op": null, "unified_name": "partio", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindPartio.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["partio"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindPartio.cmake", "content": "find_library(partio_library partio\n  hints ${partio_root}/src/lib\n  no_default_path\n  doc \"directory where the partio library is located\"\n  )"}, {"filenames": ["partio"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindPartio.cmake", "content": "find_library(partio_library partio\n  doc \"directory where the partio library is located\"\n  )"}]}, {"deps": [{"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindVTK.cmake", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk required quiet no_module)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "cb-geo@@mpm/cmake/FindMPI.cmake", "confidence": "High"}, {"depname": "mpi_min", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "        set(_mpi_min_version mpi_${lang}_version)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["\"${_mpi_lib_name}\"", "\"lib${_mpi_lib_name}\""], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_${_mpi_plain_lib_name}_library\n      names \"${_mpi_lib_name}\" \"lib${_mpi_lib_name}\"\n      hints ${mpi_link_directories_work}\n      doc \"location of the ${_mpi_plain_lib_name} library for mpi\"\n    )"}, {"filenames": ["msmpi"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_msmpi_library\n        names msmpi\n        hints $env{msmpi_lib32}\n        doc \"location of the msmpi library for microsoft mpi\")"}, {"filenames": ["msmpif${mpistrlenpos}${mpicallingconv}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_msmpif${mpistrlenpos}${mpicallingconv}_library\n                names msmpif${mpistrlenpos}${mpicallingconv}\n                hints \"$env{msmpi_lib32}\"\n                doc \"location of the msmpi${mpistrlenpos}${mpicallingconv} library for microsoft mpi\")"}, {"filenames": ["mpi"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_mpi_library\n        names mpi\n        hints ${mpi_mpich_prefix_paths})"}, {"filenames": ["cxx"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_cxx_library\n            names cxx\n            hints ${mpi_mpich_prefix_paths})"}, {"filenames": ["fmpich2"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_fmpich2_library\n            names fmpich2\n            hints ${mpi_mpich_prefix_paths})"}, {"filenames": ["fmpich2s"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_fmpich2s_library\n            names fmpich2s\n            hints ${mpi_mpich_prefix_paths})"}, {"filenames": ["fmpich2g"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_fmpich2g_library\n            names fmpich2g\n            hints ${mpi_mpich_prefix_paths})"}, {"filenames": ["\"${_mpi_lib_name}\"", "\"lib${_mpi_lib_name}\""], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_library(mpi_${_mpi_plain_lib_name}_library\n            names \"${_mpi_lib_name}\" \"lib${_mpi_lib_name}\"\n            hints ${_mpi_lib_dir} $env{mpi_lib}\n            doc \"location of the ${_mpi_plain_lib_name} library for mpi\"\n          )"}, {"filenames": ["mpiexec"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_program(mpiexec_executable\n          names mpiexec\n          hints $env{msmpi_bin} \"[hkey_local_machine\\\\software\\\\microsoft\\\\mpi;installroot]/bin\"\n          doc \"executable for running mpi programs.\")"}, {"filenames": ["${_mpiexec_names}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_program(mpiexec_executable\n          names ${_mpiexec_names}\n          hints \"$env{programw6432}/mpich2/bin\"\n                \"[hkey_local_machine\\\\software\\\\mpich\\\\smpd;binary]\"\n                \"[hkey_local_machine\\\\software\\\\mpich2;path]/bin\"\n          doc \"executable for running mpi programs.\")"}, {"filenames": ["${_mpiexec_names}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_program(mpiexec_executable\n  names ${_mpiexec_names}\n  path_suffixes bin sbin\n  hints ${mpi_hint_dirs}\n  doc \"executable for running mpi programs.\")"}, {"filenames": ["${_mpi_${lang}_compiler_names}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_program(mpi_${lang}_compiler\n              names  ${_mpi_${lang}_compiler_names}\n              path_suffixes bin sbin\n              hints  ${_mpi_base_dir}\n              no_default_path\n              doc    \"mpi compiler for ${lang}\"\n            )"}, {"filenames": ["${_mpi_${lang}_compiler_names}"], "version": "", "fromfile": "cb-geo@@mpm/cmake/FindMPI.cmake", "content": "find_program(mpi_${lang}_compiler\n            names  ${_mpi_${lang}_compiler_names}\n            path_suffixes bin sbin\n            doc    \"mpi compiler for ${lang}\"\n          )"}]}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "find_package(cppcheck quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "find_package(cppcheck quiet)", "confidence": "High"}], "type": "cmake", "libs": []}]}