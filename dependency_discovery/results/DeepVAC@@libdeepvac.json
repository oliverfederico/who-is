{"target": "DeepVAC@@libdeepvac", "extractors": [{"deps": [{"depname": "torch", "version": null, "version_op": null, "unified_name": "torch", "extractor_type": "cmake", "context": "find_package(torch required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 quiet)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "deepvac", "version": "0.1.0", "version_op": null, "unified_name": "deepvac", "extractor_type": "cmake", "context": "project(deepvac     version 0.1.0     description \"a library for using pytorch model in c++.\"     homepage_url \"https://github.com/deepvac/libdeepvac\"     languages cxx)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libmkl_intel_lp64.so"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(mkl_interface_library names libmkl_intel_lp64.so paths ${mkl_lib_path} no_default_path)"}, {"filenames": ["libmkl_sequential.so"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(mkl_sequential_layer_library names libmkl_sequential.so paths ${mkl_lib_path} no_default_path)"}, {"filenames": ["libmkl_gnu_thread.so"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(mkl_thread_layer_library names libmkl_gnu_thread.so paths ${mkl_lib_path} no_default_path)"}, {"filenames": ["libmkl_core.so"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(mkl_core_library names libmkl_core.so paths ${mkl_lib_path} no_default_path)"}, {"filenames": ["nvinfer"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(tensorrt_library_infer nvinfer hints ${tensorrt_root} ${tensorrt_build} ${cuda_toolkit_root_dir} path_suffixes lib lib64 lib/x64)"}, {"filenames": ["nvinfer_plugin"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(tensorrt_library_infer_plugin nvinfer_plugin hints  ${tensorrt_root} ${tensorrt_build} ${cuda_toolkit_root_dir} path_suffixes lib lib64 lib/x64)"}, {"filenames": ["nvparsers"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(tensorrt_library_infer_parser nvparsers hints ${tensorrt_root} ${tensorrt_build} ${cuda_toolkit_root_dir} path_suffixes lib lib64 lib/x64)"}, {"filenames": ["magma"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(magma_libraries magma hints /opt/conda /usr/local/magma path_suffixes lib)"}, {"filenames": ["cudnn"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(cudnn_library cudnn\n            hints ${cudnn_root_dir} ${cuda_toolkit_root_dir}\n            path_suffixes lib lib64 cuda/lib cuda/lib64 lib/x64)"}, {"filenames": ["cublas"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(cublas_library cublas\n            hints ${cudnn_root_dir} ${cuda_toolkit_root_dir}\n            path_suffixes lib lib64 cuda/lib cuda/lib64 lib/x64)"}, {"filenames": ["cublaslt"], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_library(cublaslt_library cublaslt\n            hints ${cudnn_root_dir} ${cuda_toolkit_root_dir}\n            path_suffixes lib lib64 cuda/lib cuda/lib64 lib/x64)"}, {"filenames": ["\"strip\""], "version": "", "fromfile": "DeepVAC@@libdeepvac/CMakeLists.txt", "content": "find_program(strip_command names \"strip\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["crypto"], "version": "", "fromfile": "DeepVAC@@libdeepvac/examples/CMakeLists.txt", "content": "find_library(crypto crypto)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["torch_python"], "version": "", "fromfile": "DeepVAC@@libdeepvac/python/CMakeLists.txt", "content": "find_library(torch_python_library torch_python paths \"${torch_install_prefix}/lib\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}