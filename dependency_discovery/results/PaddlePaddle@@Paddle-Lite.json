{"target": "PaddlePaddle@@Paddle-Lite", "extractors": [{"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "paddle", "version": null, "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "project(paddle cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": "4.1.0", "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "    set(opencv_version \"opencv4.1.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "find_package(java required)", "confidence": "High"}, {"depname": "jni", "version": null, "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "find_package(jni required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["metal"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/kernels/metal/CMakeLists.txt", "content": "find_library(metal_library metal required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "demo_trainer", "version": null, "version_op": null, "unified_name": "demo_trainer", "extractor_type": "cmake", "context": "project(demo_trainer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "macos_mobilenet_v1", "version": null, "version_op": null, "unified_name": "macos_mobilenet_v1", "extractor_type": "cmake", "context": "project(macos_mobilenet_v1)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["metal"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/demo/cxx/armmacos_mobile_light_demo/CMakeLists.txt", "content": "find_library(metal_library metal required)"}, {"filenames": ["coregraphics"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/demo/cxx/armmacos_mobile_light_demo/CMakeLists.txt", "content": "find_library(graphic coregraphics required)"}, {"filenames": ["metalperformanceshaders"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/demo/cxx/armmacos_mobile_light_demo/CMakeLists.txt", "content": "find_library(mps_library metalperformanceshaders required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["hiai"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_kirin_npu/dependencies.cmake", "content": "find_library(huawei_kirin_npu_sdk_hiai_file names hiai\n  paths ${nnadapter_huawei_kirin_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}, {"filenames": ["hiai_ir"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_kirin_npu/dependencies.cmake", "content": "find_library(huawei_kirin_npu_sdk_hiai_ir_file names hiai_ir\n  paths ${nnadapter_huawei_kirin_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}, {"filenames": ["hiai_ir_build"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_kirin_npu/dependencies.cmake", "content": "find_library(huawei_kirin_npu_sdk_hiai_ir_build_file names hiai_ir_build\n  paths ${nnadapter_huawei_kirin_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}, {"filenames": ["hcl"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_kirin_npu/dependencies.cmake", "content": "find_library(huawei_kirin_npu_sdk_hcl_file names hcl\n  paths ${nnadapter_huawei_kirin_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["eznpu_ddk"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/eeasytech_npu/dependencies.cmake", "content": "find_library(eeasytech_npu_sdk_ddk_file names eznpu_ddk\n  paths ${nnadapter_eeasytech_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cudart"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/nvidia_tensorrt/dependencies.cmake", "content": "find_library(nvidia_cuda_cudart_file names cudart\n  paths ${nnadapter_nvidia_cuda_lib_dir}\n  cmake_find_root_path_both)"}, {"filenames": ["cudnn"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/nvidia_tensorrt/dependencies.cmake", "content": "find_library(nvidia_cuda_cudnn_file names cudnn\n  paths ${nnadapter_nvidia_cudnn_lib_dir}\n  cmake_find_root_path_both)"}, {"filenames": ["nvinfer"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/nvidia_tensorrt/dependencies.cmake", "content": "find_library(nvidia_tensorrt_nvinfer_file names nvinfer\n  paths ${nnadapter_nvidia_tensorrt_lib_dir}\n  cmake_find_root_path_both)"}, {"filenames": ["nvinfer_plugin"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/nvidia_tensorrt/dependencies.cmake", "content": "find_library(nvidia_tensorrt_nvinfer_plugin_file names nvinfer_plugin\n  paths ${nnadapter_nvidia_tensorrt_lib_dir}\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rknpu_ddk"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/rockchip_npu/dependencies.cmake", "content": "find_library(rockchip_npu_sdk_ddk_file names rknpu_ddk\n  paths ${nnadapter_rockchip_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["amlnpu_ddk"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/amlogic_npu/dependencies.cmake", "content": "find_library(amlogic_npu_sdk_ddk_file names amlnpu_ddk\n  paths ${nnadapter_amlogic_npu_sdk_root}/lib\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["fake_ddk"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/fake_device/dependencies.cmake", "content": "find_library(fake_device_sdk_ddk_file names fake_ddk\n    paths ${nnadapter_fake_device_sdk_root}/lib\n    cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["imgdnn"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/imagination_nna/dependencies.cmake", "content": "find_library(imagination_nna_sdk_imgdnn_file names imgdnn\n  paths ${nnadapter_imagination_nna_sdk_root}/lib\n  cmake_find_root_path_both)"}, {"filenames": ["nnasession"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/imagination_nna/dependencies.cmake", "content": "find_library(imagination_nna_sdk_nnasession_file names nnasession\n  paths ${nnadapter_imagination_nna_sdk_root}/lib\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["magicmind"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/cambricon_mlu/dependencies.cmake", "content": "find_library(cambricon_mlu_sdk_magicmind_file names magicmind\n  paths ${nnadapter_cambricon_mlu_sdk_root}/lib64\n  cmake_find_root_path_both)"}, {"filenames": ["magicmind_runtime"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/cambricon_mlu/dependencies.cmake", "content": "find_library(cambricon_mlu_sdk_magicmind_runtime_file names magicmind_runtime\n  paths ${nnadapter_cambricon_mlu_sdk_root}/lib64\n  cmake_find_root_path_both)"}, {"filenames": ["magicmind_plugin"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/cambricon_mlu/dependencies.cmake", "content": "find_library(cambricon_mlu_sdk_magicmind_plugin_file names magicmind_plugin\n  paths ${nnadapter_cambricon_mlu_sdk_root}/lib64\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ascendcl"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_ascend_npu/dependencies.cmake", "content": "find_library(huawei_ascend_npu_sdk_acl_ascendcl_file names ascendcl\n  paths ${nnadapter_huawei_ascend_npu_sdk_root}/acllib/lib64\n  cmake_find_root_path_both)"}, {"filenames": ["ge_compiler"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/huawei_ascend_npu/dependencies.cmake", "content": "find_library(huawei_ascend_npu_sdk_atc_ge_compiler_file names ge_compiler\n  paths ${nnadapter_huawei_ascend_npu_sdk_root}/atc/lib64\n  cmake_find_root_path_both)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openvino_patch", "version": "0", "version_op": null, "unified_name": "openvino", "extractor_type": "cmake", "context": "set(openvino_patch_version 0)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["openvino"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/lite/backends/nnadapter/nnadapter/src/driver/intel_openvino/dependencies.cmake", "content": "find_library(intel_openvino_sdk_openvino_file names openvino\n  paths ${openvino_runtime_lib_path}\n  no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "arm_dnn_library", "version": null, "version_op": null, "unified_name": "arm_dnn_library", "extractor_type": "cmake", "context": "project(arm_dnn_library c cxx asm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["openblas"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/cblas.cmake", "content": "find_library(openblas_lib names openblas\n  paths ${openblas_lib_search_paths})"}, {"filenames": ["cblas"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/cblas.cmake", "content": "find_library(reference_cblas_library names cblas paths\n        ${reference_cblas_lib_search_paths})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/FindGflags.cmake", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags quiet\n                      no_module\n                      no_cmake_package_registry\n                      no_cmake_builds_path)", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags quiet\n                        no_module\n                        no_cmake_builds_path)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gflags"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindGflags.cmake", "content": "find_library(gflags_library names gflags\n    paths ${gflags_library_dir_hints}\n    ${gflags_check_library_dirs}\n    path_suffixes ${gflags_check_library_suffixes})"}]}, {"deps": [{"depname": "numpy", "version": null, "version_op": null, "unified_name": "numpy", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/FindNumPy.cmake", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp quiet)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gcov"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/coverallsGcovJsons.cmake", "content": "find_program(gcov_executable gcov)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["curl"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/coveralls.cmake", "content": "find_program(curl_executable curl)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/ccache.cmake", "content": "find_program(ccache_path ccache)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["metal"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/configure.cmake", "content": "find_library(metal_library metal required)"}, {"filenames": ["coregraphics"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/configure.cmake", "content": "find_library(graphic coregraphics required)"}, {"filenames": ["metalperformanceshaders"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/configure.cmake", "content": "find_library(mps_library metalperformanceshaders required)"}, {"filenames": ["foundation"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/configure.cmake", "content": "find_library(foundation_library foundation)"}]}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/FindGlog.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glog"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindGlog.cmake", "content": "find_library(libglog_library glog)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/FindJeMalloc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jemalloc"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindJeMalloc.cmake", "content": "find_library(jemalloc_libraries\n  names jemalloc\n  hints ${jemalloc_root_dir}/lib)"}]}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "set(cpack_package_version ${paddle_version})", "confidence": "Low"}, {"depname": "cpack_debian_package", "version": null, "version_op": null, "unified_name": "cpack_debian_package", "extractor_type": "cmake", "context": "set(cpack_debian_package_version ${paddle_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ar", "version": null, "version_op": null, "unified_name": "ar", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/findar.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "PaddlePaddle@@Paddle-Lite/cmake/FindGperftools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcmalloc"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc\n  names tcmalloc\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["profiler"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindGperftools.cmake", "content": "find_library(gperftools_profiler\n  names profiler\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["tcmalloc_and_profiler"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc_and_profiler\n  names tcmalloc_and_profiler\n  hints ${gperftools_root_dir}/lib)"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "paddle", "version": null, "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "set(paddle_version $env{paddle_version})", "confidence": "Low"}, {"depname": "tmp", "version": null, "version_op": null, "unified_name": "tmp", "extractor_type": "cmake", "context": "set(tmp_version \"head\")", "confidence": "Low"}, {"depname": "latest_paddle", "version": "0.0.0", "version_op": null, "unified_name": "latest_paddle", "extractor_type": "cmake", "context": "set(latest_paddle_version \"0.0.0\")", "confidence": "Low"}, {"depname": "paddle", "version": "0.0.0", "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "          set(paddle_version \"0.0.0\")", "confidence": "Low"}, {"depname": "tmp", "version": "1", "version_op": null, "unified_name": "tmp", "extractor_type": "cmake", "context": "          set(tmp_version \"${git_tag_name}~1\")", "confidence": "Low"}, {"depname": "paddle", "version": "0.0.0", "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "            set(paddle_version \"0.0.0\")", "confidence": "Low"}, {"depname": "paddle", "version": "0.0.0", "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "          set(paddle_version \"0.0.0\")", "confidence": "Low"}, {"depname": "paddle", "version": "0.0.0", "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "      set(paddle_version \"0.0.0\")", "confidence": "Low"}, {"depname": "paddle", "version": "0.0.0", "version_op": null, "unified_name": "paddle", "extractor_type": "cmake", "context": "    set(paddle_version \"0.0.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "16", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 16)", "confidence": "Low"}, {"depname": "cmake_android_ndk_toolchain", "version": null, "version_op": null, "unified_name": "cmake_android_ndk_toolchain", "extractor_type": "cmake", "context": "    set(cmake_android_ndk_toolchain_version ${arm_target_lang})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/os/armmacos.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gcc", "path", "/usr/bin", "/usr/local/bin"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/os/common.cmake", "content": "find_program(host_c_compiler names gcc path\n      /usr/bin\n      /usr/local/bin)"}, {"filenames": ["${default_cxx}", "path", "/usr/bin", "/usr/local/bin"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/os/common.cmake", "content": "find_program(host_cxx_compiler names ${default_cxx} path\n      /usr/bin\n      /usr/local/bin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/os/ios.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf quiet)", "confidence": "High"}, {"depname": "protobuf", "version": "3.3.0", "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "\nset(protobuf_version 3.3.0)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["protobuf"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/external/protobuf.cmake", "content": "find_library(protobuf_library protobuf libprotobuf.lib paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["protobuf-lite"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/external/protobuf.cmake", "content": "find_library(protobuf_lite_library protobuf-lite libprotobuf-lite.lib paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/external/protobuf.cmake", "content": "find_library(protobuf_protoc_library protoc libprotoc.lib paths ${protobuf_root}/lib no_default_path)"}, {"filenames": ["protoc"], "version": "", "fromfile": "PaddlePaddle@@Paddle-Lite/cmake/external/protobuf.cmake", "content": "find_program(protobuf_protoc_executable protoc paths ${protobuf_root}/bin no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp ${py_version} required)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs ${py_version} required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "time", "version": "2019.1.144", "version_op": null, "unified_name": "time", "extractor_type": "cmake", "context": "    set(time_version \"2019.1.144\")", "confidence": "Low"}, {"depname": "time", "version": "2019.0.1.20181227", "version_op": null, "unified_name": "time", "extractor_type": "cmake", "context": "    set(time_version \"2019.0.1.20181227\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}]}