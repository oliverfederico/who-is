{"target": "feelpp@@feelpp", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "autoconf"}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "feelpp", "version": "0", "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "set(feelpp_version \"(((0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feelpp", "version": null, "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "      project(feelpp-${feelpp_component})", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter development )", "confidence": "High"}, {"depname": "testsuite", "version": null, "version_op": null, "unified_name": "testsuite", "extractor_type": "cmake", "context": "project(testsuite)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${cmake_install_prefix}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "benchmarks", "version": null, "version_op": null, "unified_name": "benchmarks", "extractor_type": "cmake", "context": "project(benchmarks)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "benchmarks", "version": null, "version_op": null, "unified_name": "benchmarks", "extractor_type": "cmake", "context": "project( benchmarks )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${cmake_install_prefix}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "feelpp", "version": "0", "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "set(feelpp_version \"(((0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["bundle"], "version": "", "fromfile": "feelpp@@feelpp/toolboxes/tools/man/CMakeLists.txt", "content": "find_program(bundle_executable bundle names bundle3.0)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "testsuite", "version": null, "version_op": null, "unified_name": "testsuite", "extractor_type": "cmake", "context": "project(testsuite-toolboxes)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes paths ${cmake_install_prefix}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "mor", "version": null, "version_op": null, "unified_name": "mor", "extractor_type": "cmake", "context": "project(mor)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "feelpp", "version": "0", "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "set(feelpp_version \"(((0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "testsuite", "version": null, "version_op": null, "unified_name": "testsuite", "extractor_type": "cmake", "context": "project(testsuite-mor)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "doc", "version": null, "version_op": null, "unified_name": "doc", "extractor_type": "cmake", "context": "project(doc)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["doxygen"], "version": "", "fromfile": "feelpp@@feelpp/doc/api/CMakeLists.txt", "content": "find_program(doxygen doxygen )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes mor paths $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "feelpp", "version": null, "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "project( feelpp-research )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "llvm", "version": "3.7", "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "\nset(llvm_version \"3.7\")", "confidence": "Low"}, {"depname": "openmpi", "version": "1.10.1", "version_op": null, "unified_name": "openmpi", "extractor_type": "cmake", "context": "\nset(openmpi_version \"1.10.1\")", "confidence": "Low"}, {"depname": "gmsh", "version": "2.11.0", "version_op": null, "unified_name": "gmsh", "extractor_type": "cmake", "context": "\nset(gmsh_version \"2.11.0\")", "confidence": "Low"}, {"depname": "boost", "version": "1.59.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "\nset(boost_version \"1.59.0\")", "confidence": "Low"}, {"depname": "petsc", "version": "3.6.3", "version_op": null, "unified_name": "petsc", "extractor_type": "cmake", "context": "\nset(petsc_version \"3.6.3\")", "confidence": "Low"}, {"depname": "slepc", "version": "3.6.2", "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "\nset(slepc_version \"3.6.2\")", "confidence": "Low"}, {"depname": "paraview", "version": "4.4.0", "version_op": null, "unified_name": "paraview", "extractor_type": "cmake", "context": "\nset(paraview_version \"4.4.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "feelpp", "version": null, "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "project(feelpp-dependencies)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes mor paths ${cmake_install_prefix}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter development)", "confidence": "High"}, {"depname": "mpi4py", "version": null, "version_op": null, "unified_name": "mpi4py", "extractor_type": "cmake", "context": "find_package(mpi4py required)", "confidence": "High"}, {"depname": "petsc4py", "version": null, "version_op": null, "unified_name": "petsc4py", "extractor_type": "cmake", "context": "find_package(petsc4py)", "confidence": "High"}, {"depname": "slepc4py", "version": null, "version_op": null, "unified_name": "slepc4py", "extractor_type": "cmake", "context": "find_package(slepc4py)", "confidence": "High"}, {"depname": "feelpp", "version": null, "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "project(feelpp-python)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi4py", "version": null, "version_op": null, "unified_name": "mpi4py", "extractor_type": "cmake", "context": "feelpp@@feelpp/python/cmake/FindMPI4PY.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "petsc4py", "version": null, "version_op": null, "unified_name": "petsc4py", "extractor_type": "cmake", "context": "feelpp@@feelpp/python/cmake/FindPETSC4PY.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "slepc4py", "version": null, "version_op": null, "unified_name": "slepc4py", "extractor_type": "cmake", "context": "feelpp@@feelpp/python/cmake/FindSLEPC4PY.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "pyfeelpp", "version": null, "version_op": null, "unified_name": "pyfeelpp", "extractor_type": "cmake", "context": "project(pyfeelpp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes paths $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "pyfeelpp", "version": null, "version_op": null, "unified_name": "pyfeelpp", "extractor_type": "cmake", "context": "project(pyfeelpp-toolboxes)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-maxwell)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-thermoelectric)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["feelpp_toolbox_thermoelectric_lib"], "version": "", "fromfile": "feelpp@@feelpp/python/pyfeelpp-toolboxes/feelpp/toolboxes/levelset/CMakeLists.txt", "content": "find_library( feelpp_thermoelectric feelpp_toolbox_thermoelectric_lib hints ${feelpp_dir}/lib)"}]}, {"deps": [{"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-heat)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-advection)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["feelpp_toolbox_advection_lib"], "version": "", "fromfile": "feelpp@@feelpp/python/pyfeelpp-toolboxes/feelpp/toolboxes/advection/CMakeLists.txt", "content": "find_library( feelpp_advection feelpp_toolbox_advection_lib hints ${feelpp_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-hdg)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-cfpdes)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "toolboxes", "version": null, "version_op": null, "unified_name": "toolboxes", "extractor_type": "cmake", "context": "project(toolboxes-thermoelectric)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["feelpp_toolbox_thermoelectric_lib"], "version": "", "fromfile": "feelpp@@feelpp/python/pyfeelpp-toolboxes/feelpp/toolboxes/multifluid/CMakeLists.txt", "content": "find_library( feelpp_thermoelectric feelpp_toolbox_thermoelectric_lib hints ${feelpp_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ components toolboxes mor paths $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "pyfeelpp", "version": null, "version_op": null, "unified_name": "pyfeelpp", "extractor_type": "cmake", "context": "project(pyfeelpp-mor)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mor", "version": null, "version_op": null, "unified_name": "mor", "extractor_type": "cmake", "context": "project(mor-reducedbasis)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "feelpp", "version": null, "version_op": null, "unified_name": "feelpp", "extractor_type": "cmake", "context": "project(feelpp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-testing)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-jessie)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": "14.04.3", "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version ubuntu-14.04.3)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": "10.9.2", "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version macosx-mavericks-10.9.2)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["uname"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/ctest.cmake", "content": "find_program(uname names uname)"}, {"filenames": ["make"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/ctest.cmake", "content": "find_program(make names make)"}]}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components date_time)", "confidence": "High"}, {"depname": "petsc", "version": null, "version_op": null, "unified_name": "petsc", "extractor_type": "cmake", "context": "find_package(petsc)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["uname"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/testsuite.cmake", "content": "find_program(uname names uname)"}, {"filenames": ["hostname"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/testsuite.cmake", "content": "find_program(hostname_cmd names hostname)"}, {"filenames": ["git"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/testsuite.cmake", "content": "find_program(ctest_git_command names git)"}, {"filenames": ["\"cmake\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/dashboard/testsuite.cmake", "content": "find_program(ctest_cmake_command names \"cmake\")"}]}, {"deps": [{"depname": "os", "version": null, "version_op": null, "unified_name": "os", "extractor_type": "cmake", "context": "set(os_version debian-sid)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gfortran"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/machines/feelpp.machines.curie.cmake", "content": "find_library(gfortran_library\n    names\n    gfortran\n    paths\n    /usr/local/gcc-4.9.1/lib64\n    $env{library_path}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gfortran"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/machines/feelpp.machines.lrz.cmake", "content": "find_library(gfortran_library\n    names\n    gfortran\n    paths\n    /lrz/sys/compilers/gcc/$env{gccversion}/lib64/\n    $env{library_path}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["nlopt", "nlopt_cxx"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/ATTIC_FindNLOpt.cmake", "content": "find_library ( nlopt_library\n  names\n    nlopt\n    nlopt_cxx\n  doc\n    \"nlopt library location\"\n)"}]}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "find_package(gmp)", "confidence": "High"}, {"depname": "gmm", "version": null, "version_op": null, "unified_name": "gmm", "extractor_type": "cmake", "context": "find_package(gmm)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 components c)", "confidence": "High"}, {"depname": "xdmf", "version": null, "version_op": null, "unified_name": "xdmf", "extractor_type": "cmake", "context": "find_package(xdmf)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter development)", "confidence": "High"}, {"depname": "mpi4py", "version": null, "version_op": null, "unified_name": "mpi4py", "extractor_type": "cmake", "context": "find_package(mpi4py)", "confidence": "High"}, {"depname": "petsc4py", "version": null, "version_op": null, "unified_name": "petsc4py", "extractor_type": "cmake", "context": "find_package(petsc4py)", "confidence": "High"}, {"depname": "boost", "version": "1.65.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.65.0 required components ${boost_components_required})", "confidence": "High"}, {"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "find_package(fftw)", "confidence": "High"}, {"depname": "harts", "version": null, "version_op": null, "unified_name": "harts", "extractor_type": "cmake", "context": "find_package( harts )", "confidence": "High"}, {"depname": "ann", "version": null, "version_op": null, "unified_name": "ann", "extractor_type": "cmake", "context": "find_package(ann)", "confidence": "High"}, {"depname": "glpk", "version": null, "version_op": null, "unified_name": "glpk", "extractor_type": "cmake", "context": "find_package(glpk)", "confidence": "High"}, {"depname": "googleperftools", "version": null, "version_op": null, "unified_name": "googleperftools", "extractor_type": "cmake", "context": "find_package(googleperftools)", "confidence": "High"}, {"depname": "ddt", "version": null, "version_op": null, "unified_name": "ddt", "extractor_type": "cmake", "context": "find_package(ddt)", "confidence": "High"}, {"depname": "libxml2", "version": "2.6.27", "version_op": null, "unified_name": "xml2", "extractor_type": "cmake", "context": "find_package(libxml2 2.6.27)", "confidence": "High"}, {"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "find_package(scotch)", "confidence": "High"}, {"depname": "ml", "version": null, "version_op": null, "unified_name": "ml", "extractor_type": "cmake", "context": "find_package(ml)", "confidence": "High"}, {"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "find_package(mumps)", "confidence": "High"}, {"depname": "slepc", "version": null, "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "find_package( slepc )", "confidence": "High"}, {"depname": "trilinos", "version": null, "version_op": null, "unified_name": "trilinos", "extractor_type": "cmake", "context": "find_package(trilinos)", "confidence": "High"}, {"depname": "openturns", "version": null, "version_op": null, "unified_name": "openturns", "extractor_type": "cmake", "context": "find_package( openturns )", "confidence": "High"}, {"depname": "paraview", "version": null, "version_op": null, "unified_name": "paraview", "extractor_type": "cmake", "context": "find_package(paraview quiet no_module\n      paths $env{paraview_dir} ${machine_paraview_dir} )", "confidence": "High"}, {"depname": "paraview", "version": null, "version_op": null, "unified_name": "paraview", "extractor_type": "cmake", "context": "find_package(paraview quiet components vtkparallelmpi no_module\n         paths $env{paraview_dir} ${machine_paraview_dir} )", "confidence": "High"}, {"depname": "paraview", "version": null, "version_op": null, "unified_name": "paraview", "extractor_type": "cmake", "context": "find_package(paraview components vtkpvcatalyst no_module\n          paths $env{paraview_dir} ${machine_paraview_dir} )", "confidence": "High"}, {"depname": "paraview", "version": null, "version_op": null, "unified_name": "paraview", "extractor_type": "cmake", "context": "find_package(paraview components vtkpvpythoncatalyst no_module\n          paths $env{paraview_dir} ${machine_paraview_dir} )", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk quiet)", "confidence": "High"}, {"depname": "octave", "version": null, "version_op": null, "unified_name": "octave", "extractor_type": "cmake", "context": "find_package(octave)", "confidence": "High"}, {"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "find_package(gsl)", "confidence": "High"}, {"depname": "gmsh", "version": null, "version_op": null, "unified_name": "gmsh", "extractor_type": "cmake", "context": "find_package(gmsh)", "confidence": "High"}, {"depname": "gmsh", "version": null, "version_op": null, "unified_name": "gmsh", "extractor_type": "cmake", "context": "find_package(gmsh required)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package( curl )", "confidence": "High"}, {"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "find_package(cln)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "                    set( hdf5_version ${hdf5_version}.${cmake_match_3})", "confidence": "Low"}, {"depname": "boost_min", "version": "1.65.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "set(boost_min_version \"1.65.0\")", "confidence": "Low"}, {"depname": "boost_filesystem", "version": "3", "version_op": null, "unified_name": "boost_filesystem", "extractor_type": "cmake", "context": "set( boost_filesystem_version 3)", "confidence": "Low"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists (dl dlopen \"\" feelpp_has_libdl)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gfortran"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(gfortran_library\n    names\n    gfortran\n    paths\n    $env{ld_library_path}\n    /opt/local/lib\n    /usr/lib/gcc/x86_64-linux-gnu/\n    path_suffixes\n    gcc6 gcc5 gcc49 gcc48 gcc47 gcc46 gcc45 gcc44 4.7 4.6 4.5 4.4\n    )"}, {"filenames": ["suitesparseconfig"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(suitesparseconfig_library\n      names\n      suitesparseconfig\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      )"}, {"filenames": ["amd"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(amd_library\n      names\n      amd\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      )"}, {"filenames": ["colamd"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(colamd_library\n      names\n      colamd\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      )"}, {"filenames": ["cholmod"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(cholmod_library\n      names\n      cholmod\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      )"}, {"filenames": ["umfpack"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(umfpack_library\n      names\n      umfpack\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      )"}, {"filenames": ["yaml"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(yaml_library\n      names\n      yaml\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      $env{suitesparse_dir}/lib\n      /opt/local/lib\n      )"}, {"filenames": ["parpack"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(parpack_library names parpack)"}, {"filenames": ["feelpp_nlopt"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_nlopt_library feelpp_nlopt paths $env{feelpp_dir}/lib /usr/lib /usr/lib/feel/lib /opt/feel/lib /usr/ljk/lib )"}, {"filenames": ["feelpp_ipopt"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_ipopt_library feelpp_ipopt feelpp_ipoptfort paths $env{feelpp_dir}/lib /usr/lib /usr/lib/feel/lib /opt/feel/lib /usr/ljk/lib )"}, {"filenames": ["feelpp_kwsys"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_kwsys_library feelpp_kwsys paths $env{feelpp_dir}/lib /usr/lib /usr/lib/feel/lib /opt/feel/lib /usr/ljk/lib )"}, {"filenames": ["feelpp_ginac"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_ginac_library feelpp_ginac paths $env{feelpp_dir}/lib /usr/lib /usr/lib/feel/lib /opt/feel/lib /usr/ljk/lib )"}, {"filenames": ["feelpp"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_library feelpp paths $env{feelpp_dir}/lib no_default_path)"}, {"filenames": ["feelpp"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_library(feelpp_library feelpp )"}, {"filenames": ["lsb_release"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_program(lsb_release_exec lsb_release)"}, {"filenames": ["mo2fmu"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_program(feelpp_mo2fmu mo2fmu hints \"$env{home}/.local/bin\" paths \"$env{home}/.local/bin\")"}, {"filenames": ["octave-config"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.dependencies.cmake", "content": "find_program(octave_config octave-config)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "asciidoctor", "version": null, "version_op": null, "unified_name": "asciidoctor", "extractor_type": "cmake", "context": "find_package(asciidoctor)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi4py", "version": null, "version_op": null, "unified_name": "mpi4py", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindMPI4PY.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGINAC.cmake", "confidence": "High"}, {"depname": "cln", "version": "1.3.2", "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "find_package(cln 1.3.2)", "confidence": "High"}, {"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake", "context": "\tset(ginac_version ${ginaclib_major_version}.${ginaclib_minor_version}.${ginaclib_micro_version})", "confidence": "Low"}, {"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ginac ginac)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libginac", "ginac"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGINAC.cmake", "content": "find_library(_ginac_lib names libginac ginac\n\t\t\t\t\thints ${_ginac_library_dirs}\n\t\t\t\t\t      $env{ginac_dir}/lib)"}]}, {"deps": [{"depname": "trilinos", "version": null, "version_op": null, "unified_name": "trilinos", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "confidence": "High"}, {"depname": "expat", "version": null, "version_op": null, "unified_name": "expat", "extractor_type": "cmake", "context": "find_package(expat)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["trilinos_teuchos", "teuchos"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_teuchos   names trilinos_teuchos teuchos     paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_epetra", "epetra"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_epetra    names trilinos_epetra epetra       paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_epetraext", "epetraext"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_epetraext names trilinos_epetraext epetraext paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_triutils", "triutils"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_triutils  names trilinos_triutils triutils   paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_aztecoo", "aztecoo"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_aztecoo   names trilinos_aztecoo aztecoo     paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_amesos", "amesos"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_amesos    names trilinos_amesos amesos       paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_ifpack", "ifpack"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_ifpack    names trilinos_ifpack ifpack       paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_ml", "ml"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_ml        names trilinos_ml ml               paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_galeri", "galeri"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_galeri    names trilinos_galeri galeri       paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_nox", "nox"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_nox       names trilinos_nox nox             paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}, {"filenames": ["trilinos_noxepetra", "noxepetra"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTrilinos.cmake", "content": "find_library(trilinos_lib_noxepetra names trilinos_noxepetra noxepetra paths /usr/lib /opt/trilinos/lib /usr/ljk/lib $env{trilinos_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "harts", "version": null, "version_op": null, "unified_name": "harts", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindHARTS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_lib}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindHARTS.cmake", "content": "find_library(lib_sub_${_lib} ${_lib})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "octave", "version": null, "version_op": null, "unified_name": "octave", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindOctave.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["octinterp", "liboctinterp"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOctave.cmake", "content": "find_library(octave_octinterp_library\n              names octinterp liboctinterp\n              hints ${octave_libraries_paths}\n          )"}, {"filenames": ["octave", "liboctave"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOctave.cmake", "content": "find_library(octave_octave_library\n              names octave liboctave\n              hints ${octave_libraries_paths}\n          )"}, {"filenames": ["cruft", "libcruft"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOctave.cmake", "content": "find_library(octave_cruft_library\n              names cruft libcruft\n              hints ${octave_libraries_paths}\n          )"}, {"filenames": ["octave-config"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOctave.cmake", "content": "find_program(octave_config_executable\n              names octave-config\n          )"}]}, {"deps": [{"depname": "ann", "version": null, "version_op": null, "unified_name": "ann", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindANN.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ann"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindANN.cmake", "content": "find_library( ann_lib ann ann paths /usr/lib /opt/local/lib  $env{ann_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagemultipass", "version": null, "version_op": null, "unified_name": "packagemultipass", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindPackageMultipass.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3", "version": "3", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 ${eigen3_find_version} no_module quiet)", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "googleperftools", "version": null, "version_op": null, "unified_name": "googleperftools", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGooglePerfTools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${tcmalloc_names}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGooglePerfTools.cmake", "content": "find_library(tcmalloc_library\n  names ${tcmalloc_names}\n  paths /usr/lib /usr/local/lib /opt/local/lib\n  )"}, {"filenames": ["${stacktrace_names}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGooglePerfTools.cmake", "content": "find_library(stacktrace_library\n  names ${stacktrace_names}\n  paths /opt/local/lib /usr/lib /usr/local/lib\n  )"}, {"filenames": ["${profiler_names}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGooglePerfTools.cmake", "content": "find_library(profiler_library\n  names ${profiler_names}\n  paths /opt/local/lib /usr/lib /usr/local/lib\n  )"}]}, {"deps": [{"depname": "cotire_cmake_module", "version": "1.7.9", "version_op": null, "unified_name": "cotire_cmake_module", "extractor_type": "cmake", "context": "set (cotire_cmake_module_version \"1.7.9\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmm", "version": null, "version_op": null, "unified_name": "gmm", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGMM.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["feelpp_glog"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/ATTIC_FindGLOG.cmake", "content": "find_library(glog_library\n    names feelpp_glog\n    paths\n    ${cmake_binary_dir}/contrib/glog/lib64/\n    ${cmake_binary_dir}/contrib/glog/lib/\n    $env{feelpp_dir}/lib\n    no_default_path\n    )"}]}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGFLAGS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["feelpp_gflags"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGFLAGS.cmake", "content": "find_library(gflags_library\n    names feelpp_gflags\n    paths\n    ${cmake_binary_dir}/contrib/gflags/lib64/\n    ${cmake_binary_dir}/contrib/gflags/lib/\n    no_default_path\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["astyle"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.extra.astyle.cmake", "content": "find_program(astyle astyle\n  hints\n  \n  /opt/local/bin )"}]}, {"deps": [{"depname": "openturns", "version": null, "version_op": null, "unified_name": "openturns", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindOpenTURNS.cmake", "confidence": "High"}, {"depname": "libxml2", "version": null, "version_op": null, "unified_name": "xml2", "extractor_type": "cmake", "context": "find_package(libxml2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ot"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOpenTURNS.cmake", "content": "find_library (openturns_library\n      names\n        ot\n      paths\n        /usr/lib\n        /usr/local/lib\n        /opt/local/lib\n        /sw/lib\n      path_suffixes\n        openturns\n      doc\n        \"openturns library location\"\n    )"}, {"filenames": ["otbind"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOpenTURNS.cmake", "content": "find_library (openturns_bind_library\n      names\n        otbind\n      paths\n        /usr/lib\n        /usr/local/lib\n        /opt/local/lib\n        /sw/lib\n      path_suffixes\n        openturns\n      doc\n        \"openturns bind library location\"\n    )"}, {"filenames": ["openturns-config"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOpenTURNS.cmake", "content": "find_program(ot_config openturns-config quiet)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glpk", "version": null, "version_op": null, "unified_name": "glpk", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGLPK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glpk"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGLPK.cmake", "content": "find_library( glpk_lib glpk paths /usr/lib $env{glpk_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "slepc", "version": null, "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindSLEPc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["slepc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindSLEPc.cmake", "content": "find_library(slepc_lib_slepc slepc\n  hints\n  ${slepc_dir}/${petsc_arch}/lib\n  ${slepc_dir}/lib )"}]}, {"deps": [{"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "find_package(latex)", "confidence": "High"}, {"depname": "unixcommands", "version": null, "version_op": null, "unified_name": "unixcommands", "extractor_type": "cmake", "context": "find_package(unixcommands)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["name"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/UseLATEX.cmake", "content": "find_program(xindy_compiler\n    name xindy\n    paths ${miktex_binary_path} /usr/bin\n    )"}, {"filenames": ["pdftops"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/UseLATEX.cmake", "content": "find_program(pdftops_converter\n    names pdftops\n    doc \"the pdf to ps converter program from the poppler package.\"\n    )"}, {"filenames": ["convert"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/UseLATEX.cmake", "content": "find_program(imagemagick_convert convert\n    doc \"the convert program that comes with imagemagick (available at http://www.imagemagick.org).\"\n    )"}]}, {"deps": [{"depname": "\"petsc", "version": "3.7.0\"", "version_op": ">=", "unified_name": "\"petsc", "extractor_type": "cmake::pkg", "context": "pkg_search_module(petsc required imported_target \"petsc>=3.7.0\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindMUMPS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mumps_common"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMUMPS.cmake", "content": "find_library(mumps_common_library\n    names\n    mumps_common\n    paths\n    $env{petsc_dir}/lib\n    $env{petsc_dir}/$env{petsc_arch}/lib\n    $env{mumps_dir}/lib\n)"}, {"filenames": ["dmumps"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMUMPS.cmake", "content": "find_library(dmumps_library\n    names\n    dmumps\n    paths\n    $env{petsc_dir}/lib\n    $env{petsc_dir}/$env{petsc_arch}/lib\n    $env{mumps_dir}/lib\n)"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}, {"depname": "mkl", "version": "1011", "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "  set(mkl_version 1011)", "confidence": "Low"}, {"depname": "mkl", "version": "900", "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "  set(mkl_version 900)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(${libraries}_${_library}_library names ${_library})"}, {"filenames": ["${_library}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(${libraries}_${_library}_library names ${_library})"}, {"filenames": ["\"mkl_lapack${mkl64}${mkls}\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_lapack_libraries names \"mkl_lapack${mkl64}${mkls}\")"}, {"filenames": ["\"mkl_scalapack${mkl64}${mkls}\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_scalapack_libraries names \"mkl_scalapack${mkl64}${mkls}\")"}, {"filenames": ["\"mkl_solver${mkl64}${mkls}\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_solver_libraries names \"mkl_solver${mkl64}${mkls}\")"}, {"filenames": ["\"mkl_cdft${mkl64}${mkls}\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMKL.cmake", "content": "find_library(mkl_cdft_libraries names \"mkl_cdft${mkl64}${mkls}\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmilib", "version": null, "version_op": null, "unified_name": "fmilib", "extractor_type": "cmake", "context": "find_package( fmilib )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ml", "version": null, "version_op": null, "unified_name": "ml", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ml"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindML.cmake", "content": "find_library(ml_library names ml\n    paths\n    $env{petsc_dir}/lib\n    $env{petsc_dir}/$env{petsc_arch}/lib\n    ${petsc_dir}/lib\n    no_default_path\n    )"}, {"filenames": ["ml"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindML.cmake", "content": "find_library(ml_library names ml\n      paths\n      /opt/local/lib/petsc/lib\n    )"}, {"filenames": ["trilinos_ml"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindML.cmake", "content": "find_library(ml_library names trilinos_ml)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cling", "version": null, "version_op": null, "unified_name": "cling", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindCling.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cling"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCling.cmake", "content": "find_library(cling_libraries cling\n    hints\n    $env{cling_prefix}/lib\n    ${cling_prefix}/lib\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    no_default_path\n)"}, {"filenames": ["cling"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCling.cmake", "content": "find_program(cling_bin cling\n    hints\n    ${cling_prefix}/bin\n    $path\n    cmake_system_program_path\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindReadline.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["readline"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindReadline.cmake", "content": "find_library(readline_library names readline paths /opt/local/lib/ no_default_path)"}, {"filenames": ["readline"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindReadline.cmake", "content": "find_library(readline_library names readline path_suffixes x86_64-linux-gnu)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${token}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/ResolveCompilerPaths.cmake", "content": "find_library (_lib ${token} hints ${_directory_list} ${_root})"}]}, {"deps": [{"depname": "eigen2", "version": null, "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindEigen2.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "\"fftw3\"", "version": null, "version_op": null, "unified_name": "\"fftw3\"", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pkg_fftw quiet \"fftw3\" )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"fftw3\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3_mpi\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftw_mpi_lib\n    names \"fftw3_mpi\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3_mpi\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftw_mpi_lib\n    names \"fftw3_mpi\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindCLN.cmake", "confidence": "High"}, {"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "\tset(cln_version ${cln_version_major}.${cln_version_minor}.${cln_version_patchlevel})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["cln"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCLN.cmake", "content": "find_library(cln_library cln\n  hints\n  $env{cln_dir}/lib\n)"}, {"filenames": ["cln", "feelpp_cln"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCLN.cmake", "content": "find_library(cln_library\n    names cln feelpp_cln\n    hints\n    $env{cln_dir}/lib  \n    $env{feelpp_dir}/lib\n    ${cmake_binary_dir}/contrib/cln/lib/\n    no_default_path\n  )"}, {"filenames": ["cln", "feelpp_cln"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCLN.cmake", "content": "find_library(cln_library  names cln feelpp_cln  paths  $env{cln_dir}/lib no_default_path  )"}, {"filenames": ["cln", "feelpp_cln"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindCLN.cmake", "content": "find_library(cln_library\n        names cln feelpp_cln\n        paths\n        $env{cln_dir}/lib  \n        $env{feelpp_dir}/lib\n        ${cmake_binary_dir}/contrib/cln/lib/\n        no_default_path\n        )"}]}, {"deps": [{"depname": "fmilib", "version": null, "version_op": null, "unified_name": "fmilib", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindFMILib.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fmilib_shared"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFMILib.cmake", "content": "find_library( fmilib_libraries fmilib_shared\n  paths ${fmilib_dir}/lib $env{fmilib_dir}/lib/\n  )"}]}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "find_package(latex)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["make"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/UseDoxygen.cmake", "content": "find_program(doxyfile_make make)"}]}, {"deps": [{"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${scotch_lib}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n      names ${scotch_lib}\n      hints ${scotch_libdir})"}, {"filenames": ["${scotch_lib}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n\tnames ${scotch_lib}\n\thints ${scotch_dir}\n\tpath_suffixes lib lib32 lib64)"}, {"filenames": ["${scotch_lib}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n\tnames ${scotch_lib}\n\thints ${_lib_env})"}, {"filenames": ["z"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(z_library names z)"}, {"filenames": ["m"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(m_library names m)"}, {"filenames": ["rt"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindScotch.cmake", "content": "find_library(rt_library names rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ruby", "version": "2.1", "version_op": null, "unified_name": "ruby", "extractor_type": "cmake", "context": "find_package(ruby 2.1 quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGMP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gmp"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGMP.cmake", "content": "find_library( gmp_lib gmp paths $env{gmp_dir}/lib $env{gmp_lib} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "find_package(cln)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["parmetis"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/contrib.dependencies.cmake", "content": "find_library(parmetis_library\n      names\n      parmetis\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindMetis.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["metis"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMetis.cmake", "content": "find_library(metis_metis_library\n    names metis\n    hints ${metis_libdir})"}, {"filenames": ["metis"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMetis.cmake", "content": "find_library(metis_metis_library\n      names metis\n      hints ${metis_dir}\n      path_suffixes lib lib32 lib64)"}, {"filenames": ["metis"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMetis.cmake", "content": "find_library(metis_metis_library\n      names metis\n      hints ${_lib_env})"}, {"filenames": ["m"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMetis.cmake", "content": "find_library(m_library names m)"}]}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindFeel++.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["feelpp"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindFeel++.cmake", "content": "find_library(feelpp_libraries feelpp\n    hints\n    $env{feelpp_dir}/lib\n    /usr/lib\n    /usr/local/lib\n    /opt/local/lib\n    no_default_path\n)"}]}, {"deps": [{"depname": "omc", "version": null, "version_op": null, "unified_name": "omc", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindOMC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["omcgc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOMC.cmake", "content": "find_library( omcgc_library omcgc\n  paths ${omc_dir}/lib /usr/lib/\n  path_suffixes omc x86_64-linux-gnu/omc\n  )"}, {"filenames": ["simulationruntimec"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOMC.cmake", "content": "find_library( simulationruntimec_library simulationruntimec\n  paths ${omc_dir}/lib /usr/lib/\n  path_suffixes omc x86_64-linux-gnu/omc\n  )"}, {"filenames": ["omc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindOMC.cmake", "content": "find_program( omc_compiler omc\n  path ${omc_dir}/bin /usr/bin\n  )"}]}, {"deps": [{"depname": "berkeleydb", "version": null, "version_op": null, "unified_name": "berkeleydb", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindBerkeleyDB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["db_cxx"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindBerkeleyDB.cmake", "content": "find_library(berkeley_db_libraries names db_cxx )"}]}, {"deps": [{"depname": "asciidoctor", "version": null, "version_op": null, "unified_name": "asciidoctor", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindAsciidoctor.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["asciidoctor"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindAsciidoctor.cmake", "content": "find_program( asciidoctor_executable\n  names asciidoctor\n  paths\n  $env{asciidoctor_dir}/bin\n  path_suffixes bin\n  doc \"asciidoctor\"\n  no_default_path\n  )"}, {"filenames": ["asciidoctor-pdf"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindAsciidoctor.cmake", "content": "find_program( asciidoctor_pdf_executable\n  names asciidoctor-pdf\n  paths\n  $env{asciidoctor_dir}/bin\n  path_suffixes bin\n  doc \"asciidoctor pdf\"\n  no_default_path\n  )"}, {"filenames": ["asciidoctor"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindAsciidoctor.cmake", "content": "find_program( asciidoctor_executable\n  names asciidoctor\n  paths\n  $env{asciidoctor_dir}/bin\n  path_suffixes bin\n  doc \"asciidoctor\" )"}, {"filenames": ["asciidoctor-pdf"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindAsciidoctor.cmake", "content": "find_program( asciidoctor_pdf_executable\n    names asciidoctor-pdf\n    paths\n    $env{asciidoctor_dir}/bin\n    path_suffixes bin\n    doc \"asciidoctor pdf\" )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmsh", "version": null, "version_op": null, "unified_name": "gmsh", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gmsh", "gmsh", "gmsh-2.5.1", "gmsh1"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(gmsh_library names gmsh gmsh gmsh-2.5.1 gmsh1\n    hints\n    ${gmsh_dir}\n    $env{gmsh_dir}\n    \n    no_default_path\n    path_suffixes\n    lib lib/x86_64-linux-gnu/ )"}, {"filenames": ["gmsh", "gmsh", "gmsh-2.5.1", "gmsh1"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(gmsh_library names gmsh gmsh gmsh-2.5.1 gmsh1\n    path_suffixes\n    lib lib/x86_64-linux-gnu/ )"}, {"filenames": ["gl2ps", "path", "$env{gmsh_dir}", "${cmake_binary_dir}/contrib/gmsh/lib", "${cmake_system_prefix_path}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(gl2ps_library names gl2ps\n      path\n      $env{gmsh_dir}\n      ${cmake_binary_dir}/contrib/gmsh/lib\n      ${cmake_system_prefix_path}\n      path_suffixes\n      lib  )"}, {"filenames": ["gl", "path", "$env{gmsh_dir}", "${cmake_binary_dir}/contrib/gmsh/"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(gl_library names gl\n      path\n      $env{gmsh_dir}\n      ${cmake_binary_dir}/contrib/gmsh/\n      path_suffixes\n      lib  )"}, {"filenames": ["med"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(med_lib med)"}, {"filenames": ["medc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(medc_lib medc)"}, {"filenames": ["cgns"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_library(cgns_lib cgns)"}, {"filenames": ["gmsh"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindGmsh.cmake", "content": "find_program( gmsh_executable\n  names gmsh\n  hints\n  ${gmsh_dir}\n  $env{gmsh_dir}\n\n  path_suffixes bin\n  doc \"gmsh mesh generator\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libbson", "version": null, "version_op": null, "unified_name": "bson", "extractor_type": "cmake", "context": "find_package(libbson ${bson_min_version_required})", "confidence": "High"}, {"depname": "libmongoc", "version": null, "version_op": null, "unified_name": "mongoc", "extractor_type": "cmake", "context": "find_package(libmongoc ${mongoc_min_version_required} )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ddt", "version": null, "version_op": null, "unified_name": "ddt", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindDDT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dmalloc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindDDT.cmake", "content": "find_library(ddt_dmalloc_library\n  names dmalloc\n  paths\n  /opt/allinea/forge/lib\n  /opt/allinea/tools/lib\n  path_suffixes\n  64\n  )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["adb"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_adb_library names adb paths ${acusim_library_dir} no_default_path)"}, {"filenames": ["cci"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_cci_library names cci paths ${acusim_library_dir} no_default_path)"}, {"filenames": ["eco"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_eco_library names eco paths ${acusim_library_dir} no_default_path)"}, {"filenames": ["frm"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_frm_library names frm paths ${acusim_library_dir} no_default_path)"}, {"filenames": ["h3dreader"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_h3dreader_library names h3dreader paths ${acusim_base_dir}/bin/ no_default_path )"}, {"filenames": ["h3dwriter"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_h3dwriter_library names h3dwriter paths ${acusim_base_dir}/bin/ no_default_path )"}, {"filenames": ["intlc"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/feelpp.module.altair.cmake", "content": "find_library(acusim_intlc_library names intlc paths ${acusim_base_dir}/bin/ no_default_path )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindTBB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindTBB.cmake", "content": "find_library(tbb_library tbb paths $env{tbb_lib_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "petsc4py", "version": null, "version_op": null, "unified_name": "petsc4py", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindPETSC4PY.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonmodules", "version": null, "version_op": null, "unified_name": "pythonmodules", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindPythonModules.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "madlib", "version": null, "version_op": null, "unified_name": "madlib", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/cmake/modules/FindMadLib.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["madlib"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/cmake/modules/FindMadLib.cmake", "content": "find_library(madlib_library madlib\n  /usr/lib\n  /usr/local/lib\n  )"}]}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "find_package(fmt required)", "confidence": "High"}, {"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "find_package(cln required)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config required)", "confidence": "High"}, {"depname": "libbson", "version": "1.5.0", "version_op": null, "unified_name": "bson", "extractor_type": "cmake", "context": "find_package(libbson 1.5.0)", "confidence": "High"}, {"depname": "libmongoc", "version": "1.5.0", "version_op": null, "unified_name": "mongoc", "extractor_type": "cmake", "context": "find_package(libmongoc 1.5.0 )", "confidence": "High"}, {"depname": "libbson_required", "version": "1.5.0", "version_op": null, "unified_name": "bson_required", "extractor_type": "cmake", "context": "    set(libbson_required_version 1.5.0)", "confidence": "Low"}, {"depname": "libmongoc_required", "version": "1.5.0", "version_op": null, "unified_name": "mongoc_required", "extractor_type": "cmake", "context": "    set(libmongoc_required_version 1.5.0)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["parmetis"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/CMakeLists.txt", "content": "find_library(parmetis_library\n      names\n      parmetis\n      paths\n      $env{petsc_dir}/lib\n      $env{petsc_dir}/$env{petsc_arch}/lib\n      )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["wget"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/gmsh/CMakeLists.txt", "content": "find_program(wget names wget )"}]}, {"deps": [{"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "project(parmetis)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ginac", "version": "1.7.1", "version_op": null, "unified_name": "ginac", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/ginac/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "GiNaC", "version": "ginac_version", "version_op": null, "unified_name": "ginac", "extractor_type": "autoconf", "context": "AC_INIT([GiNaC], ginac_version, [ginac-list@ginac.de], [ginac], [http://www.ginac.de/])", "confidence": ""}], "type": "autoconf"}, {"deps": [{"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package(bison)", "confidence": "High"}, {"depname": "flex", "version": null, "version_op": null, "unified_name": "flex", "extractor_type": "cmake", "context": "find_package(flex)", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "find_package(readline)", "confidence": "High"}, {"depname": "libdl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "find_package(libdl)", "confidence": "High"}, {"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake", "context": "project(ginac)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["makeinfo"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/CMakeLists.txt", "content": "find_program(makeinfo makeinfo)"}, {"filenames": ["fig2dev"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/CMakeLists.txt", "content": "find_program(fig2dev fig2dev)"}]}, {"deps": [], "type": "make"}, {"deps": [{"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindGiNaC.cmake", "confidence": "High"}, {"depname": "cln", "version": "1.2.2", "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "find_package(cln 1.2.2)", "confidence": "High"}, {"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake", "context": "\tset(ginac_version ${ginaclib_major_version}.${ginaclib_minor_version}.${ginaclib_micro_version})", "confidence": "Low"}, {"depname": "ginac", "version": null, "version_op": null, "unified_name": "ginac", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ginac ginac)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libginac", "ginac"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindGiNaC.cmake", "content": "find_library(_ginac_lib names libginac ginac\n\t\t\t\t\thints ${_ginac_library_dirs}\n\t\t\t\t\t      $env{ginac_dir}/lib)"}]}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindReadline.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libreadline", "readline"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindReadline.cmake", "content": "find_library(readline_libraries names libreadline readline)"}]}, {"deps": [{"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindCLN.cmake", "confidence": "High"}, {"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake", "context": "\tset(cln_version ${cln_version_major}.${cln_version_minor}.${cln_version_patchlevel})", "confidence": "Low"}, {"depname": "cln", "version": null, "version_op": null, "unified_name": "cln", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_cln cln)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libcln", "cln"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindCLN.cmake", "content": "find_library(cln_libraries names libcln cln\n\t\t\t   hints ${_cln_library_dir}\n\t\t\t         ${_cln_library_dirs}\n\t\t\t\t $env{cln_dir}/lib)"}]}, {"deps": [{"depname": "libdl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindLibDL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libdl_names}"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/cmake/modules/FindLibDL.cmake", "content": "find_library(libdl_library names ${libdl_names} )"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["python"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/ginac/CMakeLists.txt", "content": "find_program(ginac_python_executable names python)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "find_package(latex)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fig2dev"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/doc/CMakeLists.txt", "content": "find_program(fig2dev fig2dev)"}, {"filenames": ["texi2dvi"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/ginac/doc/CMakeLists.txt", "content": "find_program(texi2dvi texi2dvi)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "bazel"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "feelpp_gflags", "version": null, "version_op": null, "unified_name": "feelpp_gflags", "extractor_type": "cmake", "context": "project (feelpp_gflags cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package (pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package (gflags required)", "confidence": "High"}, {"depname": "gflags_", "version": null, "version_op": null, "unified_name": "gflags_", "extractor_type": "cmake", "context": "project (gflags_${test_name})", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package (gflags required)", "confidence": "High"}, {"depname": "gflags_", "version": null, "version_op": null, "unified_name": "gflags_", "extractor_type": "cmake", "context": "project (gflags_${test_name})", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "project(metis)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gklib", "version": null, "version_op": null, "unified_name": "gklib", "extractor_type": "cmake", "context": "project(gklib)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glog", "version": "0.3.4", "version_op": null, "unified_name": "glog", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/glog/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "glog", "version": "0.3.4", "version_op": null, "unified_name": "glog", "extractor_type": "autoconf", "context": "AC_INIT(glog, 0.3.4, opensource@google.com)", "confidence": ""}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/glog/configure.ac", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/glog/configure.ac", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/glog/configure.ac", "confidence": "High"}, {"depname": "unwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "autoconf", "context": "feelpp@@feelpp/feelpp/contrib/glog/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "google", "version": null, "version_op": null, "unified_name": "google", "extractor_type": "cmake", "context": "project (google-glog)", "confidence": ""}, {"depname": "unwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "check_library_exists (unwind get_static_proc_name \"\" have_lib_unwind)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["unwind"], "version": "", "fromfile": "feelpp@@feelpp/feelpp/contrib/glog/CMakeLists.txt", "content": "find_library (unwind_library names unwind doc \"unwind library\")"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "debhelper", "version": "=4.0.0", "version_op": null, "unified_name": "debhelper", "extractor_type": "control", "context": "feelpp@@feelpp/feelpp/contrib/glog/packages/deb/control", "confidence": "High"}, {"depname": "binutils", "version": "", "version_op": null, "unified_name": "binutils", "extractor_type": "control", "context": "feelpp@@feelpp/feelpp/contrib/glog/packages/deb/control", "confidence": "High"}], "type": "control"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "autoconf"}, {"deps": [{"depname": "feel++", "version": null, "version_op": null, "unified_name": "feel++", "extractor_type": "cmake", "context": "find_package(feel++ paths ${feelpp_dir}/share/feelpp/feel/cmake/modules $env{feelpp_dir}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )", "confidence": "High"}, {"depname": "quickstart", "version": null, "version_op": null, "unified_name": "quickstart", "extractor_type": "cmake", "context": "project(quickstart)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "cmake", "context": "project(mesh)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}