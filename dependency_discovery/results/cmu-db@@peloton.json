{"target": "cmu-db@@peloton", "extractors": [{"deps": [{"depname": "peloton", "version": null, "version_op": null, "unified_name": "peloton", "extractor_type": "cmake", "context": "project(peloton cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package( protobuf required)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "  set(protobuf_version \"${cmake_match_1}.${cmake_match_2}.${cmake_match_3}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "peloton_git", "version": null, "version_op": null, "unified_name": "peloton_git", "extractor_type": "cmake", "context": "  set(peloton_git_version \"unknown\")", "confidence": "Low"}, {"depname": "peloton_git", "version": null, "version_op": null, "unified_name": "peloton_git", "extractor_type": "cmake", "context": "      set(peloton_git_version \"unknown\")", "confidence": "Low"}, {"depname": "peloton_git", "version": null, "version_op": null, "unified_name": "peloton_git", "extractor_type": "cmake", "context": "\n  set(peloton_git_version unknown parent_scope)", "confidence": "Low"}, {"depname": "peloton", "version": null, "version_op": null, "unified_name": "peloton", "extractor_type": "cmake", "context": "  set(peloton_version \"<todo> (peloton doesn't declare its version in headers)", "confidence": "Low"}, {"depname": "peloton", "version": null, "version_op": null, "unified_name": "peloton", "extractor_type": "cmake", "context": "  set(peloton_version ${peloton_version} parent_scope)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": "1.46", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.46 required components system filesystem thread)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "libevent", "version": null, "version_op": null, "unified_name": "event", "extractor_type": "cmake", "context": "find_package(libevent required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "find_package(jemalloc)", "confidence": "High"}, {"depname": "pqxx", "version": null, "version_op": null, "unified_name": "pqxx", "extractor_type": "cmake", "context": "find_package(pqxx required)", "confidence": "High"}, {"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm required config)", "confidence": "High"}, {"depname": "libffi", "version": null, "version_op": null, "unified_name": "ffi", "extractor_type": "cmake", "context": "find_package(libffi)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tensorflow"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Dependencies.cmake", "content": "find_library(tflowc\n        names tensorflow\n        paths \"/usr/local/lib\")"}, {"filenames": ["\"${project_source_dir}/third_party/iwyu/iwyu_tool.py\""], "version": "", "fromfile": "cmu-db@@peloton/cmake/Dependencies.cmake", "content": "find_program(iwyu_tool_path names \"${project_source_dir}/third_party/iwyu/iwyu_tool.py\")"}]}, {"deps": [{"depname": "compiler", "version": "3.7.0", "version_op": null, "unified_name": "compiler", "extractor_type": "cmake", "context": "  set(compiler_version \"3.7.0svn\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "capnproto", "version": "0.6.1", "version_op": null, "unified_name": "capnproto", "extractor_type": "cmake", "context": "find_package(capnproto 0.6.1 quiet)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindGFlags.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libgflags"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGFlags.cmake", "content": "find_library(gflags_library_release\n        names libgflags\n        paths ${gflags_root_dir}\n        path_suffixes release)"}, {"filenames": ["libgflags-debug"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGFlags.cmake", "content": "find_library(gflags_library_debug\n        names libgflags-debug\n        paths ${gflags_root_dir}\n        path_suffixes debug)"}, {"filenames": ["gflags"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGFlags.cmake", "content": "find_library(gflags_library gflags)"}]}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3", "version": "3", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 ${eigen3_find_version} no_module quiet)", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gcov"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/CoverallsGenerateGcov.cmake", "content": "find_program(gcov_executable gcov)"}, {"filenames": ["$env{gcov}"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/CoverallsGenerateGcov.cmake", "content": "find_program(gcov_executable $env{gcov})"}]}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindSQLite3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sqlite3"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindSQLite3.cmake", "content": "find_library(sqlite3_library names sqlite3)"}]}, {"deps": [{"depname": "postgres", "version": null, "version_op": null, "unified_name": "postgres", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindPOSTGRES.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pq", "libpq"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindPOSTGRES.cmake", "content": "find_library( postgres_libraries\n    names pq libpq\n    paths\n      ${_postgres_dir}/lib/${cmake_library_architecture}\n      ${cmake_install_prefix}/lib/${cmake_library_architecture}\n      /usr/local/pgsql/lib/${cmake_library_architecture}\n      /usr/local/lib/${cmake_library_architecture}\n      /usr/lib/${cmake_library_architecture}\n      ${_postgres_dir}/lib64\n      ${cmake_install_prefix}/lib64\n      /usr/local/pgsql/lib64\n      /usr/local/lib64\n      /usr/lib64\n      ${_postgres_dir}\n      ${_postgres_dir}/lib\n      ${cmake_install_prefix}/bin\n      ${cmake_install_prefix}/lib\n      /usr/local/pgsql/lib\n      /usr/local/lib\n      /usr/lib\n    no_default_path\n  )"}]}, {"deps": [{"depname": "libevent", "version": null, "version_op": null, "unified_name": "event", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindLibevent.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["event", "libevent"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindLibevent.cmake", "content": "find_library(libevent_libraries names event libevent paths ${libevent_libraries_paths})"}, {"filenames": ["libevent_pthreads", "event_pthreads"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindLibevent.cmake", "content": "find_library(libevent_pthread_libraries names libevent_pthreads event_pthreads paths ${libevent_libraries_paths})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["valgrind"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/MemoryCheck.cmake", "content": "find_program( valgrind_path valgrind )"}]}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindGlog.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libglog_static"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGlog.cmake", "content": "find_library(glog_library_release libglog_static\n        paths ${glog_root_dir}\n        path_suffixes release)"}, {"filenames": ["libglog_static"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGlog.cmake", "content": "find_library(glog_library_debug libglog_static\n        paths ${glog_root_dir}\n        path_suffixes debug)"}, {"filenames": ["glog"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindGlog.cmake", "content": "find_library(glog_library glog\n        paths ${glog_root_dir}\n        path_suffixes lib lib64)"}]}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindJsoncpp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jsoncpp"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindJsoncpp.cmake", "content": "find_library(\n\tjsoncpp_library\n\tnames jsoncpp\n\tdoc \"jsoncpp library\"\n)"}, {"filenames": ["jsoncppd"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindJsoncpp.cmake", "content": "find_library(\n\t\tjsoncpp_library_debug\n\t\tnames jsoncppd\n\t\tdoc \"jsoncpp debug library\"\n\t)"}]}, {"deps": [{"depname": "pqxx", "version": null, "version_op": null, "unified_name": "pqxx", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindPQXX.cmake", "confidence": "High"}, {"depname": "postgres", "version": null, "version_op": null, "unified_name": "postgres", "extractor_type": "cmake", "context": "find_package( postgres required )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libpqxx", "pqxx"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindPQXX.cmake", "content": "find_library( pqxx_library\n      names libpqxx pqxx\n      paths\n        ${_pqxx_dir}/lib/${cmake_library_architecture}\n        ${cmake_install_prefix}/lib/${cmake_library_architecture}\n        /usr/local/pgsql/lib/${cmake_library_architecture}\n        /usr/local/lib/${cmake_library_architecture}\n        /usr/lib/${cmake_library_architecture}\n        ${_pqxx_dir}/lib\n        ${_pqxx_dir}\n        ${cmake_install_prefix}/lib\n          ${cmake_install_prefix}/bin\n        /usr/local/pgsql/lib\n        /usr/local/lib\n        /usr/lib\n      doc \"location of libpqxx library\"\n      no_default_path\n    )"}]}, {"deps": [{"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindJeMalloc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jemalloc"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindJeMalloc.cmake", "content": "find_library(jemalloc_libraries\n    names jemalloc\n    hints ${jemalloc_root_dir}/lib\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["curl"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/Coveralls.cmake", "content": "find_program(curl_executable curl)"}]}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_library_release\n        names tbb\n        paths )"}, {"filenames": ["${tbb_library_names_debug}"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_library_debug\n        names ${tbb_library_names_debug}\n        paths )"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_library_release\n        names tbbmalloc\n        paths )"}, {"filenames": ["${tbb_malloc_library_names_debug}"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_library_debug\n        names ${tbb_malloc_library_names_debug}\n        paths )"}, {"filenames": ["tbbmalloc_proxy"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_proxy_library_release\n        names tbbmalloc_proxy\n        paths )"}, {"filenames": ["${tbb_malloc_proxy_library_names_debug}"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindTBB.cmake", "content": "find_library(tbb_malloc_proxy_library_debug\n        names ${tbb_malloc_proxy_library_names_debug}\n        paths )"}]}, {"deps": [{"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindLibunwind.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"unwind\""], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindLibunwind.cmake", "content": "find_library(libunwind_generic_library \"unwind\")"}, {"filenames": ["\"unwind-x86\""], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindLibunwind.cmake", "content": "find_library(libunwind_specific_library \"unwind-x86\")"}]}, {"deps": [{"depname": "libffi", "version": null, "version_op": null, "unified_name": "ffi", "extractor_type": "cmake", "context": "cmu-db@@peloton/cmake/Modules/FindLibffi.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ffi", "libffi"], "version": "", "fromfile": "cmu-db@@peloton/cmake/Modules/FindLibffi.cmake", "content": "find_library(libffi_library names ffi libffi\n        paths /usr /usr/local /opt/local\n        path_suffixes lib lib64 x86_64-linux-gnu lib/x86_64-linux-gnu\n        )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "Capn Proto", "version": "0.6.1", "version_op": null, "unified_name": "capn proto", "extractor_type": "autoconf", "context": "AC_INIT([Capn Proto],[0.6.1],[capnproto@googlegroups.com],[capnproto-c++])", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "capnproto", "version": null, "version_op": null, "unified_name": "capnproto", "extractor_type": "cmake", "context": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "capnp", "version": null, "version_op": null, "unified_name": "capnp", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkgconfig_capnp capnp)", "confidence": "High"}, {"depname": "capnp-rpc", "version": null, "version_op": null, "unified_name": "capnp-rpc", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkgconfig_capnp_rpc capnp-rpc quiet)", "confidence": "High"}, {"depname": "capnp-json", "version": null, "version_op": null, "unified_name": "capnp-json", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkgconfig_capnp_json capnp-json quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["kj"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_library(capnp_lib_kj kj\n  hints \"${pkgconfig_capnp_libdir}\" ${pkgconfig_capnp_library_dirs}\n)"}, {"filenames": ["kj-async"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_library(capnp_lib_kj-async kj-async\n  hints \"${pkgconfig_capnp_rpc_libdir}\" ${pkgconfig_capnp_rpc_library_dirs}\n)"}, {"filenames": ["capnp"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_library(capnp_lib_capnp capnp\n  hints \"${pkgconfig_capnp_libdir}\" ${pkgconfig_capnp_library_dirs}\n)"}, {"filenames": ["capnp-rpc"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_library(capnp_lib_capnp-rpc capnp-rpc\n  hints \"${pkgconfig_capnp_rpc_libdir}\" ${pkgconfig_capnp_rpc_library_dirs}\n)"}, {"filenames": ["capnp-json"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_library(capnp_lib_capnp-json capnp-json\n  hints \"${pkgconfig_capnp_json_libdir}\" ${pkgconfig_capnp_json_library_dirs}\n)"}, {"filenames": ["capnp"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_program(capnp_executable\n  names capnp\n  doc \"cap'n proto command-line tool\"\n  hints \"${pkgconfig_capnp_prefix}/bin\"\n)"}, {"filenames": ["capnpc-c++"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/cmake/FindCapnProto.cmake", "content": "find_program(capnpc_cxx_executable\n  names capnpc-c++\n  doc \"capn'n proto c++ compiler\"\n  hints \"${pkgconfig_capnp_prefix}/bin\"\n)"}]}, {"deps": [{"depname": "capnproto", "version": null, "version_op": null, "unified_name": "capnproto", "extractor_type": "cmake", "context": "find_package(capnproto config quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["capnp"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/src/CMakeLists.txt", "content": "find_program(capnp_executable capnp)"}, {"filenames": ["capnpc-c++"], "version": "", "fromfile": "cmu-db@@peloton/third_party/capnproto/c++/src/CMakeLists.txt", "content": "find_program(capnpc_cxx_executable capnpc-c++ hints \"${capnp_dir}\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "capnproto", "version": null, "version_op": null, "unified_name": "capnproto", "extractor_type": "cmake", "context": "find_package(capnproto config required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "pg_query", "version": null, "version_op": null, "unified_name": "pg_query", "extractor_type": "cmake", "context": "project(pg_query cxx c)", "confidence": ""}], "type": "cmake", "libs": []}]}