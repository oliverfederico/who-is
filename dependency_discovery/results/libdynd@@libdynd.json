{"target": "libdynd@@libdynd", "extractors": [{"deps": [{"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm config)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "libdynd", "version": null, "version_op": null, "unified_name": "dynd", "extractor_type": "cmake", "context": "project(libdynd)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libdynd_plugin", "version": null, "version_op": null, "unified_name": "dynd_plugin", "extractor_type": "cmake", "context": "project(libdynd_plugin)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda_dynd", "version": null, "version_op": null, "unified_name": "cuda_dynd", "extractor_type": "cmake", "context": "libdynd@@libdynd/cmake/FindCUDA_DyND.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "libdynd@@libdynd/cmake/FindCUDA_DyND.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths \"${cuda_toolkit_target_dir}\" \"${cuda_toolkit_root_dir}\"\n    env cuda_path\n    env cuda_lib_path\n    path_suffixes ${_cuda_64bit_lib_dir} \"${_path_ext}lib/win32\" \"${_path_ext}lib\" \"${_path_ext}libwin32\"\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "libdynd@@libdynd/cmake/FindCUDA_DyND.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths \"/usr/lib/nvidia-current\"\n    doc ${_doc}\n    )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "libdynd@@libdynd/cmake/FindCUDA_DyND.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}\"\n  env cuda_path\n  env cuda_bin_path\n  path_suffixes bin bin64\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "libdynd@@libdynd/cmake/FindCUDA_DyND.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "libdynd@@libdynd/cmake/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagemessage", "version": null, "version_op": null, "unified_name": "packagemessage", "extractor_type": "cmake", "context": "libdynd@@libdynd/cmake/FindPackageMessage.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gcov"], "version": "", "fromfile": "libdynd@@libdynd/cmake/CodeCoverage.cmake", "content": "find_program( gcov_path gcov )"}, {"filenames": ["lcov"], "version": "", "fromfile": "libdynd@@libdynd/cmake/CodeCoverage.cmake", "content": "find_program( lcov_path lcov )"}, {"filenames": ["genhtml"], "version": "", "fromfile": "libdynd@@libdynd/cmake/CodeCoverage.cmake", "content": "find_program( genhtml_path genhtml )"}, {"filenames": ["gcovr"], "version": "", "fromfile": "libdynd@@libdynd/cmake/CodeCoverage.cmake", "content": "find_program( gcovr_path gcovr paths ${cmake_source_dir}/tests)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "benchmark_libdynd", "version": null, "version_op": null, "unified_name": "benchmark_libdynd", "extractor_type": "cmake", "context": "project(benchmark_libdynd)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libdynd_mkl", "version": null, "version_op": null, "unified_name": "dynd_mkl", "extractor_type": "cmake", "context": "project(libdynd_mkl)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "test_libdynd", "version": null, "version_op": null, "unified_name": "test_libdynd", "extractor_type": "cmake", "context": "project(test_libdynd)", "confidence": ""}], "type": "cmake", "libs": []}]}