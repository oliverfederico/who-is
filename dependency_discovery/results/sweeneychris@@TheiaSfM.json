{"target": "sweeneychris@@TheiaSfM", "extractors": [{"deps": [{"depname": "eigen", "version": "3.2.0", "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen 3.2.0 required)", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags required)", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "ceres", "version": null, "version_op": null, "unified_name": "ceres", "extractor_type": "cmake", "context": "find_package(ceres required suitesparse)", "confidence": "High"}, {"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "find_package(openimageio required)", "confidence": "High"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "find_package(suitesparse required)", "confidence": "High"}, {"depname": "rocksdb", "version": null, "version_op": null, "unified_name": "rocksdb", "extractor_type": "cmake", "context": "find_package(rocksdb required)", "confidence": "High"}, {"depname": "rapidjson", "version": null, "version_op": null, "unified_name": "rapidjson", "extractor_type": "cmake", "context": "find_package(rapidjson required)", "confidence": "High"}, {"depname": "theia", "version": null, "version_op": null, "unified_name": "theia", "extractor_type": "cmake", "context": "project(theia c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindGflags.cmake", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags quiet\n                      no_module\n                      no_cmake_package_registry\n                      no_cmake_builds_path)", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags quiet\n                        no_module\n                        no_cmake_builds_path)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gflags"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindGflags.cmake", "content": "find_library(gflags_library names gflags\n    hints ${gflags_library_dir_hints}\n    paths ${gflags_check_library_dirs}\n    path_suffixes ${gflags_check_library_suffixes})"}]}, {"deps": [{"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindSuiteSparse.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas quiet)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack quiet)", "confidence": "High"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "    set(suitesparse_version\n      \"${suitesparse_main_version}.${suitesparse_sub_version}.${suitesparse_subsub_version}\")", "confidence": "Low"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "    set(suitesparse_version\n      \"${suitesparse_main_version}.${suitesparse_sub_version}.${suitesparse_subsub_version}\")", "confidence": "Low"}, {"depname": "suitesparse_is_broken_shared_linking_ubuntu_system", "version": null, "version_op": null, "unified_name": "suitesparse_is_broken_shared_linking_ubuntu_system", "extractor_type": "cmake", "context": "set(suitesparse_is_broken_shared_linking_ubuntu_system_version false)", "confidence": "Low"}, {"depname": "suitesparse_is_broken_shared_linking_ubuntu_system", "version": null, "version_op": null, "unified_name": "suitesparse_is_broken_shared_linking_ubuntu_system", "extractor_type": "cmake", "context": "      set(suitesparse_is_broken_shared_linking_ubuntu_system_version true)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${suitesparse_find_${component}_libraries}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindSuiteSparse.cmake", "content": "find_library(${component}_library\n      names ${suitesparse_find_${component}_libraries}\n      hints ${suitesparse_library_dir_hints}\n      paths ${suitesparse_check_library_dirs}\n      path_suffixes ${suitesparse_check_path_suffixes})"}, {"filenames": ["lsb_release"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindSuiteSparse.cmake", "content": "find_program(lsb_release_executable lsb_release)"}]}, {"deps": [{"depname": "rocksdb", "version": null, "version_op": null, "unified_name": "rocksdb", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindRocksDB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${rocksdb_library_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindRocksDB.cmake", "content": "find_library(rocksdb_libraries names ${rocksdb_library_names}\n  hints\n    ${_rocksdb_libraries_search_dirs}\n    ${pc_rocksdb_libdir}\n    ${pc_rocksdb_library_dirs}\n)"}, {"filenames": ["${rocksdb_static_library_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindRocksDB.cmake", "content": "find_library(rocksdb_static_libraries names ${rocksdb_static_library_names}\n  hints\n  ${_rocksdb_libraries_search_dirs}\n  ${pc_rocksdb_libdir}\n  ${pc_rocksdb_library_dirs}\n  )"}, {"filenames": ["snappy"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindRocksDB.cmake", "content": "find_library(rocksdb_snappy_library names snappy\n    hints\n    ${_rocksdb_libraries_search_dirs}\n    ${pc_rocksdb_libdir}\n    ${pc_rocksdb_library_dirs}\n    )"}]}, {"deps": [{"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindOpenImageIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openimageio"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindOpenImageIO.cmake", "content": "find_library(openimageio_library names openimageio\n  paths ${openimageio_library_dir_hints}\n  ${openimageio_check_library_dirs}\n  path_suffixes ${openimageio_check_library_suffixes})"}]}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindEigen.cmake", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 quiet\n                      no_module\n                      no_cmake_package_registry\n                      no_cmake_builds_path)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 quiet\n                        no_module\n                        no_cmake_builds_path)", "confidence": "High"}, {"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "    set(eigen_version \"${eigen_world_version}.${eigen_major_version}.${eigen_minor_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindGlog.cmake", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog quiet\n                    names google-glog glog\n                    no_module\n                    no_cmake_package_registry\n                    no_cmake_builds_path)", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog quiet\n                      names google-glog glog\n                      no_module\n                      no_cmake_builds_path)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glog"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindGlog.cmake", "content": "find_library(glog_library names glog\n    hints ${glog_library_dir_hints}\n    paths ${glog_check_library_dirs}\n    path_suffixes ${glog_check_library_suffixes})"}]}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/cmake/FindSphinx.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sphinx-build"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindSphinx.cmake", "content": "find_program(sphinx_executable\n             names sphinx-build\n             paths\n               /usr/bin\n               /usr/local/bin\n               /opt/local/bin\n             doc \"sphinx documentation generator\")"}, {"filenames": ["sphinx-build-${_version}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/cmake/FindSphinx.cmake", "content": "find_program(sphinx_executable\n                 names sphinx-build-${_version}\n                 paths\n                   /usr/bin\n                   /usr/local/bin\n                   /opt/local/bin\n                 doc \"sphinx documentation generator\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen required)", "confidence": "High"}, {"depname": "optimo", "version": null, "version_op": null, "unified_name": "optimo", "extractor_type": "cmake", "context": "project(optimo c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "visual_sfm", "version": null, "version_op": null, "unified_name": "visual_sfm", "extractor_type": "cmake", "context": "project(visual_sfm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cereal", "version": null, "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "project (cereal)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [{"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}, {"depname": "sandbox_vs_dll", "version": null, "version_op": null, "unified_name": "sandbox_vs_dll", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/sandbox_vs/sandbox_vs.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "%(AdditionalDependencies)", "version": null, "version_op": null, "unified_name": "%(additionaldependencies)", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/unittests/unittests.vcxproj", "confidence": "High"}, {"depname": "%(AdditionalDependencies)", "version": null, "version_op": null, "unified_name": "%(additionaldependencies)", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/unittests/unittests.vcxproj", "confidence": "High"}, {"depname": "%(AdditionalDependencies)", "version": null, "version_op": null, "unified_name": "%(additionaldependencies)", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/unittests/unittests.vcxproj", "confidence": "High"}, {"depname": "%(AdditionalDependencies)", "version": null, "version_op": null, "unified_name": "%(additionaldependencies)", "extractor_type": "ms", "context": "sweeneychris@@TheiaSfM/libraries/cereal/vs2013/unittests/unittests.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cereal", "version": null, "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "find_package(cereal required)", "confidence": "High"}, {"depname": "cereal", "version": null, "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "  project(cereal-test-config-module)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "autoconf"}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "project(gtest cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "akaze", "version": null, "version_op": null, "unified_name": "akaze", "extractor_type": "cmake", "context": "project( akaze )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cmake/FindEigen.cmake", "confidence": "High"}, {"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "    set(eigen_version \"${eigen_world_version}.${eigen_major_version}.${eigen_minor_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "timer", "version": null, "version_op": null, "unified_name": "timer", "extractor_type": "cmake", "context": "project(timer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package( x11 required )", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package( png required )", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package( jpeg required )", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package( tiff required )", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package( zlib required )", "confidence": "High"}, {"depname": "imagemagick", "version": null, "version_op": null, "unified_name": "imagemagick", "extractor_type": "cmake", "context": "find_package( imagemagick quiet components magick++ convert)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package( lapack quiet )", "confidence": "High"}, {"depname": "board", "version": null, "version_op": null, "unified_name": "board", "extractor_type": "cmake", "context": "find_package( board  )", "confidence": "High"}, {"depname": "cimg", "version": null, "version_op": null, "unified_name": "cimg", "extractor_type": "cmake", "context": "project(cimg)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindJPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${jpeg_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindJPEG.cmake", "content": "find_library(jpeg_library names ${jpeg_names} )"}]}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}d"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_debug \n                names ${lib}d \n                hints ${hdf5_${language}_library_dirs} \n                env hdf5_root \n                path_suffixes lib lib )"}, {"filenames": ["${lib}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "content": "find_library( hdf5_${lib}_library_release\n                names ${lib} \n                hints ${hdf5_${language}_library_dirs} \n                env hdf5_root \n                path_suffixes lib lib )"}, {"filenames": ["h5cc", "h5pcc"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "content": "find_program( hdf5_c_compiler_executable\n    names h5cc h5pcc\n    hints env hdf5_root\n    path_suffixes bin bin\n    doc \"hdf5 wrapper compiler.  used only to detect hdf5 compile flags.\" )"}, {"filenames": ["h5c++", "h5pc++"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "content": "find_program( hdf5_cxx_compiler_executable\n    names h5c++ h5pc++\n    hints env hdf5_root\n    path_suffixes bin bin\n    doc \"hdf5 c++ wrapper compiler.  used only to detect hdf5 compile flags.\" )"}, {"filenames": ["h5diff"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindHDF5.cmake", "content": "find_program( hdf5_diff_executable \n    names h5diff\n    hints env hdf5_root\n    path_suffixes bin bin \n    doc \"hdf5 file differencing tool.\" )"}]}, {"deps": [{"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "confidence": "High"}, {"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "        set(gtk2_version\n            ${gtk2_major_version}.${gtk2_minor_version}.${gtk2_patch_version})", "confidence": "Low"}, {"depname": "gtk2", "version": null, "version_op": null, "unified_name": "gtk2", "extractor_type": "cmake", "context": "    set(gtk2_version ${gtk2_major_version}.${gtk2_minor_version}.${gtk2_patch_version})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${_lib}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library( ${_var} ${_lib} ${_expand_vc} ${_append_version} )"}, {"filenames": ["${_lib_list}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library(${_var} \n        names ${_lib_list}\n        paths\n            /opt/gnome/lib\n            /opt/gnome/lib64\n            /usr/openwin/lib\n            /usr/openwin/lib64\n            $env{gtkmm_basepath}/lib\n            [hkey_current_user\\\\software\\\\gtkmm\\\\2.4;path]/lib\n            [hkey_local_machine\\\\software\\\\gtkmm\\\\2.4;path]/lib\n        )"}, {"filenames": ["${_libd_list}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library(${_var}_debug\n            names ${_libd_list}\n            paths\n            $env{gtkmm_basepath}/lib\n            [hkey_current_user\\\\software\\\\gtkmm\\\\2.4;path]/lib\n            [hkey_local_machine\\\\software\\\\gtkmm\\\\2.4;path]/lib\n        )"}, {"filenames": ["glib"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_glib_library glib false true)"}, {"filenames": ["gdk-x11"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdk_library gdk-x11 false true)"}, {"filenames": ["gdk-win32"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdk_library gdk-win32 false true)"}, {"filenames": ["gtk-x11"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtk_library gtk-x11 false true)"}, {"filenames": ["gtk-win32"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtk_library gtk-win32 false true)"}, {"filenames": ["cairo"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_cairo_library cairo false false)"}, {"filenames": ["pango"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_pango_library pango false true)"}, {"filenames": ["atk"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_atk_library atk false true)"}, {"filenames": ["glibmm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_glibmm_library glibmm true true)"}, {"filenames": ["gdkmm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gdkmm_library gdkmm true true)"}, {"filenames": ["gtkmm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_gtkmm_library gtkmm true true)"}, {"filenames": ["cairomm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_cairomm_library cairomm true true)"}, {"filenames": ["pangomm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_pangomm_library pangomm true true)"}, {"filenames": ["sigc"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_sigc++_library sigc true true)"}, {"filenames": ["giomm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_giomm_library giomm true true)"}, {"filenames": ["atkmm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_atkmm_library atkmm true true)"}, {"filenames": ["glade"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_glade_library glade false true)"}, {"filenames": ["glademm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindGTK2.cmake", "content": "find_library    (gtk2_glademm_library glademm true true)"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenMP.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "minc", "version": null, "version_op": null, "unified_name": "minc", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindMINC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["volume_io2"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindMINC.cmake", "content": "find_library(minc_volume_io2_library names volume_io2 hints /usr/lib /usr/local/lib /usr/local/bic/lib /opt/minc-toolkit/include)"}, {"filenames": ["minc2"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindMINC.cmake", "content": "find_library(minc_minc2_library names minc2 hints /usr/lib /usr/local/lib /usr/local/bic/lib /opt/minc-toolkit/include)"}]}, {"deps": [{"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFTW3F.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_fftw3f quiet fftw3f)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fftw3f", "libfftw3f"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFTW3F.cmake", "content": "find_library(fftw3f_library names fftw3f libfftw3f\n             hints ${pc_fftw3f_libdir} ${pc_fftw3f_library_dirs} )"}]}, {"deps": [{"depname": "fftw3", "version": null, "version_op": null, "unified_name": "fftw3", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFTW3.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_lib}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFTW3.cmake", "content": "find_library(${_lib}_library ${_lib}\n    hints ${fftw3_root_dir} path_suffixes lib)"}]}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFMPEG.cmake", "confidence": "High"}, {"depname": "libavformat", "version": null, "version_op": null, "unified_name": "avformat", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( avformat libavformat )", "confidence": "High"}, {"depname": "libavcodec", "version": null, "version_op": null, "unified_name": "avcodec", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( avcodec libavcodec )", "confidence": "High"}, {"depname": "libavutil", "version": null, "version_op": null, "unified_name": "avutil", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( avutil libavutil )", "confidence": "High"}, {"depname": "libswscale", "version": null, "version_op": null, "unified_name": "swscale", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( swscale libswscale )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib_}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindFFMPEG.cmake", "content": "find_library( tmp_ names ${lib_} paths ${ffmpeg_library_dir} )"}]}, {"deps": [{"depname": "test", "version": null, "version_op": null, "unified_name": "test", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTest.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["avutil"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTest.cmake", "content": "find_library(avutil_library\n      names\n        avutil\n      paths\n        ${_ffmpeglinkdir}\n        /usr/lib\n        /usr/local/lib\n        /opt/local/lib\n        /sw/lib\n    )"}, {"filenames": ["avcodec"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTest.cmake", "content": "find_library(avcodec_library\n    names\n      avcodec\n    paths\n      ${_ffmpeglinkdir}\n      /usr/lib\n      /usr/local/lib\n      /opt/local/lib\n      /sw/lib\n  )"}, {"filenames": ["avformat"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTest.cmake", "content": "find_library(avformat_library\n    names\n      avformat\n    paths\n      ${_ffmpeglinkdir}\n      /usr/lib\n      /usr/local/lib\n      /opt/local/lib\n      /sw/lib\n  )"}]}, {"deps": [{"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindLAPACK.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n      names ${_library}\n      paths ${_libdir}\n      )"}]}, {"deps": [{"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTIFF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${tiff_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindTIFF.cmake", "content": "find_library(tiff_library names ${tiff_names} )"}]}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindZLIB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${zlib_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindZLIB.cmake", "content": "find_library(zlib_library names ${zlib_names} )"}]}, {"deps": [{"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindPNG.cmake", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${png_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindPNG.cmake", "content": "find_library(png_library names ${png_names} )"}]}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenCV.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"${__cvlib}d\"", "\"lib${__cvlib}d\""], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenCV.cmake", "content": "find_library(opencv_${__cvlib}_library_debug names \"${__cvlib}d\" \"lib${__cvlib}d\" paths \"${opencv_dir}/lib\" )"}, {"filenames": ["\"${__cvlib}\"", "\"lib${__cvlib}\""], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenCV.cmake", "content": "find_library(opencv_${__cvlib}_library_release names \"${__cvlib}\" \"lib${__cvlib}\" paths \"${opencv_dir}/lib\" )"}]}, {"deps": [{"depname": "board", "version": null, "version_op": null, "unified_name": "board", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindBOARD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${board_names}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindBOARD.cmake", "content": "find_library(board_library\n  names ${board_names}\n  paths /usr/lib /usr/local/lib\n  )"}]}, {"deps": [{"depname": "ezminc", "version": null, "version_op": null, "unified_name": "ezminc", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindEZMINC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["minc_io"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindEZMINC.cmake", "content": "find_library(ezminc_minc_io_library names minc_io hints /usr/lib /usr/local/lib /usr/local/bic/lib /opt/minc-toolkit/lib)"}]}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "confidence": "High"}, {"depname": "\"${x11_libraries}\"", "version": null, "version_op": null, "unified_name": "\"${x11_libraries}\"", "extractor_type": "cmake", "context": "check_library_exists(\"${x11_libraries}\" \"xopendisplay\" \"\" x11_lib_x11_solo)", "confidence": "High"}, {"depname": "\"dnet\"", "version": null, "version_op": null, "unified_name": "\"dnet\"", "extractor_type": "cmake", "context": "check_library_exists(\"dnet\" \"dnet_ntoa\" \"\" x11_lib_dnet_has_dnet_ntoa)", "confidence": "High"}, {"depname": "\"dnet_stub\"", "version": null, "version_op": null, "unified_name": "\"dnet_stub\"", "extractor_type": "cmake", "context": "check_library_exists(\"dnet_stub\" \"dnet_ntoa\" \"\" x11_lib_dnet_stub_has_dnet_ntoa)", "confidence": "High"}, {"depname": "\"nsl\"", "version": null, "version_op": null, "unified_name": "\"nsl\"", "extractor_type": "cmake", "context": "check_library_exists(\"nsl\" \"gethostbyname\" \"\" cmake_lib_nsl_has_gethostbyname)", "confidence": "High"}, {"depname": "\"bsd\"", "version": null, "version_op": null, "unified_name": "\"bsd\"", "extractor_type": "cmake", "context": "check_library_exists(\"bsd\" \"gethostbyname\" \"\" cmake_lib_bsd_has_gethostbyname)", "confidence": "High"}, {"depname": "\"socket\"", "version": null, "version_op": null, "unified_name": "\"socket\"", "extractor_type": "cmake", "context": "check_library_exists(\"socket\" \"connect\" \"\" cmake_lib_socket_has_connect)", "confidence": "High"}, {"depname": "\"posix\"", "version": null, "version_op": null, "unified_name": "\"posix\"", "extractor_type": "cmake", "context": "check_library_exists(\"posix\" \"remove\" \"\" cmake_lib_posix_has_remove)", "confidence": "High"}, {"depname": "\"ipc\"", "version": null, "version_op": null, "unified_name": "\"ipc\"", "extractor_type": "cmake", "context": "check_library_exists(\"ipc\" \"shmat\" \"\" cmake_lib_ips_has_shmat)", "confidence": "High"}, {"depname": "\"ice\"", "version": null, "version_op": null, "unified_name": "\"ice\"", "extractor_type": "cmake", "context": "check_library_exists(\"ice\" \"iceconnectionnumber\" \"\"\n                            cmake_lib_ice_has_iceconnectionnumber)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["x11"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_x11_lib x11               ${x11_lib_search_path})"}, {"filenames": ["ice"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_ice_lib ice               ${x11_lib_search_path})"}, {"filenames": ["sm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_sm_lib sm                 ${x11_lib_search_path})"}, {"filenames": ["xau"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xau_lib xau               ${x11_lib_search_path})"}, {"filenames": ["xcomposite"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xcomposite_lib xcomposite ${x11_lib_search_path})"}, {"filenames": ["xcursor"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xcursor_lib xcursor       ${x11_lib_search_path})"}, {"filenames": ["xdamage"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xdamage_lib xdamage       ${x11_lib_search_path})"}, {"filenames": ["xdmcp"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xdmcp_lib xdmcp           ${x11_lib_search_path})"}, {"filenames": ["xext"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xext_lib xext             ${x11_lib_search_path})"}, {"filenames": ["xfixes"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xfixes_lib xfixes         ${x11_lib_search_path})"}, {"filenames": ["xft"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xft_lib xft               ${x11_lib_search_path})"}, {"filenames": ["xinerama"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xinerama_lib xinerama     ${x11_lib_search_path})"}, {"filenames": ["xi"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xinput_lib xi             ${x11_lib_search_path})"}, {"filenames": ["xpm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xpm_lib xpm               ${x11_lib_search_path})"}, {"filenames": ["xrandr"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xrandr_lib xrandr         ${x11_lib_search_path})"}, {"filenames": ["xrender"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xrender_lib xrender       ${x11_lib_search_path})"}, {"filenames": ["xss"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xscreensaver_lib xss      ${x11_lib_search_path})"}, {"filenames": ["xt"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xt_lib xt                 ${x11_lib_search_path})"}, {"filenames": ["xtst"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xtest_lib xtst            ${x11_lib_search_path})"}, {"filenames": ["xv"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xv_lib xv                 ${x11_lib_search_path})"}, {"filenames": ["xxf86misc"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindX11.cmake", "content": "find_library(x11_xxf86misc_lib xxf86misc   ${x11_lib_search_path})"}]}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["netcdf"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_c_library\n                         names netcdf\n                         hints ${netcdf_library_dir}\n                         no_default_path)"}, {"filenames": ["netcdf_c++"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_cxx_library\n                         names netcdf_c++\n                         hints ${netcdf_library_dir}\n                         no_default_path)"}, {"filenames": ["netcdf"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_c_library\n                             names netcdf\n                             hints ${netcdf_dir}\n                             path_suffixes \"lib\" \"lib\"\n                             no_default_path)"}, {"filenames": ["netcdf_c++"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_cxx_library\n                             names netcdf_c++\n                             hints ${netcdf_dir}\n                             path_suffixes \"lib\" \"lib\"\n                             no_default_path)"}, {"filenames": ["netcdf"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_c_library\n                         names netcdf\n                         path_suffixes ${netcdf_lib_suffixes})"}, {"filenames": ["netcdf_c++"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_library(netcdf_cxx_library\n                         names netcdf_c++\n                         path_suffixes ${netcdf_lib_suffixes})"}, {"filenames": ["nc-config"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake", "content": "find_program(netcdf_config nc-config\n                       hints ${netcdf_dir} ${netcdf_bin_dir}\n                       path_suffixes bin bin\n                       doc \"netcdf configuration script\")"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["half"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_half_library names half\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/huginrelease\n    ${source_base_dir}/deploy/lib/release\n  )"}, {"filenames": ["iex"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_iex_library\n    names iex\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/huginrelease\n    ${source_base_dir}/deploy/lib/release\n  )"}, {"filenames": ["ilmthread"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_ilmthread_library names ilmthread\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/huginrelease\n    ${source_base_dir}/deploy/lib/release\n  )"}, {"filenames": ["imath"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_imath_library names imath\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/huginrelease\n    ${source_base_dir}/deploy/lib/release\n  )"}, {"filenames": ["ilmimf"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_ilmimf_library names ilmimf \n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/huginrelease\n    ${source_base_dir}/deploy/lib/release\n  )"}, {"filenames": ["half"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_half_library_debug names half\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/hugindebug\n    ${source_base_dir}/deploy/lib/debug\n  )"}, {"filenames": ["iex"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_iex_library_debug\n    names iex\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/hugindebug\n    ${source_base_dir}/deploy/lib/debug\n  )"}, {"filenames": ["ilmthread"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_ilmthread_library_debug names ilmthread\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/hugindebug\n    ${source_base_dir}/deploy/lib/debug\n  )"}, {"filenames": ["imath"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_imath_library_debug names imath\n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/hugindebug\n    ${source_base_dir}/deploy/lib/debug\n  )"}, {"filenames": ["ilmimf"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake", "content": "find_library(openexr_ilmimf_library_debug names ilmimf \n    paths\n    ${_openexrlinkdir}\n    ${system_lib_dirs}\n    ${source_base_dir}/deploy/lib/hugindebug\n    ${source_base_dir}/deploy/lib/debug\n  )"}]}, {"deps": [{"depname": "imagemagick", "version": null, "version_op": null, "unified_name": "imagemagick", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindImageMagick.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${argn}"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/akaze/cimg/cmake-modules/FindImageMagick.cmake", "content": "find_library(imagemagick_${component}_library\n    names ${argn}\n    paths\n      \"[hkey_local_machine\\\\software\\\\imagemagick\\\\current;binpath]/lib\"\n    doc \"path to the imagemagick magick++ library.\"\n    )"}]}, {"deps": [{"depname": "vlfeat", "version": null, "version_op": null, "unified_name": "vlfeat", "extractor_type": "cmake", "context": "project(vlfeat)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components mpi system serialization thread required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "flann", "version": null, "version_op": null, "unified_name": "flann", "extractor_type": "cmake", "context": "project(flann)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["rpm"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/CMakeLists.txt", "content": "find_program(rpm_program rpm)"}, {"filenames": ["dpkg"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/CMakeLists.txt", "content": "find_program(dpkg_program dpkg)"}, {"filenames": ["makensis"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/CMakeLists.txt", "content": "find_program(nsis_program makensis makensis)"}, {"filenames": ["packagemaker"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/CMakeLists.txt", "content": "find_program(package_maker_program packagemaker\n\t    hints /developer/applications/utilities)"}]}, {"deps": [{"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "find_package(latex)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["convert"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/cmake/UseLATEX.cmake", "content": "find_program(imagemagick_convert convert\n    doc \"the convert program that comes with imagemagick (available at http://www.imagemagick.org).\"\n    )"}]}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "flann", "version": null, "version_op": null, "unified_name": "flann", "extractor_type": "cmake", "context": "sweeneychris@@TheiaSfM/libraries/flann/cmake/FindFlann.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "flann", "version": null, "version_op": null, "unified_name": "flann", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_flann flann)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["flann"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/cmake/FindFlann.cmake", "content": "find_library(flann_library flann\n    hints ${pc_flann_libdir} ${pc_flann_library_dirs})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["mex.bat"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/src/matlab/CMakeLists.txt", "content": "find_program(mex_cmd mex.bat)"}, {"filenames": ["mexext.bat"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/src/matlab/CMakeLists.txt", "content": "find_program(mexext_cmd mexext.bat)"}, {"filenames": ["mex"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/src/matlab/CMakeLists.txt", "content": "find_program(mex_cmd mex)"}, {"filenames": ["mexext"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/src/matlab/CMakeLists.txt", "content": "find_program(mexext_cmd mexext)"}, {"filenames": ["mkoctfile"], "version": "", "fromfile": "sweeneychris@@TheiaSfM/libraries/flann/src/matlab/CMakeLists.txt", "content": "find_program(oct_cmd mkoctfile)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen required)", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags required)", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "ceres", "version": null, "version_op": null, "unified_name": "ceres", "extractor_type": "cmake", "context": "find_package(ceres required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}, {"depname": "statx", "version": null, "version_op": null, "unified_name": "statx", "extractor_type": "cmake", "context": "project (statx c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "stlplus3", "version": null, "version_op": null, "unified_name": "stlplus3", "extractor_type": "cmake", "context": "project(stlplus3)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "find_package(glut required)", "confidence": "High"}], "type": "cmake", "libs": []}]}