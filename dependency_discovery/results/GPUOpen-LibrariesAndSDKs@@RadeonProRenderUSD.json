{"target": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD", "extractors": [{"deps": [{"depname": "hdrpr", "version": null, "version_op": null, "unified_name": "hdrpr", "extractor_type": "cmake", "context": "project(hdrpr)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["lsb_release"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/macros/PlatformIntrospection.cmake", "content": "find_program(lsb_release lsb_release)"}]}, {"deps": [{"depname": "rpr", "version": null, "version_op": null, "unified_name": "rpr", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRpr.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libradeonprorender64", "radeonprorender64"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRpr.cmake", "content": "find_library(rpr_library\n    names  libradeonprorender64 radeonprorender64\n    paths\n        \"${rpr_location_lib}\"\n    doc\n        \"radeon prorender library path\"\n    no_default_path\n    no_system_environment_path\n)"}, {"filenames": ["librprloadstore64", "rprloadstore64"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRpr.cmake", "content": "find_library(rpr_loadstore_library\n    names  librprloadstore64 rprloadstore64\n    paths\n        \"${rpr_location_lib}\"\n    doc\n        \"radeon prorender loadstore library path\"\n    no_default_path\n    no_system_environment_path\n)"}, {"filenames": ["${libname}", "${libname}${cmake_shared_library_suffix}"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRpr.cmake", "content": "find_library(rpr_${libid}_binary\n            names\n                ${libname}\n                ${libname}${cmake_shared_library_suffix}\n            paths\n                \"${rpr_location_lib}\"\n            doc\n                \"radeon prorender ${libname} library path\"\n            no_default_path\n            no_system_environment_path\n        )"}]}, {"deps": [{"depname": "houdiniusd", "version": null, "version_op": null, "unified_name": "houdiniusd", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindHoudiniUSD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindHoudiniUSD.cmake", "content": "find_library(houdini_tbb_lib\n        names tbb\n        paths ${houdini_root}\n        path_suffixes \"../libraries\"\n        no_default_path)"}, {"filenames": ["hython"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindHoudiniUSD.cmake", "content": "find_program(hython_executable hython\n    paths ${houdini_root}\n    path_suffixes bin)"}, {"filenames": ["usdgenschema.py", "usdgenschema"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindHoudiniUSD.cmake", "content": "find_program(usd_schema_generator\n        names\n            usdgenschema.py usdgenschema\n        paths\n            ${houdini_bin}\n        required\n        no_default_path)"}]}, {"deps": [{"depname": "usdmonolithic", "version": null, "version_op": null, "unified_name": "usdmonolithic", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindUSDMonolithic.cmake", "confidence": "High"}, {"depname": "pythoninterp", "version": "3.0", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3.0 required)", "confidence": "High"}, {"depname": "pythonlibs", "version": "3.0", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs 3.0 required)", "confidence": "High"}, {"depname": "pythoninterp", "version": "2.7", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 2.7 required)", "confidence": "High"}, {"depname": "pythonlibs", "version": "2.7", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs 2.7 required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost\n            components\n                python${python_version_major}${python_version_minor}\n            required\n        )", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost\n            components\n                python\n            required\n        )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["usd_usd_ms", "${pxr_lib_prefix}usd_usd_ms${cmake_shared_library_suffix}", "usd_ms", "${pxr_lib_prefix}usd_ms${cmake_shared_library_suffix}"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindUSDMonolithic.cmake", "content": "find_library(usd_monolithic_library\n    names\n        usd_usd_ms \n        ${pxr_lib_prefix}usd_usd_ms${cmake_shared_library_suffix} \n        usd_ms \n        ${pxr_lib_prefix}usd_ms${cmake_shared_library_suffix} \n    paths ${usd_library_dir}\n    no_default_path\n    no_system_environment_path)"}]}, {"deps": [{"depname": "rif", "version": null, "version_op": null, "unified_name": "rif", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRif.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["radeonimagefilters"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindRif.cmake", "content": "find_library(rif_library\n    names  radeonimagefilters\n    hints\n        \"${rif_location_lib}\"\n    doc\n        \"radeon image filter library path\"\n    no_default_path\n    no_system_environment_path\n)"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${openexr_lib}-${openexr_major_version}_${openexr_minor_version}", "${openexr_lib}-${openexr_major_version}_${openexr_minor_version}_s", "${openexr_lib}"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindOpenEXR.cmake", "content": "find_library(openexr_${openexr_lib}_library\n        names\n            ${openexr_lib}-${openexr_major_version}_${openexr_minor_version}\n            ${openexr_lib}-${openexr_major_version}_${openexr_minor_version}_s\n            ${openexr_lib}\n        hints\n            \"${openexr_location}\"\n            \"$env{openexr_location}\"\n            \"${openexr_lib_location}\"\n        path_suffixes\n            lib/\n        doc\n            \"openexr's ${openexr_lib} library path\"\n        ${path_params})"}]}, {"deps": [{"depname": "openvdb", "version": null, "version_op": null, "unified_name": "openvdb", "extractor_type": "cmake", "context": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindOpenVDB.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package( packagehandlestandardargs )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openvdb"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/modules/FindOpenVDB.cmake", "content": "find_library( openvdb_openvdb_library openvdb\n  paths \"${houdini_lib_dir}\"\n  no_default_path\n  no_system_environment_path\n  )"}]}, {"deps": [{"depname": "hd_rpr_major", "version": "2", "version_op": null, "unified_name": "hd_rpr", "extractor_type": "cmake", "context": "set(hd_rpr_major_version \"2\")", "confidence": "Low"}, {"depname": "hd_rpr_minor", "version": "4", "version_op": null, "unified_name": "hd_rpr", "extractor_type": "cmake", "context": "set(hd_rpr_minor_version \"4\")", "confidence": "Low"}, {"depname": "hd_rpr_patch", "version": "7", "version_op": null, "unified_name": "hd_rpr", "extractor_type": "cmake", "context": "set(hd_rpr_patch_version \"7\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "usdmonolithic", "version": null, "version_op": null, "unified_name": "usdmonolithic", "extractor_type": "cmake", "context": "find_package(usdmonolithic quiet)", "confidence": "High"}, {"depname": "pxr", "version": null, "version_op": null, "unified_name": "pxr", "extractor_type": "cmake", "context": "find_package(pxr config)", "confidence": "High"}, {"depname": "houdiniusd", "version": null, "version_op": null, "unified_name": "houdiniusd", "extractor_type": "cmake", "context": "find_package(houdiniusd)", "confidence": "High"}, {"depname": "rpr", "version": null, "version_op": null, "unified_name": "rpr", "extractor_type": "cmake", "context": "find_package(rpr required)", "confidence": "High"}, {"depname": "rif", "version": null, "version_op": null, "unified_name": "rif", "extractor_type": "cmake", "context": "find_package(rif required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "houdini", "version": null, "version_op": null, "unified_name": "houdini", "extractor_type": "cmake", "context": "find_package(houdini required config paths ${cmake_current_binary_dir})", "confidence": "High"}, {"depname": "pythoninterp", "version": "3.7", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3.7)", "confidence": "High"}, {"depname": "materialx", "version": null, "version_op": null, "unified_name": "materialx", "extractor_type": "cmake", "context": "find_package(materialx quiet)", "confidence": "High"}, {"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}, {"depname": "openvdb", "version": null, "version_op": null, "unified_name": "openvdb", "extractor_type": "cmake", "context": "find_package(openvdb required)", "confidence": "High"}, {"depname": "openvdb", "version": null, "version_op": null, "unified_name": "openvdb", "extractor_type": "cmake", "context": "find_package(openvdb quiet)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr quiet components ${argv})", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr quiet components ${argv})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["usdgenschema.py", "usdgenschema"], "version": "", "fromfile": "GPUOpen-LibrariesAndSDKs@@RadeonProRenderUSD/cmake/defaults/Packages.cmake", "content": "find_program(usd_schema_generator\n        names usdgenschema.py usdgenschema\n        paths ${pxr_dir}/bin\n        required\n        no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "houdini_major_minor", "version": null, "version_op": null, "unified_name": "houdini", "extractor_type": "cmake", "context": "\nset(houdini_major_minor_version \"${houdini_version_major}.${houdini_version_minor}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "usd_minor", "version": "0", "version_op": null, "unified_name": "usd", "extractor_type": "cmake", "context": "set(usd_minor_version \"0\")", "confidence": "Low"}, {"depname": "usd_major", "version": "0", "version_op": null, "unified_name": "usd", "extractor_type": "cmake", "context": "set(usd_major_version \"0\")", "confidence": "Low"}, {"depname": "package", "version": null, "version_op": null, "unified_name": "package", "extractor_type": "cmake", "context": "\n    set(package_version \"${hd_rpr_major_version}.${hd_rpr_minor_version}.${hd_rpr_patch_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pxr", "version": "1", "version_op": null, "unified_name": "pxr", "extractor_type": "cmake", "context": "        set(pxr_version ${cmake_match_1} parent_scope)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}