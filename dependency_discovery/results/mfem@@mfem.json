{"target": "mfem@@mfem", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip required)", "confidence": "High"}, {"depname": "hipsparse", "version": null, "version_op": null, "unified_name": "hipsparse", "extractor_type": "cmake", "context": "find_package(hipsparse required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "hypre", "version": null, "version_op": null, "unified_name": "hypre", "extractor_type": "cmake", "context": "find_package(hypre required)", "confidence": "High"}, {"depname": "petsc", "version": null, "version_op": null, "unified_name": "petsc", "extractor_type": "cmake", "context": "find_package(petsc required)", "confidence": "High"}, {"depname": "slepc", "version": null, "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "find_package(slepc required config)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis required)", "confidence": "High"}, {"depname": "ginkgo", "version": null, "version_op": null, "unified_name": "ginkgo", "extractor_type": "cmake", "context": "find_package(ginkgo required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "mfembacktrace", "version": null, "version_op": null, "unified_name": "mfembacktrace", "extractor_type": "cmake", "context": "find_package(mfembacktrace required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "find_package(suitesparse required\n    umfpack klu amd btf cholmod colamd camd ccolamd config)", "confidence": "High"}, {"depname": "sundials", "version": null, "version_op": null, "unified_name": "sundials", "extractor_type": "cmake", "context": "find_package(sundials required ${sundials_components})", "confidence": "High"}, {"depname": "superludist", "version": null, "version_op": null, "unified_name": "superludist", "extractor_type": "cmake", "context": "find_package(superludist required)", "confidence": "High"}, {"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "find_package(mumps required mumps_common pord)", "confidence": "High"}, {"depname": "strumpack", "version": null, "version_op": null, "unified_name": "strumpack", "extractor_type": "cmake", "context": "find_package(strumpack required)", "confidence": "High"}, {"depname": "_gnutls", "version": null, "version_op": null, "unified_name": "_gnutls", "extractor_type": "cmake", "context": "find_package(_gnutls required)", "confidence": "High"}, {"depname": "gslib", "version": null, "version_op": null, "unified_name": "gslib", "extractor_type": "cmake", "context": "find_package(gslib required)", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf required)", "confidence": "High"}, {"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "find_package(mpfr required)", "confidence": "High"}, {"depname": "libceed", "version": null, "version_op": null, "unified_name": "ceed", "extractor_type": "cmake", "context": "find_package(libceed required)", "confidence": "High"}, {"depname": "amgx", "version": null, "version_op": null, "unified_name": "amgx", "extractor_type": "cmake", "context": "find_package(amgx required)", "confidence": "High"}, {"depname": "conduit", "version": null, "version_op": null, "unified_name": "conduit", "extractor_type": "cmake", "context": "find_package(conduit required conduit relay blueprint)", "confidence": "High"}, {"depname": "fms", "version": null, "version_op": null, "unified_name": "fms", "extractor_type": "cmake", "context": "find_package(fms required fms)", "confidence": "High"}, {"depname": "axom", "version": null, "version_op": null, "unified_name": "axom", "extractor_type": "cmake", "context": "find_package(axom required axom)", "confidence": "High"}, {"depname": "scorec", "version": "2.2.6", "version_op": null, "unified_name": "scorec", "extractor_type": "cmake", "context": "find_package(scorec 2.2.6 required optional_components gmi_sim\n    config paths ${pumi_dir} no_default_path)", "confidence": "High"}, {"depname": "parmoonolith", "version": null, "version_op": null, "unified_name": "parmoonolith", "extractor_type": "cmake", "context": "find_package(parmoonolith required)", "confidence": "High"}, {"depname": "hiop", "version": null, "version_op": null, "unified_name": "hiop", "extractor_type": "cmake", "context": "find_package(hiop required)", "confidence": "High"}, {"depname": "codipack", "version": null, "version_op": null, "unified_name": "codipack", "extractor_type": "cmake", "context": "find_package(codipack required)", "confidence": "High"}, {"depname": "occa", "version": null, "version_op": null, "unified_name": "occa", "extractor_type": "cmake", "context": "find_package(occa required)", "confidence": "High"}, {"depname": "raja", "version": null, "version_op": null, "unified_name": "raja", "extractor_type": "cmake", "context": "find_package(raja required)", "confidence": "High"}, {"depname": "umpire", "version": null, "version_op": null, "unified_name": "umpire", "extractor_type": "cmake", "context": "find_package(umpire required)", "confidence": "High"}, {"depname": "benchmark", "version": null, "version_op": null, "unified_name": "benchmark", "extractor_type": "cmake", "context": "find_package(benchmark required)", "confidence": "High"}, {"depname": "caliper", "version": null, "version_op": null, "unified_name": "caliper", "extractor_type": "cmake", "context": "find_package(caliper required)", "confidence": "High"}, {"depname": "algoim", "version": null, "version_op": null, "unified_name": "algoim", "extractor_type": "cmake", "context": "find_package(algoim required)", "confidence": "High"}, {"depname": "adios2", "version": null, "version_op": null, "unified_name": "adios2", "extractor_type": "cmake", "context": "find_package(adios2 required)", "confidence": "High"}, {"depname": "mkl_cpardiso", "version": null, "version_op": null, "unified_name": "mkl_cpardiso", "extractor_type": "cmake", "context": "find_package(mkl_cpardiso required mkl_sequential mkl_lp64 mkl_mpi_wrapper)", "confidence": "High"}, {"depname": "parelag", "version": null, "version_op": null, "unified_name": "parelag", "extractor_type": "cmake", "context": "find_package(parelag required)", "confidence": "High"}, {"depname": "enzyme", "version": null, "version_op": null, "unified_name": "enzyme", "extractor_type": "cmake", "context": "find_package(enzyme required)", "confidence": "High"}, {"depname": "posixclocks", "version": null, "version_op": null, "unified_name": "posixclocks", "extractor_type": "cmake", "context": "find_package(posixclocks)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "mfem", "version": null, "version_op": null, "unified_name": "mfem", "extractor_type": "cmake", "context": "project(mfem none)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "posixclocks", "version": null, "version_op": null, "unified_name": "posixclocks", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindPOSIXClocks.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["posixclocks"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPOSIXClocks.cmake", "content": "find_library(posixclocks posixclocks \"rt\"\n  \"library required by posix clocks.\" posixclocks_build\n  \"\n\nint main()\n{\n  struct timespec ts;\n  clock_gettime(clock_monotonic, &ts);\n  return 0;\n}\n\")"}]}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindHDF5.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hdf5", "libhdf5", "libhdf5_d", "libhdf5_debug"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindHDF5.cmake", "content": "find_library( __hdf5_library names hdf5 libhdf5 libhdf5_d libhdf5_debug\n              paths ${hdf5_dir}/lib\n              no_default_path\n              no_cmake_environment_path\n              no_cmake_path\n              no_system_environment_path\n              no_cmake_system_path)"}, {"filenames": ["hdf5_hl", "libhdf5_hl", "libhdf5_hl_d", "libhdf5_hl_debug"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindHDF5.cmake", "content": "find_library( __hdf5_hl_library names hdf5_hl libhdf5_hl libhdf5_hl_d libhdf5_hl_debug\n              paths ${hdf5_dir}/lib\n              no_default_path\n              no_cmake_environment_path\n              no_cmake_path\n              no_system_environment_path\n              no_cmake_system_path)"}]}, {"deps": [{"depname": "umpire", "version": null, "version_op": null, "unified_name": "umpire", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindUMPIRE.cmake", "confidence": "High"}, {"depname": "umpire", "version": null, "version_op": null, "unified_name": "umpire", "extractor_type": "cmake", "context": "find_package(umpire config)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "parelag", "version": null, "version_op": null, "unified_name": "parelag", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindPARELAG.cmake", "confidence": "High"}, {"depname": "parelag", "version": null, "version_op": null, "unified_name": "parelag", "extractor_type": "cmake", "context": "find_package(parelag parelag parelag_dir \"\" \"\" \"\" \"\"\n  \"paths to headers required by parelag.\" \"libraries required by parelag.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "axom", "version": null, "version_op": null, "unified_name": "axom", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindAxom.cmake", "confidence": "High"}, {"depname": "axom", "version": null, "version_op": null, "unified_name": "axom", "extractor_type": "cmake", "context": "find_package(axom axom axom_dir \"include\" \"\" \"lib\" \"\"\n  \"paths to headers required by axom.\" \"libraries required by axom.\"\n  add_component axom \"include\" axom/config.hpp \"lib\" axom)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagemultipass", "version": null, "version_op": null, "unified_name": "packagemultipass", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindPackageMultipass.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindSuiteSparse.cmake", "confidence": "High"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "find_package(suitesparse suitesparse suitesparse_dir \"\" \"\" \"\" \"\"\n  \"paths to headers required by suitesparse.\"\n  \"libraries required by suitesparse.\"\n  add_component \"umfpack\" \"include;suitesparse\" umfpack.h \"lib\" umfpack\n  add_component \"klu\" \"include;suitesparse\" klu.h \"lib\" klu\n  add_component \"amd\" \"include;suitesparse\" amd.h \"lib\" amd\n  add_component \"btf\" \"include;suitesparse\" btf.h \"lib\" btf\n  add_component \"cholmod\" \"include;suitesparse\" cholmod.h \"lib\" cholmod\n  add_component \"colamd\" \"include;suitesparse\" colamd.h \"lib\" colamd\n  add_component \"camd\" \"include;suitesparse\" camd.h \"lib\" camd\n  add_component \"ccolamd\" \"include;suitesparse\" ccolamd.h \"lib\" ccolamd\n  add_component \"config\" \"include;suitesparse\" suitesparse_config.h \"lib\"\n    suitesparseconfig)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "benchmark", "version": null, "version_op": null, "unified_name": "benchmark", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindBenchmark.cmake", "confidence": "High"}, {"depname": "benchmark", "version": null, "version_op": null, "unified_name": "benchmark", "extractor_type": "cmake", "context": "find_package(benchmark benchmark benchmark_dir\n        \"include\" \"benchmark/benchmark.h\"\n        \"lib\" \"benchmark\"\n        \"paths to headers required by google benchmark.\"\n        \"libraries required by google benchmark.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "occa", "version": null, "version_op": null, "unified_name": "occa", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindOCCA.cmake", "confidence": "High"}, {"depname": "occa", "version": null, "version_op": null, "unified_name": "occa", "extractor_type": "cmake", "context": "find_package(occa occa occa_dir \"include\" \"occa.hpp\" \"lib\" \"occa\"\n  \"paths to headers required by occa.\" \"libraries required by occa.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hiop", "version": null, "version_op": null, "unified_name": "hiop", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindHIOP.cmake", "confidence": "High"}, {"depname": "hiop", "version": null, "version_op": null, "unified_name": "hiop", "extractor_type": "cmake", "context": "find_package(hiop hiop hiop_dir\n  \"include\" \"hiopinterface.hpp\"\n  \"lib\" \"hiop\"\n  \"paths to headers required by hiop.\"\n  \"libraries required by hiop.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cxxabidemangle", "version": null, "version_op": null, "unified_name": "cxxabidemangle", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindCXXABIDemangle.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cxxabidemangle"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindCXXABIDemangle.cmake", "content": "find_library(cxxabidemangle cxxabidemangle \"\"\n \"library required for abi::__cxa_demangle.\" cxxabidemangle_build\n  \"\n\nint main()\n{\n  int demangle_status;\n  const char name[] = \\\"__zn4mfem10mfem_errorepkc\\\";\n  char *name_demangle =\n    abi::__cxa_demangle(name, null, null, &demangle_status);\n  return 0;\n}\n\")"}]}, {"deps": [{"depname": "strumpack", "version": null, "version_op": null, "unified_name": "strumpack", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindSTRUMPACK.cmake", "confidence": "High"}, {"depname": "strumpack", "version": null, "version_op": null, "unified_name": "strumpack", "extractor_type": "cmake", "context": "find_package(strumpack strumpack strumpack_dir\n  \"include\" \"strumpacksparsesolvermpidist.hpp\"\n  \"lib\" \"strumpack;strumpack_sparse\" \n  \"paths to headers required by strumpack.\"\n  \"libraries required by strumpack.\"\n  check_build strumpack_version_ok true\n\"\n\nusing namespace strumpack;\nint main(int argc, char *argv[])\n{\n   mpi_init(&argc, &argv);\n   mpi_comm comm = mpi_comm_world;\n   strumpacksparsesolvermpidist<double,int> solver(comm, argc, argv, false);\n   solver.options().set_from_command_line();\n   return 0;\n}\n\"\n  )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "slepc", "version": null, "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindSLEPc.cmake", "confidence": "High"}, {"depname": "slepc", "version": null, "version_op": null, "unified_name": "slepc", "extractor_type": "cmake", "context": "find_package(slepc slepc slepc_dir\n  \"include\" \"slepceps.h\"\n  \"${petsc_arch}/lib\" \"slepc\" \n  \"paths to headers required by slepc.\"\n  \"libraries required by slepc.\"\n  add_component \"config\" \"${petsc_arch}/include\" \"slepcconf.h\" \"\" \"\"\n  check_build slepc_version_ok true\n\"\n\n\nint main()\n{\n  petscerrorcode ierr;\n  int argc = 0;\n  char** argv = null;\n  ierr = slepcinitialize(&argc, &argv, petsc_null, petsc_null);\n  eps eps;\n  ierr = epscreate(petsc_comm_self, &eps); chkerrq(ierr);\n  ierr = epsdestroy(&eps); chkerrq(ierr);\n  ierr = slepcfinalize(); chkerrq(ierr);\n  return 0;\n}\n\"\n  )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${packname}", "version": null, "version_op": null, "unified_name": "${packname}", "extractor_type": "cmake", "context": "find_package(${packname} quiet components ${packcomps})", "confidence": "High"}, {"depname": "${packname}", "version": null, "version_op": null, "unified_name": "${packname}", "extractor_type": "cmake", "context": "find_package(${packname}  quiet components ${packcomps})", "confidence": "High"}, {"depname": "${_target}", "version": null, "version_op": null, "unified_name": "${_target}", "extractor_type": "cmake", "context": "find_package(${_target} names ${_target} ${packname} quiet\n              components ${packcomps})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/MfemCmakeUtilities.cmake", "content": "find_library(${prefix}_library ${lib}\n        hints ${${dirvar}} env ${dirvar}\n        path_suffixes ${libsuffixes}\n        no_default_path\n        doc \"${libdoc}\")"}, {"filenames": ["${lib}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/MfemCmakeUtilities.cmake", "content": "find_library(${prefix}_library ${lib}\n      path_suffixes ${libsuffixes}\n      doc \"${libdoc}\")"}, {"filenames": ["${libname}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/MfemCmakeUtilities.cmake", "content": "find_library(lib ${libname} paths ${pumi_dir}/lib no_default_path)"}]}, {"deps": [{"depname": "amgx", "version": null, "version_op": null, "unified_name": "amgx", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindAMGX.cmake", "confidence": "High"}, {"depname": "amgx", "version": null, "version_op": null, "unified_name": "amgx", "extractor_type": "cmake", "context": "find_package(amgx amgx amgx_dir \"include\" \"amgx_c.h\" \"lib\" \"amgx\"\n  \"paths to headers required by amgx.\" \"libraries required by amgx.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "superludist", "version": null, "version_op": null, "unified_name": "superludist", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindSuperLUDist.cmake", "confidence": "High"}, {"depname": "superludist", "version": null, "version_op": null, "unified_name": "superludist", "extractor_type": "cmake", "context": "find_package(superludist superludist superludist_dir\n  \"include;src;superlu\" \"superlu_defs.h;slu_ddefs.h\"\n  \"lib;src\" \"superludist;superlu_dist;superlu_dist_4.3\" \n  \"paths to headers required by superlu_dist.\"\n  \"libraries required by superlu_dist.\"\n  check_build superludist_version_ok true\n  \"\n\nint main()\n{\n  superlu_dist_options_t opts;\n  return 0;\n}\n\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindMUMPS.cmake", "confidence": "High"}, {"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "find_package(mumps mumps mumps_dir\n  \"include\" dmumps_c.h \"lib\" dmumps\n  \"paths to headers required by mumps.\"\n  \"libraries required by mumps.\"\n  add_component mumps_common \"include\" dmumps_c.h \"lib\" mumps_common\n  add_component pord \"include\" dmumps_c.h \"lib\" pord)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sundials", "version": null, "version_op": null, "unified_name": "sundials", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindSUNDIALS.cmake", "confidence": "High"}, {"depname": "sundials", "version": null, "version_op": null, "unified_name": "sundials", "extractor_type": "cmake", "context": "find_package(sundials sundials sundials_dir\n  \"include\" sundials/sundials_config.h \"lib\" \"\"\n  \"paths to headers required by sundials.\" \"libraries required by sundials.\"\n  add_component nvector_serial\n    \"include\" nvector/nvector_serial.h \"lib\" sundials_nvecserial\n  add_component nvector_cuda\n    \"include\" nvector/nvector_cuda.h \"lib\" sundials_nveccuda\n  add_component nvector_parhyp\n    \"include\" nvector/nvector_parhyp.h \"lib\" sundials_nvecparhyp\n  add_component nvector_parallel\n    \"include\" nvector/nvector_parallel.h \"lib\" sundials_nvecparallel\n  add_component nvector_mpiplusx\n    \"include\" nvector/nvector_mpiplusx.h \"lib\" sundials_nvecmpiplusx\n  add_component cvode \"include\" cvode/cvode.h \"lib\" sundials_cvode\n  add_component cvodes \"include\" cvodes/cvodes.h \"lib\" sundials_cvodes\n  add_component arkode \"include\" arkode/arkode.h \"lib\" sundials_arkode\n  add_component kinsol \"include\" kinsol/kinsol.h \"lib\" sundials_kinsol)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libdl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindLIBDL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libdl"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindLIBDL.cmake", "content": "find_library(libdl libdl \"dl\" \"the dynamic library.\" libdl_build\n  \"\n\n\nint main()\n{\n  dl_info info;\n  dladdr((void*)0, &info);\n  return 0;\n}\n\")"}]}, {"deps": [{"depname": "mkl_cpardiso", "version": null, "version_op": null, "unified_name": "mkl_cpardiso", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindMKL_CPARDISO.cmake", "confidence": "High"}, {"depname": "mkl_cpardiso", "version": null, "version_op": null, "unified_name": "mkl_cpardiso", "extractor_type": "cmake", "context": "find_package(mkl_cpardiso mkl_cpardiso\n    mkl_cpardiso_dir \"include\" mkl_cluster_sparse_solver.h lib mkl_core\n  \"paths to headers required by mkl cpardiso.\" \"libraries required by mkl cpardiso.\"\n  add_component mkl_lp64 \"include\" \"\" lib mkl_intel_lp64\n  add_component mkl_sequential \"include\" \"\" lib mkl_sequential\n  add_component mkl_mpi_wrapper \"include\" \"\" lib ${mkl_mpi_wrapper_lib})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "adios2", "version": null, "version_op": null, "unified_name": "adios2", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindADIOS2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["adios2", "${adios2_library_opts}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindADIOS2.cmake", "content": "find_library(adios2_library names adios2 ${adios2_library_opts})"}, {"filenames": ["adios2_cxx11_mpi", "${adios2_library_opts}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindADIOS2.cmake", "content": "find_library(adios2_cxx11_mpi_library names adios2_cxx11_mpi ${adios2_library_opts})"}, {"filenames": ["adios2_cxx11", "${adios2_library_opts}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindADIOS2.cmake", "content": "find_library(adios2_cxx11_library names adios2_cxx11 ${adios2_library_opts})"}]}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindMETIS.cmake", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis metis metis_dir \"include;lib\" \"metis.h\"\n  \"lib\" \"metis;metis4;metis5\"\n  \"paths to headers required by metis.\" \"libraries required by metis.\"\n  check_build metis_version_5 false\n  \"\n\n\n\nint main()\n{\n    idx_t n = 10;\n    idx_t nparts = 5;\n    idx_t edgecut;\n    idx_t* partitioning = new idx_t[10];\n    idx_t* i = partitioning,\n       * j = partitioning;\n\n    idx_t ncon = 1;\n    int err;\n    idx_t options[40];\n\n    metis_setdefaultoptions(options);\n    options[10] = 1; // set metis_option_contig\n\n    err = metis_partgraphkway(&n,\n                              &ncon,\n                              i,\n                              j,\n                              (idx_t *) null,\n                              (idx_t *) null,\n                              (idx_t *) null,\n                              &nparts,\n                              (real_t *) null,\n                              (real_t *) null,\n                              options,\n                              &edgecut,\n                              partitioning);\n    return err;\n}\n\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "_gnutls", "version": null, "version_op": null, "unified_name": "_gnutls", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/Find_GnuTLS.cmake", "confidence": "High"}, {"depname": "_gnutls", "version": null, "version_op": null, "unified_name": "_gnutls", "extractor_type": "cmake", "context": "find_package(_gnutls gnutls gnutls_dir \"include\" gnutls/gnutls.h\n  \"lib\" \"gnutls;libgnutls\"\n  \"paths to headers required by gnutls.\" \"libraries required by gnutls.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "caliper", "version": null, "version_op": null, "unified_name": "caliper", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindCaliper.cmake", "confidence": "High"}, {"depname": "caliper", "version": null, "version_op": null, "unified_name": "caliper", "extractor_type": "cmake", "context": "find_package(caliper caliper caliper_dir\n      \"include\" \"caliper/cali.h\"\n      \"lib\" \"caliper\"\n      \"paths to headers required by caliper.\"\n      \"libraries required by caliper.\")", "confidence": "High"}, {"depname": "adiak", "version": null, "version_op": null, "unified_name": "adiak", "extractor_type": "cmake", "context": "find_package(adiak no_default_path required paths ${adiak_dir}/lib/cmake/adiak ${adiak_dir})", "confidence": "High"}, {"depname": "gotcha", "version": null, "version_op": null, "unified_name": "gotcha", "extractor_type": "cmake", "context": "find_package(gotcha no_default_path required paths ${gotcha_dir}/lib/cmake/gotcha ${gotcha_dir})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${libname}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/ResolveCompilerPaths.cmake", "content": "find_library (_lib ${libname} hints  )"}]}, {"deps": [{"depname": "codipack", "version": null, "version_op": null, "unified_name": "codipack", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindCODIPACK.cmake", "confidence": "High"}, {"depname": "codipack", "version": null, "version_op": null, "unified_name": "codipack", "extractor_type": "cmake", "context": "find_package(codipack codipack codipack_dir\n  \"include\" \"codi.h\"\n  \"lib\" \"\"\n  \"paths to headers required by codipack.\"\n  \"libraries required by codipack.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "raja", "version": null, "version_op": null, "unified_name": "raja", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindRAJA.cmake", "confidence": "High"}, {"depname": "raja", "version": null, "version_op": null, "unified_name": "raja", "extractor_type": "cmake", "context": "find_package(raja config no_default_path paths \"${raja_dir}\")", "confidence": "High"}, {"depname": "raja", "version": null, "version_op": null, "unified_name": "raja", "extractor_type": "cmake", "context": "find_package(raja config)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gslib", "version": null, "version_op": null, "unified_name": "gslib", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindGSLIB.cmake", "confidence": "High"}, {"depname": "gslib", "version": null, "version_op": null, "unified_name": "gslib", "extractor_type": "cmake", "context": "find_package(gslib gslib gslib_dir \"include\" gslib.h \"lib\" gs\n  \"paths to headers required by gslib.\" \"libraries required by gslib.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "algoim", "version": null, "version_op": null, "unified_name": "algoim", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindAlgoim.cmake", "confidence": "High"}, {"depname": "algoim", "version": null, "version_op": null, "unified_name": "algoim", "extractor_type": "cmake", "context": "find_package(algoim algoim algoim_dir\n        \"include;src\" \"algoim_quad.hpp\"\n       \t\"\" \"\"\n        \"paths to headers required by algoim.\"\n        \"libraries required by algoim.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindScotch.cmake", "confidence": "High"}, {"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "find_package(scotch scotch scotch_dir \"\" \"\" \"\" \"\"\n  \"paths to headers required by scotch.\"\n  \"libraries required by scotch.\"\n  add_component \"scotch\" \"include\" scotch.h \"lib\" scotch\n  add_component \"scotcherr\" \"\" \"\" \"lib\" scotcherr\n  add_component \"scotcherrexit\" \"\" \"\" \"lib\" scotcherrexit\n  add_component \"scotchmetis\" \"include\" \"metis.h\" \"lib\" scotchmetis\n  add_component \"ptscotch\" \"include\" ptscotch.h \"lib\" ptscotch\n  add_component \"ptscotcherr\" \"\" \"\" \"lib\" ptscotcherr\n  add_component \"ptscotcherrexit\" \"\" \"\" \"lib\" ptscotcherrexit\n  add_component \"ptscotchparmetis\" \"include\" \"parmetis.h\" \"lib\" ptscotchparmetis\n  )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "conduit", "version": null, "version_op": null, "unified_name": "conduit", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindConduit.cmake", "confidence": "High"}, {"depname": "conduit", "version": null, "version_op": null, "unified_name": "conduit", "extractor_type": "cmake", "context": "find_package(conduit conduit conduit_dir\n  \"include;include/conduit\" conduit.hpp \"lib\" conduit\n  \"paths to headers required by conduit.\" \"libraries required by conduit.\"\n  add_component relay\n    \"include;include/conduit\" conduit_relay.hpp \"lib\" conduit_relay\n  add_component blueprint\n    \"include;include/conduit\" conduit_blueprint.hpp \"lib\" conduit_blueprint)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mfembacktrace", "version": null, "version_op": null, "unified_name": "mfembacktrace", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindMFEMBacktrace.cmake", "confidence": "High"}, {"depname": "mfembacktrace", "version": null, "version_op": null, "unified_name": "mfembacktrace", "extractor_type": "cmake", "context": "find_package(mfembacktrace mfembacktrace mfembacktrace_dir \"\" \"\" \"\" \"\"\n  \"paths to headers required by mfem backtrace.\"\n  \"libraries required by mfem backtrace.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindParMETIS.cmake", "confidence": "High"}, {"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "find_package(parmetis parmetis parmetis_dir \"include\" parmetis.h\n  \"lib\" parmetis\n  \"paths to headers required by parmetis.\" \"libraries required by parmetis.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindMPFR.cmake", "confidence": "High"}, {"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "find_package(mpfr mpfr mpfr_dir \"include\" mpfr.h \"lib\" mpfr\n  \"paths to headers required by mpfr.\" \"libraries required by mpfr.\")", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpfr"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindMPFR.cmake", "content": "find_library(mpfr mpfr \"mpfr\" \"the mpfr library.\" mpfr_build\n  \"\n\nint main()\n{\n  mpfr_t one;\n  mpfr_init2(one, 128);\n  mpfr_set_si(one, 1, gmp_rndn);\n  mpfr_clear(one);\n  return 0;\n}\n\")"}]}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindNetCDF.cmake", "confidence": "High"}, {"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf netcdf netcdf_dir \"include\" netcdf.h \"lib\" netcdf\n  \"paths to headers required by netcdf.\" \"libraries required by netcdf.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "petsc", "version": null, "version_op": null, "unified_name": "petsc", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${name}"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (petsc_library_${suffix} names ${name} hints ${petsc_lib_dir} no_default_path)"}, {"filenames": ["petscvec"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (vec petscvec)"}, {"filenames": ["\"petscsys;petsc\""], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (sys  \"petscsys;petsc\")"}, {"filenames": ["petscmat"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (mat  petscmat)"}, {"filenames": ["petscdm"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (dm   petscdm)"}, {"filenames": ["petscksp"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (ksp  petscksp)"}, {"filenames": ["petscsnes"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (snes petscsnes)"}, {"filenames": ["petscts"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (ts   petscts)"}, {"filenames": ["petsc"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_library (single petsc)"}, {"filenames": ["make", "gmake"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindPETSc.cmake", "content": "find_program (make_executable names make gmake)"}]}, {"deps": [{"depname": "fms", "version": null, "version_op": null, "unified_name": "fms", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindFMS.cmake", "confidence": "High"}, {"depname": "fms", "version": null, "version_op": null, "unified_name": "fms", "extractor_type": "cmake", "context": "find_package(fms fms fms_dir\n  \"include\" fms.h \"lib\" fms\n  \"paths to headers required by fms.\" \"libraries required by fms.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hypre", "version": null, "version_op": null, "unified_name": "hypre", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindHYPRE.cmake", "confidence": "High"}, {"depname": "rocsparse", "version": null, "version_op": null, "unified_name": "rocsparse", "extractor_type": "cmake", "context": "find_package(rocsparse required)", "confidence": "High"}, {"depname": "rocrand", "version": null, "version_op": null, "unified_name": "rocrand", "extractor_type": "cmake", "context": "find_package(rocrand required)", "confidence": "High"}, {"depname": "hypre", "version": null, "version_op": null, "unified_name": "hypre", "extractor_type": "cmake", "context": "find_package(hypre hypre hypre_dir \"include\" \"hypre.h\" \"lib\" \"hypre\"\n  \"paths to headers required by hypre.\" \"libraries required by hypre.\"\n  check_build hypre_using_hip false\n  \"\n\n\n\n\n\n\n\nint main()\n{\n   return 0;\n}\n\")", "confidence": "High"}, {"depname": "rocsparse", "version": null, "version_op": null, "unified_name": "rocsparse", "extractor_type": "cmake", "context": "find_package(rocsparse required)", "confidence": "High"}, {"depname": "rocrand", "version": null, "version_op": null, "unified_name": "rocrand", "extractor_type": "cmake", "context": "find_package(rocrand required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindLibunwind.cmake", "confidence": "High"}, {"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake", "context": "find_package(libunwind libunwind libunwind_dir \"include\" libunwind.h\n  \"lib\" unwind\n  \"paths to headers required by libunwind.\" \"libraries required by libunwind.\")", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libunwind"], "version": "", "fromfile": "mfem@@mfem/config/cmake/modules/FindLibunwind.cmake", "content": "find_library(libunwind libunwind \"unwind\" \"the libunwind library.\"\n  libunwind_build\n  \"\n\n\nint main()\n{\n  unw_context_t uc;\n  unw_getcontext(&uc);\n  return 0;\n}\n\")"}]}, {"deps": [{"depname": "blitz", "version": null, "version_op": null, "unified_name": "blitz", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindBlitz.cmake", "confidence": "High"}, {"depname": "blitz", "version": null, "version_op": null, "unified_name": "blitz", "extractor_type": "cmake", "context": "find_package(blitz blitz blitz_dir\n       \t\"include\" \"blitz/blitz.h\"\n       \t\"lib\" \"blitz\"\n  \t\"paths to headers required by blitz.\"\n       \t\"libraries required by blitz.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libceed", "version": null, "version_op": null, "unified_name": "ceed", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindlibCEED.cmake", "confidence": "High"}, {"depname": "libceed", "version": null, "version_op": null, "unified_name": "ceed", "extractor_type": "cmake", "context": "find_package(libceed ceed ceed_dir \"include\" ceed.h \"lib\" ceed\n  \"paths to headers required by libceed.\" \"libraries required by libceed.\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "enzyme", "version": null, "version_op": null, "unified_name": "enzyme", "extractor_type": "cmake", "context": "mfem@@mfem/config/cmake/modules/FindENZYME.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "metis", "version": "5.1.0", "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "\nset(metis_version 5.1.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "vcpkg"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "mfem", "version": null, "version_op": null, "unified_name": "mfem", "extractor_type": "cmake", "context": "project(mfem-unit-tests none)", "confidence": ""}], "type": "cmake", "libs": []}]}