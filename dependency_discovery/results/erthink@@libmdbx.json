{"target": "erthink@@libmdbx", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "libmdbx", "version": null, "version_op": null, "unified_name": "mdbx", "extractor_type": "cmake", "context": "  project(libmdbx c)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(git git)"}, {"filenames": ["valgrind"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(valgrind valgrind)"}, {"filenames": ["ctags"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(ctags ctags)"}, {"filenames": ["clang-format-13", "clang-format"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(clang_format\n        names clang-format-13 clang-format)"}, {"filenames": ["${msvc_lib_exe}"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(msvc_lib_exe ${msvc_lib_exe})"}, {"filenames": ["${dlltool_name}"], "version": "", "fromfile": "erthink@@libmdbx/CMakeLists.txt", "content": "find_program(dlltool names ${dlltool_name})"}]}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "${bfd_library}", "version": null, "version_op": null, "unified_name": "${bfd_library}", "extractor_type": "cmake", "context": "check_library_exists(${bfd_library} bfd_init \"\" have_bfd_lib)", "confidence": "High"}, {"depname": "${iberty_library}", "version": null, "version_op": null, "unified_name": "${iberty_library}", "extractor_type": "cmake", "context": "check_library_exists(${iberty_library} cplus_demangle \"\" have_iberty_lib)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libbfd.a"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_library(bfd_library names libbfd.a)"}, {"filenames": ["libiberty.a"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_library(iberty_library names libiberty.a)"}, {"filenames": ["\"gcc-ar\"", "\"gcc-ar\""], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_gcc_ar names \"gcc-ar\" \"gcc-ar\" paths \"${gcc_dir}\" no_default_path)"}, {"filenames": ["\"gcc-nm\"", "\"gcc-nm\""], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_gcc_nm names \"gcc-nm\" \"gcc-nm\" paths \"${gcc_dir}\" no_default_path)"}, {"filenames": ["\"gcc-ranlib\"", "\"gcc-ranlib\""], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_gcc_ranlib names \"gcc-ranlib\" \"gcc-ranlib\" paths \"${gcc_dir}\" no_default_path)"}, {"filenames": ["lld-link", "ld.lld", "\"ld64.lld\"", "lld", "llvm-link", "llvm-ld"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_clang_ld names lld-link ld.lld \"ld64.lld\" lld llvm-link llvm-ld paths ${clang_bindirs} no_default_path)"}, {"filenames": ["llvm-ar", "ar"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_clang_ar names llvm-ar ar paths ${clang_bindirs} no_default_path)"}, {"filenames": ["llvm-nm", "nm"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_clang_nm names llvm-nm nm paths ${clang_bindirs} no_default_path)"}, {"filenames": ["llvm-ranlib", "ranlib"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_clang_ranlib names llvm-ranlib ranlib paths ${clang_bindirs} no_default_path)"}, {"filenames": ["ld.gold"], "version": "", "fromfile": "erthink@@libmdbx/cmake/compiler.cmake", "content": "find_program(cmake_ld_gold names ld.gold paths ${clang_bindirs})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gcov", "version": null, "version_op": null, "unified_name": "gcov", "extractor_type": "cmake", "context": "check_library_exists(gcov __gcov_flush \"\" have_gcov)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "mdbx", "version": null, "version_op": null, "unified_name": "mdbx", "extractor_type": "cmake", "context": "project(mdbx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mdbx_example", "version": null, "version_op": null, "unified_name": "mdbx_example", "extractor_type": "cmake", "context": "project(mdbx_example)", "confidence": ""}], "type": "cmake", "libs": []}]}