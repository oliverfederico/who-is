{"target": "AshamaneProject@@AshamaneCore", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pchsupport", "version": null, "version_op": null, "unified_name": "pchsupport", "extractor_type": "cmake", "context": "find_package(pchsupport)", "confidence": "High"}, {"depname": "mysql", "version": null, "version_op": null, "unified_name": "mysql", "extractor_type": "cmake", "context": "find_package(mysql)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "ashamanecore", "version": null, "version_op": null, "unified_name": "ashamanecore", "extractor_type": "cmake", "context": "project(ashamanecore)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gcc_expected", "version": "6.3.0", "version_op": null, "unified_name": "gcc_expected", "extractor_type": "cmake", "context": "\nset(gcc_expected_version 6.3.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "msvc_expected", "version": "19.24", "version_op": null, "unified_name": "msvc_expected", "extractor_type": "cmake", "context": "\nset(msvc_expected_version 19.24)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pchsupport", "version": null, "version_op": null, "unified_name": "pchsupport", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindPCHSupport.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindGit.cmake", "confidence": "High"}, {"depname": "required_git", "version": "1.7", "version_op": null, "unified_name": "required_git", "extractor_type": "cmake", "context": "\nset(_required_git_version \"1.7\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["git", "git.cmd"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindGit.cmake", "content": "find_program(git_executable\n  names\n    git git.cmd\n  hints\n    env path\n  doc \"full path to git commandline client\"\n)"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindPackageHandleStandardArgs.cmake", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename>)", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename> no_module)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 quiet no_module hints /opt/automoc4)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 no_module)", "confidence": "High"}, {"depname": "found", "version": null, "version_op": null, "unified_name": "found", "extractor_type": "cmake", "context": "      set(_found_version ${${_name}_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mysql", "version": null, "version_op": null, "unified_name": "mysql", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mysql", "libmysql", "${lib}"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_library( mysql_library\n      names\n        mysql libmysql ${lib}\n      paths\n        \n        /usr/lib\n        /usr/lib/mysql\n        /usr/local/lib\n        /usr/local/lib/mysql\n        /usr/local/mysql/lib\n      doc \"specify the location of the mysql library here.\"\n    )"}, {"filenames": ["libmysql"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_library( mysql_library\n    names\n      libmysql\n    paths\n      \n      \"$env{programw6432}/mysql/mysql server 8.0/lib\"\n      \"$env{programw6432}/mysql/mysql server 5.7/lib\"\n      \"$env{programw6432}/mysql/mysql server 5.6/lib\"\n      \"$env{programw6432}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programw6432}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{programw6432}/mysql/mysql server 5.6/lib/opt\"\n      \"$env{programw6432}/mysql/lib\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib\"\n      \"$env{programfiles}/mysql/mysql server 5.6/lib\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.6/lib/opt\"\n      \"$env{programfiles}/mysql/lib\"\n      \"c:/mysql/lib/debug\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.6;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.6;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.6;location]/lib\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/lib/opt\"\n      \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.6;location]/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{programfiles}/mysql/mysql server 5.6/lib/opt\"\n      \"$env{systemdrive}/mysql/mysql server 8.0/lib/opt\"\n      \"$env{systemdrive}/mysql/mysql server 5.7/lib/opt\"\n      \"$env{systemdrive}/mysql/mysql server 5.6/lib/opt\"\n      \"c:/msys/local/include\"\n      \"$env{mysql_root}/lib\"\n    doc \"specify the location of the mysql library here.\"\n  )"}, {"filenames": ["z", "zlib"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_library( mysql_extra_libraries\n    names\n      z zlib\n    paths\n      /usr/lib\n      /usr/local/lib\n    doc\n      \"if more libraries are necessary to link in a mysql client (typically zlib), specify them here.\"\n  )"}, {"filenames": ["mysql_config"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_config mysql_config\n    ${mysql_config_prefer_path}\n    /usr/local/mysql/bin/\n    /usr/local/bin/\n    /usr/bin/\n  )"}, {"filenames": ["mysql"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_executable mysql\n    paths\n        ${mysql_config_prefer_path}\n        /usr/local/mysql/bin/\n        /usr/local/bin/\n        /usr/bin/\n    doc\n        \"path to your mysql binary.\"\n    )"}, {"filenames": ["mysql"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindMySQL.cmake", "content": "find_program(mysql_executable mysql\n      paths\n        \"$env{programw6432}/mysql/mysql server 8.0/bin\"\n        \"$env{programw6432}/mysql/mysql server 5.7/bin\"\n        \"$env{programw6432}/mysql/mysql server 5.6/bin\"\n        \"$env{programw6432}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programw6432}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{programw6432}/mysql/mysql server 5.6/bin/opt\"\n        \"$env{programw6432}/mysql/bin\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin\"\n        \"$env{programfiles}/mysql/mysql server 5.6/bin\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.6/bin/opt\"\n        \"$env{programfiles}/mysql/bin\"\n        \"c:/mysql/bin/debug\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.6;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 8.0;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.7;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\mysql ab\\\\mysql server 5.6;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.6;location]/bin\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 8.0;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.7;location]/bin/opt\"\n        \"[hkey_local_machine\\\\software\\\\wow6432node\\\\mysql ab\\\\mysql server 5.6;location]/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{programfiles}/mysql/mysql server 5.6/bin/opt\"\n        \"$env{systemdrive}/mysql/mysql server 8.0/bin/opt\"\n        \"$env{systemdrive}/mysql/mysql server 5.7/bin/opt\"\n        \"$env{systemdrive}/mysql/mysql server 5.6/bin/opt\"\n        \"c:/msys/local/include\"\n        \"$env{mysql_root}/bin\"\n     doc\n        \"path to your mysql binary.\"\n    )"}]}, {"deps": [{"depname": "packagemessage", "version": null, "version_op": null, "unified_name": "packagemessage", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindPackageMessage.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "confidence": "High"}, {"depname": "openssl_expected", "version": "1.0", "version_op": null, "unified_name": "openssl_expected", "extractor_type": "cmake", "context": "\nset(openssl_expected_version \"1.0\")", "confidence": "Low"}, {"depname": "openssl_max", "version": "1.2", "version_op": null, "unified_name": "openssl_max", "extractor_type": "cmake", "context": "set(openssl_max_version \"1.2\")", "confidence": "Low"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "    set(openssl_version \"${_openssl_version}\")", "confidence": "Low"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "\n    set(openssl_version \"${openssl_version_major}.${openssl_version_minor}.${openssl_version_fix}${openssl_version_patch_string}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["libcrypto32mdd", "libeay32mdd", "libeay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay_debug\n      names\n        libcrypto32mdd libeay32mdd libeay32\n      paths\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["libcrypto32md", "libeay32md", "libeay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay_release\n      names\n        libcrypto32md libeay32md libeay32\n      paths\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["libssl32mdd", "ssleay32mdd", "ssleay32", "ssl"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay_debug\n      names\n        libssl32mdd ssleay32mdd ssleay32 ssl\n      paths\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["libssl32md", "ssleay32md", "ssleay32", "ssl"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay_release\n      names\n        libssl32md ssleay32md ssleay32 ssl\n      paths\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["libeay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay\n      names\n        libeay32\n      paths\n        ${openssl_root_dir}/lib/mingw\n    )"}, {"filenames": ["names", "ssleay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay names\n      names\n        ssleay32\n      paths\n        ${openssl_root_dir}/lib/mingw\n    )"}, {"filenames": ["libeay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(lib_eay\n      names\n        libeay32\n      paths\n        ${openssl_root_dir}/lib\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["ssleay32"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(ssl_eay\n      names\n        ssleay32\n      paths\n        ${openssl_root_dir}/lib\n        ${openssl_root_dir}/lib/vc\n    )"}, {"filenames": ["ssl", "ssleay32", "ssleay32md"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_libraries names ssl ssleay32 ssleay32md)"}, {"filenames": ["crypto"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/cmake/macros/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_libraries names crypto)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "protoc_bnet", "version": null, "version_op": null, "unified_name": "protoc_bnet", "extractor_type": "cmake", "context": "project(protoc_bnet)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "openssl_expected", "version": "1.0.0", "version_op": null, "unified_name": "openssl_expected", "extractor_type": "cmake", "context": "set(openssl_expected_version 1.0.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["readline"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/readline/CMakeLists.txt", "content": "find_library(readline_library names readline)"}]}, {"deps": [{"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "find_package(bzip2 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": "1.58", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.58 required system filesystem thread program_options iostreams regex)", "confidence": "High"}, {"depname": "boost_required", "version": "1.66", "version_op": null, "unified_name": "boost_required", "extractor_type": "cmake", "context": "  set(boost_required_version 1.66)", "confidence": "Low"}, {"depname": "boost_required", "version": "1.58", "version_op": null, "unified_name": "boost_required", "extractor_type": "cmake", "context": "  set(boost_required_version 1.58)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cotire_cmake_module", "version": "1.7.10", "version_op": null, "unified_name": "cotire_cmake_module", "extractor_type": "cmake", "context": "set (cotire_cmake_module_version \"1.7.10\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cpr"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/cpr-config.cmake", "content": "find_library(cpr_library\n             names cpr\n             hints ${cpr_library_root})"}]}, {"deps": [{"depname": "cpr", "version": null, "version_op": null, "unified_name": "cpr", "extractor_type": "cmake", "context": "project(cpr cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cares", "version": null, "version_op": null, "unified_name": "cares", "extractor_type": "cmake", "context": "find_package(cares required)", "confidence": "High"}, {"depname": "perl", "version": null, "version_op": null, "unified_name": "perl", "extractor_type": "cmake", "context": "find_package(perl)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "find_package(mbedtls required)", "confidence": "High"}, {"depname": "nghttp2", "version": null, "version_op": null, "unified_name": "nghttp2", "extractor_type": "cmake", "context": "find_package(nghttp2 required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib quiet)", "confidence": "High"}, {"depname": "libssh2", "version": null, "version_op": null, "unified_name": "ssh2", "extractor_type": "cmake", "context": "find_package(libssh2)", "confidence": "High"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "find_package(gss)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "project( curl c )", "confidence": ""}, {"depname": "\"c\"", "version": null, "version_op": null, "unified_name": "\"c\"", "extractor_type": "cmake", "context": "check_library_exists(\"c\" gethostbyname \"\" not_need_libnsl)", "confidence": "High"}, {"depname": "\"\"", "version": null, "version_op": null, "unified_name": "\"\"", "extractor_type": "cmake", "context": "check_library_exists(\"\" dlopen \"\" have_dlopen)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"corefoundation\""], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMakeLists.txt", "content": "find_library(corefoundation_framework \"corefoundation\")"}, {"filenames": ["\"security\""], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMakeLists.txt", "content": "find_library(security_framework \"security\")"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gcc", "version": null, "version_op": null, "unified_name": "gcc", "extractor_type": "cmake", "context": "            set(gcc_version ${cmake_c_compiler_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cares", "version": null, "version_op": null, "unified_name": "cares", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindCARES.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${cares_names}"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindCARES.cmake", "content": "find_library(cares_library\n  names ${cares_names}\n  paths /usr/lib /usr/local/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nghttp2", "version": null, "version_op": null, "unified_name": "nghttp2", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindNGHTTP2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nghttp2"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindNGHTTP2.cmake", "content": "find_library(nghttp2_library names nghttp2)"}]}, {"deps": [{"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindMbedTLS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mbedtls"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindMbedTLS.cmake", "content": "find_library(mbedtls_library mbedtls)"}, {"filenames": ["mbedx509"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindMbedTLS.cmake", "content": "find_library(mbedx509_library mbedx509)"}, {"filenames": ["mbedcrypto"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindMbedTLS.cmake", "content": "find_library(mbedcrypto_library mbedcrypto)"}]}, {"deps": [{"depname": "\"${library};${curl_libs}\"", "version": null, "version_op": null, "unified_name": "\"${library};${curl_libs}\"", "extractor_type": "cmake", "context": "check_library_exists(\"${library};${curl_libs}\" ${symbol} \"${cmake_library_path}\"\n    ${variable})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gnroff", "nroff"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/Macros.cmake", "content": "find_program(nroff names gnroff nroff)"}]}, {"deps": [{"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindGSS.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "gss", "version": "0", "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "            set(_gss_version 0)", "confidence": "Low"}, {"depname": "gss", "version": "5", "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "        set(_gss_version _gss_pkg_mit-krb5-gssapi_version)", "confidence": "Low"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "        set(_gss_version _gss_pkg_${_mit_heimdal}_version)", "confidence": "Low"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "set(gss_version _gss_pkg_${_mit_heimdal}_version)", "confidence": "Low"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "            set(gss_version \"heimdal unknown\")", "confidence": "Low"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "            set(gss_version \"${_mit_version}\")", "confidence": "Low"}, {"depname": "gss", "version": null, "version_op": null, "unified_name": "gss", "extractor_type": "cmake", "context": "            set(gss_version \"mit unknown\")", "confidence": "Low"}, {"depname": "mit-krb5-gssapi", "version": null, "version_op": null, "unified_name": "mit-krb5-gssapi", "extractor_type": "cmake::pkg", "context": "pkg_search_module(_gss_pkg mit-krb5-gssapi heimdal-gssapi)", "confidence": "High"}, {"depname": "heimdal-gssapi", "version": null, "version_op": null, "unified_name": "heimdal-gssapi", "extractor_type": "cmake::pkg", "context": "pkg_search_module(_gss_pkg mit-krb5-gssapi heimdal-gssapi)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gssapi"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindGSS.cmake", "content": "find_library(_gss_libraries\n                names\n                    gssapi\n                hints\n                    ${_gss_root_hints}\n                path_suffixes\n                    \n            )"}]}, {"deps": [{"depname": "libssh2", "version": null, "version_op": null, "unified_name": "ssh2", "extractor_type": "cmake", "context": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindLibSSH2.cmake", "confidence": "High"}, {"depname": "libssh2", "version": null, "version_op": null, "unified_name": "ssh2", "extractor_type": "cmake", "context": "\n  set(libssh2_version \"${libssh2_version_major}.${libssh2_version_minor}.${libssh2_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["ssh2"], "version": "", "fromfile": "AshamaneProject@@AshamaneCore/dep/cpr/opt/curl/CMake/FindLibSSH2.cmake", "content": "find_library(libssh2_library names ssh2\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}