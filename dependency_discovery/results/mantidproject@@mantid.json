{"target": "mantidproject@@mantid", "extractors": [{"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "qt5", "version": "5.15", "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n    qt5 5.15\n    components core gui widgets opengl test\n    required\n  )", "confidence": "High"}, {"depname": "qscintillaqt5", "version": null, "version_op": null, "unified_name": "qscintillaqt5", "extractor_type": "cmake", "context": "find_package(qscintillaqt5 required)", "confidence": "High"}, {"depname": "pyqt5", "version": null, "version_op": null, "unified_name": "pyqt5", "extractor_type": "cmake", "context": "find_package(pyqt5 required)", "confidence": "High"}, {"depname": "sip", "version": null, "version_op": null, "unified_name": "sip", "extractor_type": "cmake", "context": "find_package(sip required)", "confidence": "High"}, {"depname": "mantidframework", "version": null, "version_op": null, "unified_name": "mantidframework", "extractor_type": "cmake", "context": "find_package(mantidframework required)", "confidence": "High"}, {"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "find_package(sphinx required)", "confidence": "High"}, {"depname": "mantid", "version": null, "version_op": null, "unified_name": "mantid", "extractor_type": "cmake", "context": "project(mantid)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindCppcheck.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cppcheck", "cli"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindCppcheck.cmake", "content": "find_program(\n    cppcheck_executable\n    names cppcheck cli\n    paths \"${cppcheck_root_dir}\"\n    path_suffixes cli\n    no_default_path\n  )"}, {"filenames": ["cppcheck"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindCppcheck.cmake", "content": "find_program(cppcheck_executable names cppcheck)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cxxtest", "version": null, "version_op": null, "unified_name": "cxxtest", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindCxxTest.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python/scripts/cxxtestgen"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindCxxTest.cmake", "content": "find_program(\n  cxxtest_testgen_executable python/scripts/cxxtestgen\n  paths ${cxxtest_include_dir}\n  no_cmake_find_root_path\n)"}]}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required mpi date_time regex serialization)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "muparser", "version": null, "version_op": null, "unified_name": "muparser", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindMuParser.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["muparser"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindMuParser.cmake", "content": "find_library(\n  muparser_library\n  names muparser\n  doc \"the muparser library\"\n)"}, {"filenames": ["muparser_d", "muparserd"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindMuParser.cmake", "content": "find_library(muparser_library_debug names muparser_d muparserd)"}]}, {"deps": [{"depname": "pystog", "version": null, "version_op": null, "unified_name": "pystog", "extractor_type": "cmake", "context": "\nset(_pystog_version 4ad6d316bb94221e52b9a57fccbb65f4959972d3)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pylint", "version": null, "version_op": null, "unified_name": "pylint", "extractor_type": "cmake", "context": "find_package(pylint)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lib3mf", "version": null, "version_op": null, "unified_name": "3mf", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindLib3mf.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lib3mf"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLib3mf.cmake", "content": "find_library(lib3mf_lib lib3mf)"}, {"filenames": ["lib3mf_d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLib3mf.cmake", "content": "find_library(lib3mf_lib_debug lib3mf_d)"}]}, {"deps": [{"depname": "jemalloclib", "version": null, "version_op": null, "unified_name": "jemalloclib", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindJemallocLib.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jemalloc_minimal", "jemalloc"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindJemallocLib.cmake", "content": "find_library(jemalloc_lib names jemalloc_minimal jemalloc)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"clang-tidy-14\"", "\"clang-tidy-13\"", "\"clang-tidy-12\"", "\"clang-tidy-11\"", "\"clang-tidy-10\"", "\"clang-tidy-9\"", "\"clang-tidy\""], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/ClangTidy.cmake", "content": "find_program(\n    clang_tidy_exe\n    names \"clang-tidy-14\"\n          \"clang-tidy-13\"\n          \"clang-tidy-12\"\n          \"clang-tidy-11\"\n          \"clang-tidy-10\"\n          \"clang-tidy-9\"\n          \"clang-tidy\"\n    paths /usr/local/opt/llvm/bin\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "librdkafka", "version": null, "version_op": null, "unified_name": "rdkafka", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindLibRDKafka.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rdkafka++", "librdkafkacpp"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLibRDKafka.cmake", "content": "find_library(\n  librdkafka\n  names rdkafka++ librdkafkacpp\n  hints ${librdkafka_root_dir}/lib\n)"}, {"filenames": ["librdkafkacpp_d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLibRDKafka.cmake", "content": "find_library(\n  librdkafka_debug\n  names librdkafkacpp_d\n  hints ${librdkafka_root_dir}/lib\n)"}, {"filenames": ["rdkafka", "librdkafka"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLibRDKafka.cmake", "content": "find_library(\n  librdkafka_c\n  names rdkafka librdkafka\n  hints ${librdkafka_root_dir}/lib\n)"}, {"filenames": ["librdkafka_d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindLibRDKafka.cmake", "content": "find_library(\n  librdkafka_c_debug\n  names librdkafka_d\n  hints ${librdkafka_root_dir}/lib\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tkernel"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkernel\n  names tkernel\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkbo"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkbo\n  names tkbo\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkprim"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkprim\n  names tkprim\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkmesh"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkmesh\n  names tkmesh\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkbrep"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkbrep\n  names tkbrep\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tktopalgo"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tktopalgo\n  names tktopalgo\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkmath"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkmath\n  names tkmath\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkg2d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkg2d\n  names tkg2d\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkg3d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkg3d\n  names tkg3d\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkgeombase"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkgeombase\n  names tkgeombase\n  paths ${opencascade_library_dir}\n)"}, {"filenames": ["tkgeomalgo"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindOpenCascade.cmake", "content": "find_library(\n  opencascade_lib_tkgeomalgo\n  names tkgeomalgo\n  paths ${opencascade_library_dir}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/CCacheSetup.cmake", "content": "find_program(ccache_found ccache)"}]}, {"deps": [{"depname": "sip", "version": null, "version_op": null, "unified_name": "sip", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindSIP.cmake", "confidence": "High"}, {"depname": "python", "version": null, "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "find_package(python)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sip-build"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindSIP.cmake", "content": "find_program(sip_build_executable names sip-build)"}, {"filenames": ["sip-module"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindSIP.cmake", "content": "find_program(sip_module_executable names sip-module)"}, {"filenames": ["python${python_version_major}-sip", "sip"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindSIP.cmake", "content": "find_program(sip_executable names python${python_version_major}-sip sip)"}]}, {"deps": [{"depname": "nexus", "version": null, "version_op": null, "unified_name": "nexus", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nexus", "nexus"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_c_libraries names nexus nexus)"}, {"filenames": ["nexuscpp", "nexuscpp"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_cpp_libraries names nexuscpp nexuscpp)"}, {"filenames": ["nexus", "libnexus-0"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_c_libraries names nexus libnexus-0)"}, {"filenames": ["nexuscpp", "libnexuscpp-0"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_cpp_libraries names nexuscpp libnexuscpp-0)"}, {"filenames": ["nexus", "libnexus-0d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_c_libraries_debug names nexus libnexus-0d)"}, {"filenames": ["nexuscpp", "libnexuscpp-0d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindNexus.cmake", "content": "find_library(nexus_cpp_libraries_debug names nexuscpp libnexuscpp-0d)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "poco", "version": null, "version_op": null, "unified_name": "poco", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "confidence": "High"}, {"depname": "poco", "version": null, "version_op": null, "unified_name": "poco", "extractor_type": "cmake", "context": "  set(poco_version \"${poco_version_major}.${poco_version_minor}.${poco_version_patch}\")", "confidence": "Low"}, {"depname": "libpoco_so", "version": null, "version_op": null, "unified_name": "poco_so", "extractor_type": "cmake", "context": "  set(poco_solib_version \"\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["pocofoundation"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_foundation names pocofoundation)"}, {"filenames": ["pocoutil"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_util names pocoutil)"}, {"filenames": ["pocoxml"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_xml names pocoxml)"}, {"filenames": ["poconet"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_net names poconet)"}, {"filenames": ["pococrypto"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_crypto names pococrypto)"}, {"filenames": ["poconetssl"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_netssl names poconetssl)"}, {"filenames": ["pocofoundationd"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_foundation_debug names pocofoundationd)"}, {"filenames": ["pocoutild"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_util_debug names pocoutild)"}, {"filenames": ["pocoxmld"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_xml_debug names pocoxmld)"}, {"filenames": ["poconetd"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_net_debug names poconetd)"}, {"filenames": ["pococryptod"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_crypto_debug names pococryptod)"}, {"filenames": ["poconetssld"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPoco.cmake", "content": "find_library(poco_lib_netssl_debug names poconetssld)"}]}, {"deps": [{"depname": "cxxtest", "version": null, "version_op": null, "unified_name": "cxxtest", "extractor_type": "cmake", "context": "find_package(cxxtest)", "confidence": "High"}, {"depname": "boost", "version": "1.65.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.65.0 required components date_time regex serialization filesystem system)", "confidence": "High"}, {"depname": "poco", "version": "1.4.6", "version_op": null, "unified_name": "poco", "extractor_type": "cmake", "context": "find_package(poco 1.4.6 required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "find_package(gsl required)", "confidence": "High"}, {"depname": "nexus", "version": "4.3.1", "version_op": null, "unified_name": "nexus", "extractor_type": "cmake", "context": "find_package(nexus 4.3.1 required)", "confidence": "High"}, {"depname": "muparser", "version": null, "version_op": null, "unified_name": "muparser", "extractor_type": "cmake", "context": "find_package(muparser required)", "confidence": "High"}, {"depname": "jsoncpp", "version": "0.7.0", "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "find_package(jsoncpp 0.7.0 required)", "confidence": "High"}, {"depname": "eigen3", "version": "3.4", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 3.4 required)", "confidence": "High"}, {"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "find_package(opencascade required)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(\n    hdf5 module\n    components c cxx hl\n    required\n  )", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp components cxx)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pre-commit"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/CommonSetup.cmake", "content": "find_program(\n    pre_commit_exe\n    names pre-commit\n    hints ~/.local/bin/\n  )"}]}, {"deps": [{"depname": "jemalloclib", "version": null, "version_op": null, "unified_name": "jemalloclib", "extractor_type": "cmake", "context": "find_package(jemalloclib required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": "1.9.5", "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git 1.9.5)", "confidence": "High"}, {"depname": "python", "version": "3.6", "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "find_package(python 3.6 required components interpreter development numpy)", "confidence": "High"}, {"depname": "python", "version": "3.6", "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "find_package(python 3.6 required components interpreter development)", "confidence": "High"}, {"depname": "minimum_python", "version": "3.6", "version_op": null, "unified_name": "minimum_python", "extractor_type": "cmake", "context": "set(minimum_python_version 3.6)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pyqt", "version": null, "version_op": null, "unified_name": "pyqt", "extractor_type": "cmake", "context": "find_package(pyqt)", "confidence": "High"}, {"depname": "pyqt_major", "version": null, "version_op": null, "unified_name": "pyqt", "extractor_type": "cmake", "context": "  set(pyqt_major_version ${pyqt_major_version})", "confidence": "Low"}, {"depname": "pyqt_sip_abi", "version": null, "version_op": null, "unified_name": "pyqt_sip_abi", "extractor_type": "cmake", "context": "  set(pyqt_sip_abi_version ${pyqt${pyqt_major_version}_sip_abi_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(\n  boost\n  components mpi serialization\n  required\n)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package ( qt5 ...)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_qsci_lib_names}"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/QScintillaFindImpl.cmake", "content": "find_library(qscintilla_qt${qt_version}_library names ${_qsci_lib_names})"}, {"filenames": ["qscintilla2_qt5d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/QScintillaFindImpl.cmake", "content": "find_library(qscintilla_qt${qt_version}_library_debug names qscintilla2_qt5d)"}]}, {"deps": [{"depname": "pylint", "version": null, "version_op": null, "unified_name": "pylint", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindPylint.cmake", "confidence": "High"}, {"depname": "pylint", "version": null, "version_op": null, "unified_name": "pylint", "extractor_type": "cmake", "context": "    set(pylint_version \"unknown\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["pylint"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindPylint.cmake", "content": "find_program(pylint_executable pylint paths /usr/bin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindJsonCPP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jsoncpp"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindJsonCPP.cmake", "content": "find_library(jsoncpp_library names jsoncpp)"}, {"filenames": ["jsoncpp_d"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindJsonCPP.cmake", "content": "find_library(jsoncpp_library_debug names jsoncpp_d)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(\n  tbb config quiet\n  components ${_tbb_find_components}\n  optional_components ${_tbb_find_optional_components}\n)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_library_release\n  names tbb\n  paths \n)"}, {"filenames": ["${tbb_library_names_debug}"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_library_debug\n  names ${tbb_library_names_debug}\n  paths \n)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_malloc_library_release\n  names tbbmalloc\n  paths \n)"}, {"filenames": ["${tbb_malloc_library_names_debug}"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_malloc_library_debug\n  names ${tbb_malloc_library_names_debug}\n  paths \n)"}, {"filenames": ["tbbmalloc_proxy"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_malloc_proxy_library_release\n  names tbbmalloc_proxy\n  paths \n)"}, {"filenames": ["${tbb_malloc_proxy_library_names_debug}"], "version": "", "fromfile": "mantidproject@@mantid/buildconfig/CMake/FindTBB.cmake", "content": "find_library(\n  tbb_malloc_proxy_library_debug\n  names ${tbb_malloc_proxy_library_names_debug}\n  paths \n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qscintillaqt5", "version": null, "version_op": null, "unified_name": "qscintillaqt5", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindQScintillaQt5.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindSphinx.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pyqt5", "version": null, "version_op": null, "unified_name": "pyqt5", "extractor_type": "cmake", "context": "mantidproject@@mantid/buildconfig/CMake/FindPyQt5.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(\n  boost ${boost_version_required}\n  components python${python_version_major}${python_version_minor}\n  required\n)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lib3mf", "version": null, "version_op": null, "unified_name": "3mf", "extractor_type": "cmake", "context": "find_package(lib3mf required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["latex"], "version": "", "fromfile": "mantidproject@@mantid/Framework/Doxygen/CMakeLists.txt", "content": "find_program(latex_executable latex)"}, {"filenames": ["dvips"], "version": "", "fromfile": "mantidproject@@mantid/Framework/Doxygen/CMakeLists.txt", "content": "find_program(dvips_executable dvips)"}, {"filenames": ["qhelpgenerator"], "version": "", "fromfile": "mantidproject@@mantid/Framework/Doxygen/CMakeLists.txt", "content": "find_program(qhelp_executable qhelpgenerator)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "librdkafka", "version": "0.11", "version_op": null, "unified_name": "rdkafka", "extractor_type": "cmake", "context": "find_package(librdkafka 0.11)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "check_for_new_mantid", "version": "0", "version_op": null, "unified_name": "check_for_new_mantid", "extractor_type": "cmake", "context": "set(check_for_new_mantid_version \"0\")", "confidence": "Low"}, {"depname": "check_for_new_mantid", "version": "1", "version_op": null, "unified_name": "check_for_new_mantid", "extractor_type": "cmake", "context": "set(check_for_new_mantid_version \"1\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n    qt5 ${qt_min_version}\n    components help\n    required\n  )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt", "version": null, "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "set(qt_version ${qt_version_major}.${qt_version_minor}.${qt_version_patch})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n  qt5 ${qt_min_version}\n  components concurrent xml\n  required\n)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n  qt5 ${qt_min_version}\n  components concurrent help network printsupport\n  required\n)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n  qt5 ${qt_min_version}\n  components webenginewidgets\n  quiet\n)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n    qt5 ${qt_min_version}\n    components webkitwidgets\n    quiet\n  )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}]}