{"target": "Pikachuxxxx@@Razix", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ecm", "version": null, "version_op": null, "unified_name": "ecm", "extractor_type": "cmake", "context": "find_package(ecm required no_module)", "confidence": "High"}, {"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "find_package(wayland required client cursor egl)", "confidence": "High"}, {"depname": "waylandscanner", "version": null, "version_op": null, "unified_name": "waylandscanner", "extractor_type": "cmake", "context": "find_package(waylandscanner required)", "confidence": "High"}, {"depname": "waylandprotocols", "version": "1.15", "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "find_package(waylandprotocols 1.15 required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "find_package(epollshim)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "find_package(osmesa required)", "confidence": "High"}, {"depname": "glfw", "version": "3.3.3", "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw version 3.3.3 languages c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMakeLists.txt", "content": "find_library(math_library m)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindEpollShim.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["epoll-shim", "libepoll-shim"], "version": "", "fromfile": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindEpollShim.cmake", "content": "find_library(epollshim_libraries names epoll-shim libepoll-shim hints /usr/local/lib)"}]}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindOSMesa.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package (pkgconfig)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (pkg_osmesa quiet osmesa)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindXKBCommon.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_xkbcommon quiet xkbcommon)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xkbcommon"], "version": "", "fromfile": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindXKBCommon.cmake", "content": "find_library(xkbcommon_library\n    names xkbcommon\n    hints ${pc_xkbcommon_library} ${pc_xkbcommon_library_dirs}\n)"}]}, {"deps": [{"depname": "waylandprotocols", "version": null, "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "Pikachuxxxx@@Razix/Engine/vendor/glfw/CMake/modules/FindWaylandProtocols.cmake", "confidence": "High"}, {"depname": "wayland_protocols", "version": null, "version_op": null, "unified_name": "wayland_protocols", "extractor_type": "cmake", "context": "set(wayland_protocols_version ${waylandprotocols_version})", "confidence": "Low"}, {"depname": "wayland-protocols", "version": "${waylandprotocols_find_version}", "version_op": ">=", "unified_name": "wayland-protocols", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(waylandprotocols quiet wayland-protocols>=${waylandprotocols_find_version})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components serialization)", "confidence": "High"}, {"depname": "cereal", "version": "1.3.0", "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "project(cereal languages cxx version 1.3.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cereal", "version": null, "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "find_package(cereal required)", "confidence": "High"}, {"depname": "cereal", "version": null, "version_op": null, "unified_name": "cereal", "extractor_type": "cmake", "context": "  project(cereal-test-config-module)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lua", "version": null, "version_op": null, "unified_name": "lua", "extractor_type": "cmake", "context": "project(lua c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl required)", "confidence": "High"}, {"depname": "openclvectoradd", "version": null, "version_op": null, "unified_name": "openclvectoradd", "extractor_type": "cmake", "context": "project(openclvectoradd)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "meshoptimizer", "version": "0.17", "version_op": null, "unified_name": "meshoptimizer", "extractor_type": "cmake", "context": "project(meshoptimizer version 0.17 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "clib"}, {"deps": [{"depname": "glm", "version": "0.9.9", "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "project(glm version 0.9.9 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glm", "version": "0.9.9", "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "\nset(glm_version 0.9.9)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "find_package(glm required)", "confidence": "High"}, {"depname": "test_find_glm", "version": null, "version_op": null, "unified_name": "test_find_glm", "extractor_type": "cmake", "context": "project(test_find_glm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}, {"depname": "imgui_example_glfw_vulkan", "version": null, "version_op": null, "unified_name": "imgui_example_glfw_vulkan", "extractor_type": "cmake", "context": "project(imgui_example_glfw_vulkan c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "qt", "version": null, "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "find_package(qt names qt${qt_version_major} components core required)", "confidence": "High"}, {"depname": "qt", "version": null, "version_op": null, "unified_name": "qt", "extractor_type": "cmake", "context": "find_package(qt names qt6 qt5 components core required)", "confidence": "High"}, {"depname": "qt${qt_version_major}", "version": null, "version_op": null, "unified_name": "qt${qt_version_major}", "extractor_type": "cmake", "context": "find_package(qt${qt_version_major} components core gui widgets required)", "confidence": "High"}, {"depname": "qtadvanceddockingsystem", "version": "${version_short}", "version_op": null, "unified_name": "qtadvanceddockingsystem", "extractor_type": "cmake", "context": "project(qtadvanceddockingsystem languages cxx version ${version_short})", "confidence": "High"}], "type": "cmake", "libs": []}]}