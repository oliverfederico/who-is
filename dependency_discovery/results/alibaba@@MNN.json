{"target": "alibaba@@MNN", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "mnn", "version": "${mnn_version}", "version_op": null, "unified_name": "mnn", "extractor_type": "cmake", "context": "project(mnn version ${mnn_version} languages c cxx asm)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coreml"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(coreml coreml)"}, {"filenames": ["foundation"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(foundation foundation)"}, {"filenames": ["metal"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(metal metal)"}, {"filenames": ["corevideo"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(video corevideo)"}, {"filenames": ["foundation"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(foundation foundation required)"}, {"filenames": ["metal"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(metal metal required)"}, {"filenames": ["coregraphics"], "version": "", "fromfile": "alibaba@@MNN/CMakeLists.txt", "content": "find_library(graphic coregraphics)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mnnpybridge", "version": null, "version_op": null, "unified_name": "mnnpybridge", "extractor_type": "cmake", "context": "project(mnnpybridge)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["mnn"], "version": "", "fromfile": "alibaba@@MNN/pymnn/CMakeLists.txt", "content": "find_library(mnn names mnn required paths ${mnn_path}/lib/static)"}, {"filenames": ["python"], "version": "", "fromfile": "alibaba@@MNN/pymnn/CMakeLists.txt", "content": "find_library(python names python required paths ${python_path}/lib/static)"}, {"filenames": ["numpy_python"], "version": "", "fromfile": "alibaba@@MNN/pymnn/CMakeLists.txt", "content": "find_library(numpy names numpy_python required paths ${numpy_path}/lib/static)"}]}, {"deps": [{"depname": "cuda", "version": "9.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 9.0)", "confidence": "High"}, {"depname": "cuda_min", "version": "9.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "    set(cuda_min_version \"9.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "torch", "version": null, "version_op": null, "unified_name": "torch", "extractor_type": "cmake", "context": "find_package(torch required paths ${lib_torch_path} no_default_path)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "9.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 9.0)", "confidence": "High"}, {"depname": "cuda_min", "version": "9.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "    set(cuda_min_version \"9.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "1", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "    set(cuda_version \"${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "8.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 8.0)", "confidence": "High"}, {"depname": "cuda_min", "version": "8.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_min_version \"8.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["log"], "version": "", "fromfile": "alibaba@@MNN/source/jni/CMakeLists.txt", "content": "find_library( log-lib log )"}, {"filenames": ["jnigraphics"], "version": "", "fromfile": "alibaba@@MNN/source/jni/CMakeLists.txt", "content": "find_library( jnigraphics-lib jnigraphics )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["foundation"], "version": "", "fromfile": "alibaba@@MNN/test/CMakeLists.txt", "content": "find_library(foundation foundation required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "conan"}, {"deps": [{"depname": "flatbuffers", "version": null, "version_op": null, "unified_name": "flatbuffers", "extractor_type": "cmake", "context": "project(flatbuffers)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "    set(cpack_package_version \"${version_major}.${version_minor}.${version_patch}-${version_commit}\")", "confidence": "Low"}, {"depname": "cpack_debian_package", "version": null, "version_op": null, "unified_name": "cpack_debian_package", "extractor_type": "cmake", "context": "    set(cpack_debian_package_version \"${version_major}.${version_minor}.${version_patch}-${version_commit}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["dpkg"], "version": "", "fromfile": "alibaba@@MNN/3rd_party/flatbuffers/CMake/PackageDebian.cmake", "content": "find_program(dpkg_cmd dpkg)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "flatbuffers", "version": null, "version_op": null, "unified_name": "flatbuffers", "extractor_type": "cmake", "context": "alibaba@@MNN/3rd_party/flatbuffers/CMake/FindFlatBuffers.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["flatc"], "version": "", "fromfile": "alibaba@@MNN/3rd_party/flatbuffers/CMake/FindFlatBuffers.cmake", "content": "find_program(flatbuffers_flatc_executable names flatc)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "flatbuffersfuzzertests", "version": null, "version_op": null, "unified_name": "flatbuffersfuzzertests", "extractor_type": "cmake", "context": "project(flatbuffersfuzzertests)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "Protocol Buffers", "version": "3.19.0", "version_op": null, "unified_name": "protocol buffers", "extractor_type": "autoconf", "context": "AC_INIT([Protocol Buffers],[3.19.0],[protobuf@googlegroups.com],[protobuf])", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "project(protobuf c cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["protoc"], "version": "", "fromfile": "alibaba@@MNN/3rd_party/protobuf/cmake/CMakeLists.txt", "content": "find_program(protobuf_protoc_exe protoc)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "bazel"}, {"deps": [], "type": "make"}]}