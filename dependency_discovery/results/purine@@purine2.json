{"target": "purine@@purine2", "extractors": [{"deps": [{"depname": "cuda", "version": "6.5", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package (cuda 6.5 required)", "confidence": "High"}, {"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "find_package(gflags required)", "confidence": "High"}, {"depname": "atlas", "version": null, "version_op": null, "unified_name": "atlas", "extractor_type": "cmake", "context": "find_package(atlas required)", "confidence": "High"}, {"depname": "libuv", "version": null, "version_op": null, "unified_name": "uv", "extractor_type": "cmake", "context": "find_package(libuv required)", "confidence": "High"}, {"depname": "lmdb", "version": null, "version_op": null, "unified_name": "lmdb", "extractor_type": "cmake", "context": "find_package(lmdb required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}, {"depname": "purine", "version": null, "version_op": null, "unified_name": "purine", "extractor_type": "cmake", "context": "project (purine)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "examples", "version": null, "version_op": null, "unified_name": "examples", "extractor_type": "cmake", "context": "project(examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "caffeprotobuf", "version": null, "version_op": null, "unified_name": "caffeprotobuf", "extractor_type": "cmake", "context": "project(caffeprotobuf)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gflags", "version": null, "version_op": null, "unified_name": "gflags", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindGFlags.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libgflags"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGFlags.cmake", "content": "find_library(gflags_library_release\n        names libgflags\n        paths ${gflags_root_dir}\n        path_suffixes release)"}, {"filenames": ["libgflags-debug"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGFlags.cmake", "content": "find_library(gflags_library_debug\n        names libgflags-debug\n        paths ${gflags_root_dir}\n        path_suffixes debug)"}, {"filenames": ["gflags"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGFlags.cmake", "content": "find_library(gflags_library gflags)"}]}, {"deps": [{"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindOpenBLAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openblas"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindOpenBLAS.cmake", "content": "find_library(openblas_lib names openblas paths ${open_blas_lib_search_paths})"}]}, {"deps": [{"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindLAPACK.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n          names ${_library} paths env lib paths env path)"}, {"filenames": ["${_library}"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n            names ${_library}\n            paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64\n            env dyld_library_path)"}, {"filenames": ["${_library}"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n            names ${_library}\n            paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64\n            env ld_library_path)"}]}, {"deps": [{"depname": "leveldb", "version": null, "version_op": null, "unified_name": "leveldb", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindLevelDB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["leveldb"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLevelDB.cmake", "content": "find_library(leveldb_libs names leveldb paths /usr/lib $env{leveldb_root}/lib doc \"path to leveldb library.\" )"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_rt"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_library mkl_rt\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["mkl_intel"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_interface_library mkl_intel\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["mkl_sequential"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_threading_library mkl_sequential\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_core_library mkl_core\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["mkl_cdft_core"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_fft_library mkl_cdft_core\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["mkl_scalapack_core"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_scalapack_library mkl_scalapack_core\n        paths ${mkl_root}/lib/ia32/)"}, {"filenames": ["libiomp5"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindMKL.cmake", "content": "find_library(mkl_rtl_library libiomp5\n        paths ${intel_rtl_root}/lib)"}]}, {"deps": [{"depname": "libuv", "version": null, "version_op": null, "unified_name": "uv", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindLibUV.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libuv", "version": null, "version_op": null, "unified_name": "uv", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libuv quiet libuv)", "confidence": "High"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists(dl dlopen \"dlfcn.h\" have_libdl)", "confidence": "High"}, {"depname": "kstat", "version": null, "version_op": null, "unified_name": "kstat", "extractor_type": "cmake", "context": "check_library_exists(kstat kstat_lookup \"kstat.h\" have_libkstat)", "confidence": "High"}, {"depname": "kvm", "version": null, "version_op": null, "unified_name": "kvm", "extractor_type": "cmake", "context": "check_library_exists(kvm kvm_open \"kvm.h\" have_libkvm)", "confidence": "High"}, {"depname": "nsl", "version": null, "version_op": null, "unified_name": "nsl", "extractor_type": "cmake", "context": "check_library_exists(nsl gethostbyname \"nsl.h\" have_libnsl)", "confidence": "High"}, {"depname": "perfstat", "version": null, "version_op": null, "unified_name": "perfstat", "extractor_type": "cmake", "context": "check_library_exists(perfstat perfstat_cpu \"libperfstat.h\" have_libperfstat)", "confidence": "High"}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists(rt clock_gettime \"time.h\" have_librt)", "confidence": "High"}, {"depname": "sendfile", "version": null, "version_op": null, "unified_name": "sendfile", "extractor_type": "cmake", "context": "check_library_exists(sendfile sendfile \"\" have_libsendfile)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libuv_names}"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLibUV.cmake", "content": "find_library(libuv_library names ${libuv_names}\n  hints ${pc_libuv_libdir} ${pc_libuv_library_dirs}\n  no_default_path)"}]}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindGlog.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libglog_static"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGlog.cmake", "content": "find_library(glog_library_release libglog_static\n        paths ${glog_root_dir}\n        path_suffixes release)"}, {"filenames": ["libglog_static"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGlog.cmake", "content": "find_library(glog_library_debug libglog_static\n        paths ${glog_root_dir}\n        path_suffixes debug)"}, {"filenames": ["glog"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindGlog.cmake", "content": "find_library(glog_library glog\n        paths ${glog_root_dir}\n        path_suffixes\n            lib\n            lib64)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "atlas", "version": null, "version_op": null, "unified_name": "atlas", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindAtlas.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ptcblas_r", "ptcblas", "cblas_r", "cblas"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindAtlas.cmake", "content": "find_library(atlas_cblas_library names ptcblas_r ptcblas cblas_r cblas paths ${atlas_lib_search_paths})"}, {"filenames": ["atlas_r", "atlas"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindAtlas.cmake", "content": "find_library(atlas_blas_library names atlas_r atlas paths ${atlas_lib_search_paths})"}, {"filenames": ["alapack_r", "alapack", "lapack_atlas"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindAtlas.cmake", "content": "find_library(atlas_lapack_library names alapack_r alapack lapack_atlas paths ${atlas_lib_search_paths})"}]}, {"deps": [{"depname": "snappy", "version": null, "version_op": null, "unified_name": "snappy", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindSnappy.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["snappy"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindSnappy.cmake", "content": "find_library(snappy_libs\n    names snappy\n    hints ${snappy_root_dir}\n          ${snappy_root_dir}/lib\n)"}]}, {"deps": [{"depname": "lmdb", "version": null, "version_op": null, "unified_name": "lmdb", "extractor_type": "cmake", "context": "purine@@purine2/CMakeScripts/FindLMDB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lmdb"], "version": "", "fromfile": "purine@@purine2/CMakeScripts/FindLMDB.cmake", "content": "find_library(lmdb_libraries names lmdb hints $env{lmdb_dir}/lib )"}]}, {"deps": [{"depname": "glog", "version": null, "version_op": null, "unified_name": "glog", "extractor_type": "cmake", "context": "find_package(glog required)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "tests", "version": null, "version_op": null, "unified_name": "tests", "extractor_type": "cmake", "context": "project(tests)", "confidence": ""}], "type": "cmake", "libs": []}]}