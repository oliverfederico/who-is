{"target": "NGSolve@@ngsolve", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "netgen", "version": null, "version_op": null, "unified_name": "netgen", "extractor_type": "cmake", "context": "find_package(netgen required config hints ${cmake_install_prefix}/contents/resources)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl required)", "confidence": "High"}, {"depname": "hypre", "version": null, "version_op": null, "unified_name": "hypre", "extractor_type": "cmake", "context": "find_package(hypre required)", "confidence": "High"}, {"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "find_package(mumps required)", "confidence": "High"}, {"depname": "pythoninterp", "version": "3", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3 required)", "confidence": "High"}, {"depname": "pythonlibs", "version": "3", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs 3 required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "suitesparse", "version": null, "version_op": null, "unified_name": "suitesparse", "extractor_type": "cmake", "context": "find_package(suitesparse quiet no_module hints ${umfpack_dir})", "confidence": "High"}, {"depname": "ngsuite", "version": null, "version_op": null, "unified_name": "ngsuite", "extractor_type": "cmake", "context": "  project (ngsuite)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["libpardiso500-gnu481-x86-64.so"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_library(pardiso_lib names libpardiso500-gnu481-x86-64.so)"}, {"filenames": ["libittnotify.a"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_library(vtune_lib libittnotify.a path ${vtune_dir}/bin64/k1om)"}, {"filenames": ["libittnotify.a"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_library(vtune_lib libittnotify.a path ${vtune_dir}/lib64)"}, {"filenames": ["libgomp.so.1"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_library(gomp_library names libgomp.so.1 required hints \"/usr/lib/x86_64-linux-gnu/\")"}, {"filenames": ["ccache", "ccache.bat"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_program(ccache_found names ccache ccache.bat)"}, {"filenames": ["bash"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_program(bash bash required)"}, {"filenames": ["bash"], "version": "", "fromfile": "NGSolve@@ngsolve/CMakeLists.txt", "content": "find_program(bash bash)"}]}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "netgen", "version": null, "version_op": null, "unified_name": "netgen", "extractor_type": "cmake", "context": "find_package(netgen required config hints ${netgen_dir} ${netgen_dir}/lib/cmake ${netgen_dir}/share/cmake $env{netgendir}/../share/cmake)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl required)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ccache", "ccache.bat"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/SuperBuild.cmake", "content": "find_program(ccache_found names ccache ccache.bat)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "\nset(cpack_package_version ${ngsolve_version_major}.${ngsolve_version_minor}.${ngsolve_version_patch})", "confidence": "Low"}, {"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "    set(cpack_package_version ${cpack_package_version}.${ngsolve_version_tweak})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "ngsolve", "version": null, "version_op": null, "unified_name": "ngsolve", "extractor_type": "cmake", "context": "  set(ngsolve_version ${ngsolve_version_major}.${ngsolve_version_minor}.${ngsolve_version_patch}-${ngsolve_version_tweak}-${ngsolve_version_hash})", "confidence": "Low"}, {"depname": "ngsolve", "version": null, "version_op": null, "unified_name": "ngsolve", "extractor_type": "cmake", "context": "  set(ngsolve_version ${ngsolve_version_major}.${ngsolve_version_minor}.${ngsolve_version_patch})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/external_projects/catch.cmake", "content": "find_program(git_executable git)"}]}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "find_package(parmetis required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mumps", "version": null, "version_op": null, "unified_name": "mumps", "extractor_type": "cmake", "context": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mumps_common"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_mumps_common mumps_common paths ${mumps_dir}/lib)"}, {"filenames": ["dmumps"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_mumps_d dmumps paths ${mumps_dir}/lib)"}, {"filenames": ["zmumps"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_mumps_z zmumps paths ${mumps_dir}/lib)"}, {"filenames": ["pord"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_pord pord paths ${mumps_dir}/lib)"}, {"filenames": ["parmetis"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_parmetis parmetis hints ${parmetis_dir}/lib required)"}, {"filenames": ["metis"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_metis metis hints ${parmetis_dir}/lib required)"}, {"filenames": ["scalapack"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMUMPS.cmake", "content": "find_library(lib_scalapack scalapack hints ${scalapack_dir}/lib required)"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl config hints ${mkl_root}/${d} paths /opt/intel/oneapi/mkl/latest/${d} ~/.local/${d})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_rt"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_library mkl_rt\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_intel_lp64"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_interface_library mkl_intel_lp64\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_sequential"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_threading_library mkl_sequential\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_core_library mkl_core\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_cdft_core"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_fft_library mkl_cdft_core\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_scalapack_lp64"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_scalapack_library mkl_scalapack_lp64\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["mkl_blacs_openmpi_lp64"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_blacs_library mkl_blacs_openmpi_lp64\n          paths ${mkl_root}/lib/intel64/)"}, {"filenames": ["libiomp5md"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindMKL.cmake", "content": "find_library(mkl_rtl_library libiomp5md paths ${mkl_root}/../compiler/lib/intel64)"}]}, {"deps": [{"depname": "hypre", "version": null, "version_op": null, "unified_name": "hypre", "extractor_type": "cmake", "context": "NGSolve@@ngsolve/cmake/cmake_modules/FindHYPRE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hypre"], "version": "", "fromfile": "NGSolve@@ngsolve/cmake/cmake_modules/FindHYPRE.cmake", "content": "find_library(hypre_libraries hypre paths ${hypre_dir}/lib)"}]}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "NGSolve@@ngsolve/cmake/cmake_modules/FindSphinx.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "find_package(sphinx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ngsolve", "version": null, "version_op": null, "unified_name": "ngsolve", "extractor_type": "cmake", "context": "find_package(ngsolve)", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "find_package(cudatoolkit)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter development)", "confidence": "High"}, {"depname": "ngscuda", "version": null, "version_op": null, "unified_name": "ngscuda", "extractor_type": "cmake", "context": "  project(ngscuda)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["numactl"], "version": "", "fromfile": "NGSolve@@ngsolve/tests/timings/CMakeLists.txt", "content": "find_program(numactl_executable numactl)"}]}]}