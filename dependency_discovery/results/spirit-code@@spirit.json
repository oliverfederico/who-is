{"target": "spirit-code@@spirit", "extractors": [{"deps": [{"depname": "spirit", "version": null, "version_op": null, "unified_name": "spirit", "extractor_type": "cmake", "context": "project( spirit )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "spiritweb", "version": null, "version_op": null, "unified_name": "spiritweb", "extractor_type": "cmake", "context": "project(spiritweb)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": "5.7", "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package( qt5 5.7 required components core gui widgets charts opengl )", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package( pkgconfig required )", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package( threads required )", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package( threads required )", "confidence": "High"}, {"depname": "spirit_ui_cpp", "version": null, "version_op": null, "unified_name": "spirit_ui_cpp", "extractor_type": "cmake", "context": "project( spirit_ui_cpp )", "confidence": ""}, {"depname": "gtk+", "version": "3.0", "version_op": "=", "unified_name": "gtk+", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( gtk required gtk+-3.0 )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ecm", "version": null, "version_op": null, "unified_name": "ecm", "extractor_type": "cmake", "context": "find_package(ecm required no_module)", "confidence": "High"}, {"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "find_package(wayland required client cursor egl)", "confidence": "High"}, {"depname": "waylandscanner", "version": null, "version_op": null, "unified_name": "waylandscanner", "extractor_type": "cmake", "context": "find_package(waylandscanner required)", "confidence": "High"}, {"depname": "waylandprotocols", "version": "1.15", "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "find_package(waylandprotocols 1.15 required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "find_package(epollshim)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "find_package(osmesa required)", "confidence": "High"}, {"depname": "glfw", "version": "3.3.3", "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw version 3.3.3 languages c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMakeLists.txt", "content": "find_library(math_library m)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindEpollShim.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["epoll-shim", "libepoll-shim"], "version": "", "fromfile": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindEpollShim.cmake", "content": "find_library(epollshim_libraries names epoll-shim libepoll-shim hints /usr/local/lib)"}]}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindOSMesa.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package (pkgconfig)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (pkg_osmesa quiet osmesa)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindXKBCommon.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_xkbcommon quiet xkbcommon)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xkbcommon"], "version": "", "fromfile": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindXKBCommon.cmake", "content": "find_library(xkbcommon_library\n    names xkbcommon\n    hints ${pc_xkbcommon_library} ${pc_xkbcommon_library_dirs}\n)"}]}, {"deps": [{"depname": "waylandprotocols", "version": null, "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "spirit-code@@spirit/ui-cpp/ui-imgui/thirdparty/glfw/CMake/modules/FindWaylandProtocols.cmake", "confidence": "High"}, {"depname": "wayland_protocols", "version": null, "version_op": null, "unified_name": "wayland_protocols", "extractor_type": "cmake", "context": "set(wayland_protocols_version ${waylandprotocols_version})", "confidence": "Low"}, {"depname": "wayland-protocols", "version": "${waylandprotocols_find_version}", "version_op": ">=", "unified_name": "wayland-protocols", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(waylandprotocols quiet wayland-protocols>=${waylandprotocols_find_version})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ghcfilesystem", "version": null, "version_op": null, "unified_name": "ghcfilesystem", "extractor_type": "cmake", "context": "project(ghcfilesystem)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qhull", "version": null, "version_op": null, "unified_name": "qhull", "extractor_type": "cmake", "context": "project(qhull)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "8", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package( cuda 8 required )", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package( threads required )", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package( pythoninterp required )", "confidence": "High"}, {"depname": "spirit", "version": "${meta_version}", "version_op": null, "unified_name": "spirit", "extractor_type": "cmake", "context": "project( spirit version ${meta_version} )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "\"fftw3\"", "version": null, "version_op": null, "unified_name": "\"fftw3\"", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pkg_fftw quiet \"fftw3\" )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"fftw3\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3_omp\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_omp_lib\n    names \"fftw3_omp\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_threads_lib\n    names \"fftw3_threads\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3f_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwf_threads_lib\n    names \"fftw3f_threads\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3l_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwl_threads_lib\n    names \"fftw3l_threads\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3_omp\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_omp_lib\n    names \"fftw3_omp\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftw_threads_lib\n    names \"fftw3_threads\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3f_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwf_threads_lib\n    names \"fftw3f_threads\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3l_threads\""], "version": "", "fromfile": "spirit-code@@spirit/core/CMake/FindFFTW.cmake", "content": "find_library(\n    fftwl_threads_lib\n    names \"fftw3l_threads\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}]}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package( pythoninterp required )", "confidence": "High"}, {"depname": "ovf", "version": "${meta_version}", "version_op": null, "unified_name": "ovf", "extractor_type": "cmake", "context": "project( ovf version ${meta_version} )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "kissfft", "version": "1.3.0", "version_op": null, "unified_name": "kissfft", "extractor_type": "cmake", "context": "project(kissfft version 1.3.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glfw3", "version": "3", "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3 3 required)", "confidence": "High"}, {"depname": "vfrendering", "version": "${vfrendering_version}", "version_op": null, "unified_name": "vfrendering", "extractor_type": "cmake", "context": "project(vfrendering version ${vfrendering_version})", "confidence": "High"}], "type": "cmake", "libs": []}]}