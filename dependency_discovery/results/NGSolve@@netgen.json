{"target": "NGSolve@@netgen", "extractors": [{"deps": [{"depname": "pythoninterp", "version": "3", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3 required)", "confidence": "High"}, {"depname": "pythonlibs", "version": "3", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs 3 required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "tcl", "version": "8.5", "version_op": null, "unified_name": "tcl", "extractor_type": "cmake", "context": "find_package(tcl 8.5 required)", "confidence": "High"}, {"depname": "tclstub", "version": "8.5", "version_op": null, "unified_name": "tclstub", "extractor_type": "cmake", "context": "find_package(tclstub 8.5 required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 config required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis required)", "confidence": "High"}, {"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "find_package(opencascade names opencascade opencascade required cmake_find_root_path_both)", "confidence": "High"}, {"depname": "fontconfig", "version": null, "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake", "context": "find_package(fontconfig required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg required)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg required)", "confidence": "High"}, {"depname": "superbuild", "version": null, "version_op": null, "unified_name": "superbuild", "extractor_type": "cmake", "context": "  project (superbuild)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["freetype"], "version": "", "fromfile": "NGSolve@@netgen/CMakeLists.txt", "content": "find_library( freetype names freetype hints ${opencascade_install_prefix}/lib)"}, {"filenames": ["cgns", "cgnsdll"], "version": "", "fromfile": "NGSolve@@netgen/CMakeLists.txt", "content": "find_library( cgns_library names cgns cgnsdll )"}, {"filenames": ["hdf5", "hdf5_serial"], "version": "", "fromfile": "NGSolve@@netgen/CMakeLists.txt", "content": "find_library(hdf5_library names hdf5 hdf5_serial)"}, {"filenames": ["ccache", "ccache.bat"], "version": "", "fromfile": "NGSolve@@netgen/CMakeLists.txt", "content": "find_program(ccache_found names ccache ccache.bat)"}, {"filenames": ["\"clang-tidy\""], "version": "", "fromfile": "NGSolve@@netgen/CMakeLists.txt", "content": "find_program(\n    clang_tidy_exe\n    names \"clang-tidy\"\n    doc \"path to clang-tidy executable\"\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "Togl", "version": "1.7", "version_op": null, "unified_name": "togl", "extractor_type": "autoconf", "context": "AC_INIT([Togl], [1.7])", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "Togl", "version": "2.1", "version_op": null, "unified_name": "togl", "extractor_type": "autoconf", "context": "AC_INIT([Togl], [2.1])", "confidence": ""}, {"depname": "Xmu", "version": null, "version_op": null, "unified_name": "xmu", "extractor_type": "autoconf", "context": "NGSolve@@netgen/ng/Togl2.1/configure.in", "confidence": "High"}], "type": "autoconf"}, {"deps": [{"depname": "togl", "version": "2.1", "version_op": null, "unified_name": "togl", "extractor_type": "autoconf", "context": "NGSolve@@netgen/ng/Togl2.1/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "find_package(opencascade names opencascade opencascade opencascade required)", "confidence": "High"}, {"depname": "pythoninterp", "version": "3", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3 required)", "confidence": "High"}, {"depname": "pythonlibs", "version": "3", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs 3 required)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis quiet)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ccache", "ccache.bat"], "version": "", "fromfile": "NGSolve@@netgen/cmake/SuperBuild.cmake", "content": "find_program(ccache_found names ccache ccache.bat)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "netgen", "version": null, "version_op": null, "unified_name": "netgen", "extractor_type": "cmake", "context": "  set(netgen_version ${netgen_version_major}.${netgen_version_minor}.${netgen_version_patch}-${netgen_version_tweak}-${netgen_version_hash})", "confidence": "Low"}, {"depname": "netgen", "version": null, "version_op": null, "unified_name": "netgen", "extractor_type": "cmake", "context": "  set(netgen_version ${netgen_version_major}.${netgen_version_minor}.${netgen_version_patch})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/spdlog.cmake", "content": "find_program(git_executable git)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/catch.cmake", "content": "find_program(git_executable git)"}]}, {"deps": [{"depname": "tclstub", "version": "8.5", "version_op": null, "unified_name": "tclstub", "extractor_type": "cmake", "context": "find_package(tclstub 8.5 required)", "confidence": "High"}, {"depname": "tclstub", "version": null, "version_op": null, "unified_name": "tclstub", "extractor_type": "cmake", "context": "find_package(tclstub required)", "confidence": "High"}, {"depname": "tcl", "version": "8.5", "version_op": null, "unified_name": "tcl", "extractor_type": "cmake", "context": "find_package(tcl 8.5 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tclstub85", "tclstub8.5", "tclstub86", "tclstub8.6", "${tcl_find_args}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/tcltk.cmake", "content": "find_library(tcl_stub_library names tclstub85 tclstub8.5 tclstub86 tclstub8.6 ${tcl_find_args})"}, {"filenames": ["tkstub85", "tkstub8.5", "tkstub86", "tkstub8.6", "${tcl_find_args}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/tcltk.cmake", "content": "find_library(tk_stub_library names tkstub85 tkstub8.5 tkstub86 tkstub8.6 ${tcl_find_args})"}, {"filenames": ["tcl85", "tcl8.5", "tcl86", "tcl8.6", "tcl86t", "${tcl_find_args}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/tcltk.cmake", "content": "find_library(tcl_library names tcl85 tcl8.5 tcl86 tcl8.6 tcl86t ${tcl_find_args})"}, {"filenames": ["tk85", "tk8.5", "tk86", "tk8.6", "tk86t", "${tcl_find_args}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/external_projects/tcltk.cmake", "content": "find_library(tk_library names tk85 tk8.5 tk86 tk8.6 tk86t ${tcl_find_args})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "NGSolve@@netgen/cmake/cmake_modules/FindFFMPEG.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libavcodec", "version": null, "version_op": null, "unified_name": "avcodec", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ffmpeg_avcodec libavcodec)", "confidence": "High"}, {"depname": "libavformat", "version": null, "version_op": null, "unified_name": "avformat", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ffmpeg_avformat libavformat)", "confidence": "High"}, {"depname": "libavutil", "version": null, "version_op": null, "unified_name": "avutil", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ffmpeg_avutil libavutil)", "confidence": "High"}, {"depname": "libswscale", "version": null, "version_op": null, "unified_name": "swscale", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(swscale libswscale)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["avcodec"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindFFMPEG.cmake", "content": "find_library(ffmpeg_libavcodec\n    names avcodec\n    paths ${_ffmpeg_avcodec_library_dirs} /usr/lib /usr/local/lib /opt/local/lib /sw/lib\n  )"}, {"filenames": ["avformat"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindFFMPEG.cmake", "content": "find_library(ffmpeg_libavformat\n    names avformat\n    paths ${_ffmpeg_avformat_library_dirs} /usr/lib /usr/local/lib /opt/local/lib /sw/lib\n  )"}, {"filenames": ["avutil"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindFFMPEG.cmake", "content": "find_library(ffmpeg_libavutil\n    names avutil\n    paths ${_ffmpeg_avutil_library_dirs} /usr/lib /usr/local/lib /opt/local/lib /sw/lib\n  )"}, {"filenames": ["swscale"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindFFMPEG.cmake", "content": "find_library(ffmpeg_swscale\n    names swscale\n    paths ${swscale_library_dirs} /usr/lib /usr/local/lib /opt/local/lib /sw/lib\n  )"}]}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "NGSolve@@netgen/cmake/cmake_modules/FindMETIS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${metis_lib_names}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindMETIS.cmake", "content": "find_library(metis_library\n            names ${metis_lib_names}\n            hints ${metis_library_dir}\n            no_default_path)"}, {"filenames": ["${metis_lib_names}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindMETIS.cmake", "content": "find_library(metis_library\n            names ${metis_lib_names}\n            hints ${metis_dir}\n            path_suffixes ${metis_lib_suffixes}\n            no_default_path)"}, {"filenames": ["${metis_lib_names}"], "version": "", "fromfile": "NGSolve@@netgen/cmake/cmake_modules/FindMETIS.cmake", "content": "find_library(metis_library\n            names ${metis_lib_names}\n            path_suffixes ${metis_lib_suffixes})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libnuma.so"], "version": "", "fromfile": "NGSolve@@netgen/libsrc/core/CMakeLists.txt", "content": "find_library(numa_library libnuma.so)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}