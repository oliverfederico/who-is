{"target": "AlbrechtL@@welle.io", "extractors": [{"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 components widgets quick quickcontrols2 multimedia charts qml dbus required)", "confidence": "High"}, {"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "find_package(alsa)", "confidence": "High"}, {"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "find_package(fftw3f required)", "confidence": "High"}, {"depname": "lame", "version": null, "version_op": null, "unified_name": "lame", "extractor_type": "cmake", "context": "find_package(lame required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "faad", "version": null, "version_op": null, "unified_name": "faad", "extractor_type": "cmake", "context": "find_package(faad required)", "confidence": "High"}, {"depname": "mpg123", "version": null, "version_op": null, "unified_name": "mpg123", "extractor_type": "cmake", "context": "find_package(mpg123 required)", "confidence": "High"}, {"depname": "librtlsdr", "version": null, "version_op": null, "unified_name": "rtlsdr", "extractor_type": "cmake", "context": "find_package(librtlsdr required)", "confidence": "High"}, {"depname": "libairspy", "version": null, "version_op": null, "unified_name": "airspy", "extractor_type": "cmake", "context": "find_package(libairspy required)", "confidence": "High"}, {"depname": "soapysdr", "version": null, "version_op": null, "unified_name": "soapysdr", "extractor_type": "cmake", "context": "find_package(soapysdr no_module required)", "confidence": "High"}, {"depname": "welle", "version": "0.0.0", "version_op": null, "unified_name": "welle", "extractor_type": "cmake", "context": "project(welle.io version 0.0.0 languages c cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindFFTW3f.cmake", "confidence": "High"}, {"depname": "\"fftw3f ", "version": " 3.0\"", "version_op": ">=", "unified_name": "\"fftw3f ", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_fftw3f \"fftw3f >= 3.0\")", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fftw3f", "libfftw3f"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindFFTW3f.cmake", "content": "find_library(\n    fftw3f_libraries\n    names fftw3f libfftw3f\n    hints $env{fftw3_dir}/lib\n        ${pc_fftw3f_libdir}\n    paths /usr/local/lib\n          /usr/lib\n          /usr/lib64\n  )"}, {"filenames": ["fftw3f_threads", "libfftw3f_threads"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindFFTW3f.cmake", "content": "find_library(\n    fftw3f_threads_libraries\n    names fftw3f_threads libfftw3f_threads\n    hints $env{fftw3_dir}/lib\n        ${pc_fftw3f_libdir}\n    paths /usr/local/lib\n          /usr/lib\n          /usr/lib64\n  )"}]}, {"deps": [{"depname": "libairspy", "version": null, "version_op": null, "unified_name": "airspy", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindLibAIRSPY.cmake", "confidence": "High"}, {"depname": "libairspy", "version": null, "version_op": null, "unified_name": "airspy", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (libairspy_pkg libairspy)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["airspy"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindLibAIRSPY.cmake", "content": "find_library(libairspy_libraries names airspy\n    paths\n    ${libairspy_pkg_library_dirs}\n    /usr/lib\n    /usr/local/lib\n  )"}]}, {"deps": [{"depname": "mpg123", "version": null, "version_op": null, "unified_name": "mpg123", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindMPG123.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpg123", "mpg123-0"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindMPG123.cmake", "content": "find_library(mpg123_libraries names mpg123 mpg123-0\n             paths \"${mpg123_dir}\"\n             path_suffixes lib\n             )"}]}, {"deps": [{"depname": "faad", "version": null, "version_op": null, "unified_name": "faad", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindFaad.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["faad"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindFaad.cmake", "content": "find_library(faad_library names faad doc \"the libfaad library\")"}]}, {"deps": [{"depname": "lame", "version": null, "version_op": null, "unified_name": "lame", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindLame.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mp3lame"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindLame.cmake", "content": "find_library(lame_libraries mp3lame)"}]}, {"deps": [{"depname": "librtlsdr", "version": null, "version_op": null, "unified_name": "rtlsdr", "extractor_type": "cmake", "context": "AlbrechtL@@welle.io/cmake/Modules/FindLibRTLSDR.cmake", "confidence": "High"}, {"depname": "librtlsdr", "version": null, "version_op": null, "unified_name": "rtlsdr", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(librtlsdr_pkg librtlsdr)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rtlsdr"], "version": "", "fromfile": "AlbrechtL@@welle.io/cmake/Modules/FindLibRTLSDR.cmake", "content": "find_library(librtlsdr_libraries names rtlsdr\n\tpaths\n\t${librtlsdr_pkg_library_dirs}\n\t/usr/lib\n        /usr/lib64\n\t/usr/local/lib\n  )"}]}, {"deps": [{"depname": "libfec", "version": null, "version_op": null, "unified_name": "fec", "extractor_type": "cmake", "context": "project(libfec asm c)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["m"], "version": "", "fromfile": "AlbrechtL@@welle.io/src/libs/fec/CMakeLists.txt", "content": "find_library(m_lib m required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}]}