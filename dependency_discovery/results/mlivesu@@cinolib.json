{"target": "mlivesu@@cinolib", "extractors": [{"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost)", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk optional_components iogeometry ioimport ioexport)", "confidence": "High"}, {"depname": "cgal", "version": null, "version_op": null, "unified_name": "cgal", "extractor_type": "cmake", "context": "find_package(cgal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cinolib", "version": null, "version_op": null, "unified_name": "cinolib", "extractor_type": "cmake", "context": "find_package(cinolib required)", "confidence": "High"}, {"depname": "examples", "version": null, "version_op": null, "unified_name": "examples", "extractor_type": "cmake", "context": "project(examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "quadmesh_viewer", "version": null, "version_op": null, "unified_name": "quadmesh_viewer", "extractor_type": "cmake", "context": "project(quadmesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tetrahedralize", "version": null, "version_op": null, "unified_name": "tetrahedralize", "extractor_type": "cmake", "context": "project(tetrahedralize)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sliced_cli_loader", "version": null, "version_op": null, "unified_name": "sliced_cli_loader", "extractor_type": "cmake", "context": "project(sliced_cli_loader)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "coarse_quad_layout", "version": null, "version_op": null, "unified_name": "coarse_quad_layout", "extractor_type": "cmake", "context": "project(coarse_quad_layout)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hermiterbf", "version": null, "version_op": null, "unified_name": "hermiterbf", "extractor_type": "cmake", "context": "project(hermiterbf)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "iso_surfaces", "version": null, "version_op": null, "unified_name": "iso_surfaces", "extractor_type": "cmake", "context": "project(iso_surfaces)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mesh_format_converter", "version": null, "version_op": null, "unified_name": "mesh_format_converter", "extractor_type": "cmake", "context": "project(mesh_format_converter)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polygonmesh_viewer", "version": null, "version_op": null, "unified_name": "polygonmesh_viewer", "extractor_type": "cmake", "context": "project(polygonmesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "surface_painter", "version": null, "version_op": null, "unified_name": "surface_painter", "extractor_type": "cmake", "context": "project(surface_painter)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigenfunctions", "version": null, "version_op": null, "unified_name": "eigenfunctions", "extractor_type": "cmake", "context": "project(eigenfunctions)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "harmonic_map", "version": null, "version_op": null, "unified_name": "harmonic_map", "extractor_type": "cmake", "context": "project(harmonic_map)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polyhedral_mesh_generation", "version": null, "version_op": null, "unified_name": "polyhedral_mesh_generation", "extractor_type": "cmake", "context": "project(polyhedral_mesh_generation)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sphere_sampling", "version": null, "version_op": null, "unified_name": "sphere_sampling", "extractor_type": "cmake", "context": "project(sphere_sampling)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "afm", "version": null, "version_op": null, "unified_name": "afm", "extractor_type": "cmake", "context": "project(afm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tetmesh_viewer", "version": null, "version_op": null, "unified_name": "tetmesh_viewer", "extractor_type": "cmake", "context": "project(tetmesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polygon_measures", "version": null, "version_op": null, "unified_name": "polygon_measures", "extractor_type": "cmake", "context": "project(polygon_measures)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hexmesh_viewer", "version": null, "version_op": null, "unified_name": "hexmesh_viewer", "extractor_type": "cmake", "context": "project(hexmesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "homotopy_basis", "version": null, "version_op": null, "unified_name": "homotopy_basis", "extractor_type": "cmake", "context": "project(homotopy_basis)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "texture_loading", "version": null, "version_op": null, "unified_name": "texture_loading", "extractor_type": "cmake", "context": "project(texture_loading)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sharp_creases", "version": null, "version_op": null, "unified_name": "sharp_creases", "extractor_type": "cmake", "context": "project(sharp_creases)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polyhedralmesh_viewer", "version": null, "version_op": null, "unified_name": "polyhedralmesh_viewer", "extractor_type": "cmake", "context": "project(polyhedralmesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polygon_mesh_generation", "version": null, "version_op": null, "unified_name": "polygon_mesh_generation", "extractor_type": "cmake", "context": "project(polygon_mesh_generation)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "export_surface", "version": null, "version_op": null, "unified_name": "export_surface", "extractor_type": "cmake", "context": "project(export_surface)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hex2tet", "version": null, "version_op": null, "unified_name": "hex2tet", "extractor_type": "cmake", "context": "project(hex2tet)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "lscm", "version": null, "version_op": null, "unified_name": "lscm", "extractor_type": "cmake", "context": "project(lscm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "remesher", "version": null, "version_op": null, "unified_name": "remesher", "extractor_type": "cmake", "context": "project(remesher)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "poisson_sampling", "version": null, "version_op": null, "unified_name": "poisson_sampling", "extractor_type": "cmake", "context": "project(poisson_sampling)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "voxelize_mesh", "version": null, "version_op": null, "unified_name": "voxelize_mesh", "extractor_type": "cmake", "context": "project(voxelize_mesh)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "canonical_polygonal_schema", "version": null, "version_op": null, "unified_name": "canonical_polygonal_schema", "extractor_type": "cmake", "context": "project(canonical_polygonal_schema)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "octree", "version": null, "version_op": null, "unified_name": "octree", "extractor_type": "cmake", "context": "project(octree)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "coarse_hex_layout", "version": null, "version_op": null, "unified_name": "coarse_hex_layout", "extractor_type": "cmake", "context": "project(coarse_hex_layout)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "find_intersections", "version": null, "version_op": null, "unified_name": "find_intersections", "extractor_type": "cmake", "context": "project(find_intersections)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "arap_uvmap", "version": null, "version_op": null, "unified_name": "arap_uvmap", "extractor_type": "cmake", "context": "project(arap_uvmap)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "voxelize_function", "version": null, "version_op": null, "unified_name": "voxelize_function", "extractor_type": "cmake", "context": "project(voxelize_function)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "connected_components", "version": null, "version_op": null, "unified_name": "connected_components", "extractor_type": "cmake", "context": "project(connected_components)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "normalize_and_center", "version": null, "version_op": null, "unified_name": "normalize_and_center", "extractor_type": "cmake", "context": "project(normalize_and_center)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "arap_deformation", "version": null, "version_op": null, "unified_name": "arap_deformation", "extractor_type": "cmake", "context": "project(arap_deformation)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polyharmonic_functions_vol", "version": null, "version_op": null, "unified_name": "polyharmonic_functions_vol", "extractor_type": "cmake", "context": "project(polyharmonic_functions_vol)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "import_surface", "version": null, "version_op": null, "unified_name": "import_surface", "extractor_type": "cmake", "context": "project(import_surface)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "polyharmonic_functions_srf", "version": null, "version_op": null, "unified_name": "polyharmonic_functions_srf", "extractor_type": "cmake", "context": "project(polyharmonic_functions_srf)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ambient_occlusion", "version": null, "version_op": null, "unified_name": "ambient_occlusion", "extractor_type": "cmake", "context": "project(ambient_occlusion)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "edge_collapse", "version": null, "version_op": null, "unified_name": "edge_collapse", "extractor_type": "cmake", "context": "project(edge_collapse)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "trimesh_viewer", "version": null, "version_op": null, "unified_name": "trimesh_viewer", "extractor_type": "cmake", "context": "project(trimesh_viewer)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "iso_contours", "version": null, "version_op": null, "unified_name": "iso_contours", "extractor_type": "cmake", "context": "project(iso_contours)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "heat_geodesics", "version": null, "version_op": null, "unified_name": "heat_geodesics", "extractor_type": "cmake", "context": "project(heat_geodesics)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "picking", "version": null, "version_op": null, "unified_name": "picking", "extractor_type": "cmake", "context": "project(picking)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sphere_mapping", "version": null, "version_op": null, "unified_name": "sphere_mapping", "extractor_type": "cmake", "context": "project(sphere_mapping)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "standardmathlibrary", "version": null, "version_op": null, "unified_name": "standardmathlibrary", "extractor_type": "cmake", "context": "find_package(standardmathlibrary)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "project(eigen3)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt4", "version": null, "version_op": null, "unified_name": "qt4", "extractor_type": "cmake", "context": "find_package(qt4)", "confidence": "High"}, {"depname": "eigendemos", "version": null, "version_op": null, "unified_name": "eigendemos", "extractor_type": "cmake", "context": "project(eigendemos)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "find_package(cholmod)", "confidence": "High"}, {"depname": "umfpack", "version": null, "version_op": null, "unified_name": "umfpack", "extractor_type": "cmake", "context": "find_package(umfpack)", "confidence": "High"}, {"depname": "klu", "version": null, "version_op": null, "unified_name": "klu", "extractor_type": "cmake", "context": "find_package(klu)", "confidence": "High"}, {"depname": "superlu", "version": "4.0", "version_op": null, "unified_name": "superlu", "extractor_type": "cmake", "context": "find_package(superlu 4.0)", "confidence": "High"}, {"depname": "pastix", "version": null, "version_op": null, "unified_name": "pastix", "extractor_type": "cmake", "context": "find_package(pastix quiet components metis scotch)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/spbench/CMakeLists.txt", "content": "find_library(rt_library rt)"}]}, {"deps": [{"depname": "btl", "version": null, "version_op": null, "unified_name": "btl", "extractor_type": "cmake", "context": "project(btl)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/CMakeLists.txt", "content": "find_library(eigen_btl_rt_library rt)"}]}, {"deps": [{"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindOPENBLAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openblas"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindOPENBLAS.cmake", "content": "find_library(openblas_libraries openblas paths $env{openblasdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "mtl4", "version": null, "version_op": null, "unified_name": "mtl4", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMTL4.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cblas", "version": null, "version_op": null, "unified_name": "cblas", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindCBLAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cblas"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindCBLAS.cmake", "content": "find_library(cblas_libraries\n  cblas\n  paths\n  $env{cblasdir}/lib\n  ${lib_install_dir}\n)"}]}, {"deps": [{"depname": "gmm", "version": null, "version_op": null, "unified_name": "gmm", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindGMM.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_core"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMKL.cmake", "content": "find_library(mkl_libraries\n  mkl_core\n  paths\n  $env{mkllib}\n  /opt/intel/mkl/*/lib/em64t\n  /opt/intel/compiler/*/*/mkl/lib/em64t\n  ${lib_install_dir}\n)"}, {"filenames": ["guide"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMKL.cmake", "content": "find_library(mkl_guide\n  guide\n  paths\n  $env{mkllib}\n  /opt/intel/mkl/*/lib/em64t\n  /opt/intel/compiler/*/*/mkl/lib/em64t\n  /opt/intel/compiler/*/*/lib/intel64\n  ${lib_install_dir}\n)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMKL.cmake", "content": "find_library(mkl_libraries\n  mkl_core\n  paths\n  $env{mkllib}\n  /opt/intel/mkl/*/lib/32\n  /opt/intel/compiler/*/*/mkl/lib/32\n  ${lib_install_dir}\n)"}, {"filenames": ["guide"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindMKL.cmake", "content": "find_library(mkl_guide\n  guide\n  paths\n  $env{mkllib}\n  /opt/intel/mkl/*/lib/32\n  /opt/intel/compiler/*/*/mkl/lib/32\n  /opt/intel/compiler/*/*/lib/intel32\n  ${lib_install_dir}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "atlas", "version": null, "version_op": null, "unified_name": "atlas", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindATLAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["satlas"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindATLAS.cmake", "content": "find_library(atlas_lib satlas paths $env{atlasdir} ${lib_install_dir})"}, {"filenames": ["lapack_atlas", "lapack"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindATLAS.cmake", "content": "find_library(atlas_lapack names lapack_atlas lapack paths $env{atlasdir} ${lib_install_dir})"}, {"filenames": ["f77blas"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindATLAS.cmake", "content": "find_library(atlas_f77blas f77blas paths $env{atlasdir} ${lib_install_dir})"}, {"filenames": ["lapack"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindATLAS.cmake", "content": "find_library(atlas_reference_lapack names lapack)"}]}, {"deps": [{"depname": "tvmet", "version": null, "version_op": null, "unified_name": "tvmet", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindTvmet.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "blaze", "version": null, "version_op": null, "unified_name": "blaze", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindBLAZE.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "blitz", "version": null, "version_op": null, "unified_name": "blitz", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindBlitz.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["blitz"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindBlitz.cmake", "content": "find_library(blitz_libraries\n  blitz\n  paths\n  $env{blitzdir}/lib\n  ${lib_install_dir}\n)"}]}, {"deps": [{"depname": "acml", "version": null, "version_op": null, "unified_name": "acml", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindACML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["acml_mp", "acml_mv"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindACML.cmake", "content": "find_library(acml_libraries\n  names\n  acml_mp acml_mv\n  paths\n  $env{acmldir}/lib\n  $env{acml_dir}/lib\n  ${lib_install_dir}\n)"}, {"filenames": ["acml", "acml_mv"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/bench/btl/cmake/FindACML.cmake", "content": "find_library(acml_libraries\n        names\n        acml acml_mv\n        paths\n        $env{acmldir}/lib\n        $env{acml_dir}/lib\n        ${lib_install_dir}\n        )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl)", "confidence": "High"}, {"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "find_package(openblas)", "confidence": "High"}, {"depname": "acml", "version": null, "version_op": null, "unified_name": "acml", "extractor_type": "cmake", "context": "find_package(acml)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components system)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tensor", "version": null, "version_op": null, "unified_name": "tensor", "extractor_type": "cmake", "context": "find_package(tensor)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cholmod"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(cholmod_libraries cholmod paths $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["amd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(amd_library amd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["colamd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(colamd_library colamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["camd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(camd_library camd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["ccolamd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(ccolamd_library ccolamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["metis"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(cholmod_metis_library metis paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["suitesparse"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindCHOLMOD.cmake", "content": "find_library(suitesparse_library suitesparse paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3", "version": "3", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 ${eigen3_find_version} no_module quiet)", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindLAPACK.cmake", "confidence": "High"}, {"depname": "f2c", "version": null, "version_op": null, "unified_name": "f2c", "extractor_type": "cmake", "context": "find_package( f2c quiet )", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n                  names ${_library}\n                  paths ${_path} no_default_path\n                  )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n                    names ${_library}\n                    paths env lib\n                    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n                    names ${_library}\n                    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env dyld_library_path\n                    )"}, {"filenames": ["${_library}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindLAPACK.cmake", "content": "find_library(${_prefix}_${_library}_library\n                    names ${_library}\n                    paths /usr/local/lib /usr/lib /usr/local/lib64 /usr/lib64 env ld_library_path\n                    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "win_num", "version": null, "version_op": null, "unified_name": "win_num", "extractor_type": "cmake", "context": "\t\t\t\t\n    set(win_num_version ${_major}.${_minor})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pastix", "version": null, "version_op": null, "unified_name": "pastix", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required quiet)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}, {"depname": "hwloc", "version": null, "version_op": null, "unified_name": "hwloc", "extractor_type": "cmake", "context": "find_package(hwloc required quiet)", "confidence": "High"}, {"depname": "hwloc", "version": null, "version_op": null, "unified_name": "hwloc", "extractor_type": "cmake", "context": "find_package(hwloc quiet)", "confidence": "High"}, {"depname": "blasext", "version": null, "version_op": null, "unified_name": "blasext", "extractor_type": "cmake", "context": "find_package(blasext required quiet)", "confidence": "High"}, {"depname": "blasext", "version": null, "version_op": null, "unified_name": "blasext", "extractor_type": "cmake", "context": "find_package(blasext quiet)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required quiet)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi quiet)", "confidence": "High"}, {"depname": "starpu", "version": null, "version_op": null, "unified_name": "starpu", "extractor_type": "cmake", "context": "find_package(starpu ${pastix_starpu_version} required\n      components hwloc)", "confidence": "High"}, {"depname": "starpu", "version": null, "version_op": null, "unified_name": "starpu", "extractor_type": "cmake", "context": "find_package(starpu ${pastix_starpu_version}\n      components hwloc)", "confidence": "High"}, {"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "find_package(scotch required quiet)", "confidence": "High"}, {"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "find_package(scotch quiet)", "confidence": "High"}, {"depname": "ptscotch", "version": null, "version_op": null, "unified_name": "ptscotch", "extractor_type": "cmake", "context": "find_package(ptscotch required quiet)", "confidence": "High"}, {"depname": "ptscotch", "version": null, "version_op": null, "unified_name": "ptscotch", "extractor_type": "cmake", "context": "find_package(ptscotch quiet)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis required quiet)", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(\n    pastix_m_m_library\n    names m\n    )"}, {"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(\n    pastix_rt_rt_library\n    names rt\n    )"}, {"filenames": ["${pastix_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(pastix_${pastix_lib}_library\n      names ${pastix_lib}\n      hints ${pastix_libdir})"}, {"filenames": ["${pastix_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(pastix_${pastix_lib}_library\n\tnames ${pastix_lib}\n\thints ${pastix_dir}\n\tpath_suffixes lib lib32 lib64)"}, {"filenames": ["${pastix_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(pastix_${pastix_lib}_library\n\tnames ${pastix_lib}\n\thints ${_lib_env})"}, {"filenames": ["gfortran"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(\n      fortran_gfortran_library\n      names gfortran\n      hints ${_lib_env}\n      )"}, {"filenames": ["ifcore"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPastix.cmake", "content": "find_library(\n      fortran_ifcore_library\n      names ifcore\n      hints ${_lib_env}\n      )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "blasext", "version": null, "version_op": null, "unified_name": "blasext", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindBLASEXT.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required quiet)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas quiet)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindGLEW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glew32"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGLEW.cmake", "content": "find_library( glew_glew_library glew32\n      ${opengl_library_dir}\n      /usr/lib/w32api\n      /usr/x11r6/lib\n    )"}, {"filenames": ["glew", "glew32"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGLEW.cmake", "content": "find_library( glew_glew_library\n      names glew glew32\n      paths\n      $env{glew_root_path}/lib\n      ${opengl_library_dir}\n    )"}, {"filenames": ["glew"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGLEW.cmake", "content": "find_library( glew_glew_library glew\n      /usr/openwin/lib\n      /usr/x11r6/lib\n    )"}]}, {"deps": [{"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n\tnames ${_library}\n\thints ${argn}\n\tno_default_path\n\t)"}, {"filenames": ["iomp5"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(omp_iomp5_library\n      names iomp5\n      hints ${argn}\n      )"}, {"filenames": ["gomp"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(omp_gomp_library\n      names gomp\n      hints ${argn}\n      )"}, {"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(m_library\n\tnames m\n\thints ${argn})"}, {"filenames": ["gfortran"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(\n\t  fortran_gfortran_library\n\t  names gfortran\n\t  hints ${argn}\n\t  )"}, {"filenames": ["ifcore"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindBLAS.cmake", "content": "find_library(\n\t  fortran_ifcore_library\n\t  names ifcore\n\t  hints ${argn}\n\t  )"}]}, {"deps": [{"depname": "hwloc", "version": null, "version_op": null, "unified_name": "hwloc", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindHWLOC.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "hwloc", "version": null, "version_op": null, "unified_name": "hwloc", "extractor_type": "cmake::pkg", "context": "pkg_search_module(hwloc hwloc)", "confidence": "High"}, {"depname": "${hwloc_libraries}", "version": null, "version_op": null, "unified_name": "${hwloc_libraries}", "extractor_type": "cmake", "context": "check_library_exists(${hwloc_libraries} hwloc_bitmap_free \"\" have_hwloc_bitmap)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hwloc"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindHWLOC.cmake", "content": "find_library(hwloc_hwloc_library\n      names hwloc\n      hints ${hwloc_libdir})"}, {"filenames": ["hwloc"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindHWLOC.cmake", "content": "find_library(hwloc_hwloc_library\n\tnames hwloc\n\thints ${hwloc_dir}\n\tpath_suffixes lib lib32 lib64)"}, {"filenames": ["hwloc"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindHWLOC.cmake", "content": "find_library(hwloc_hwloc_library\n\tnames hwloc\n\thints ${_lib_env})"}]}, {"deps": [{"depname": "klu", "version": null, "version_op": null, "unified_name": "klu", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindKLU.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["klu"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindKLU.cmake", "content": "find_library(klu_libraries klu paths $env{kludir} ${lib_install_dir})"}, {"filenames": ["colamd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindKLU.cmake", "content": "find_library(colamd_library colamd paths ${klu_libdir} $env{kludir} ${lib_install_dir})"}, {"filenames": ["amd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindKLU.cmake", "content": "find_library(amd_library amd paths ${klu_libdir} $env{kludir} ${lib_install_dir})"}, {"filenames": ["btf"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindKLU.cmake", "content": "find_library(btf_library btf paths $env{klu_libdir} $env{kludir} ${lib_install_dir})"}]}, {"deps": [{"depname": "eigen2", "version": null, "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindEigen2.cmake", "confidence": "High"}, {"depname": "eigen2_find", "version": "2.0.0", "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "\n  set(eigen2_find_version \"2.0.0\")", "confidence": "Low"}, {"depname": "eigen2_world", "version": "1", "version_op": null, "unified_name": "eigen2_world", "extractor_type": "cmake", "context": "  set(eigen2_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen2_major", "version": "1", "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "  set(eigen2_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen2_minor", "version": "1", "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "  set(eigen2_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen2", "version": null, "version_op": null, "unified_name": "eigen2", "extractor_type": "cmake", "context": "\n  set(eigen2_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "\"fftw3\"", "version": null, "version_op": null, "unified_name": "\"fftw3\"", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pkg_fftw quiet \"fftw3\" )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"fftw3\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths $env{fftwdir}\n    path_suffixes \"lib\" \"lib64\"\n    no_default_path\n  )"}, {"filenames": ["\"fftw3\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftw_lib\n    names \"fftw3\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3f\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftwf_lib\n    names \"fftw3f\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}, {"filenames": ["\"fftw3l\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindFFTW.cmake", "content": "find_library(\n    fftwl_lib\n    names \"fftw3l\"\n    paths ${pkg_fftw_library_dirs} ${lib_install_dir}\n  )"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "eigen_cxx_flag", "version": null, "version_op": null, "unified_name": "eigen_cxx_flag", "extractor_type": "cmake", "context": "      set(eigen_cxx_flag_version \"/version\")", "confidence": "Low"}, {"depname": "eigen_cxx_flag", "version": null, "version_op": null, "unified_name": "eigen_cxx_flag", "extractor_type": "cmake", "context": "      set(eigen_cxx_flag_version \"--version\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "superlu", "version": null, "version_op": null, "unified_name": "superlu", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindSuperLU.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"superlu_5.2.1\"", "\"superlu_5.2\"", "\"superlu_5.1.1\"", "\"superlu_5.1\"", "\"superlu_5.0\"", "\"superlu_4.3\"", "\"superlu_4.2\"", "\"superlu_4.1\"", "\"superlu_4.0\"", "\"superlu_3.1\"", "\"superlu_3.0\"", "\"superlu\""], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindSuperLU.cmake", "content": "find_library(superlu_libraries\n  names \"superlu_5.2.1\" \"superlu_5.2\" \"superlu_5.1.1\" \"superlu_5.1\" \"superlu_5.0\" \"superlu_4.3\" \"superlu_4.2\" \"superlu_4.1\" \"superlu_4.0\" \"superlu_3.1\" \"superlu_3.0\" \"superlu\"\n  paths $env{superludir} ${lib_install_dir}\n  path_suffixes lib)"}]}, {"deps": [{"depname": "standardmathlibrary", "version": null, "version_op": null, "unified_name": "standardmathlibrary", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindStandardMathLibrary.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "scotch", "version": null, "version_op": null, "unified_name": "scotch", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${scotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n      names ${scotch_lib}\n      hints ${scotch_libdir})"}, {"filenames": ["${scotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n\tnames ${scotch_lib}\n\thints ${scotch_dir}\n\tpath_suffixes lib lib32 lib64)"}, {"filenames": ["${scotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(scotch_${scotch_lib}_library\n\tnames ${scotch_lib}\n\thints ${_lib_env})"}, {"filenames": ["z"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(z_library names z)"}, {"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(m_library names m)"}, {"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindScotch.cmake", "content": "find_library(rt_library names rt)"}]}, {"deps": [{"depname": "adolc", "version": null, "version_op": null, "unified_name": "adolc", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindAdolc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["adolc"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindAdolc.cmake", "content": "find_library(adolc_libraries \n  adolc \n  paths $env{adolcdir} ${lib_install_dir} \n  path_suffixes lib lib64)"}]}, {"deps": [{"depname": "computecpp", "version": null, "version_op": null, "unified_name": "computecpp", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindComputeCpp.cmake", "confidence": "High"}, {"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["computecpp", "computecpp_vs2015"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindComputeCpp.cmake", "content": "find_library(computecpp_runtime_library\n  names computecpp computecpp_vs2015\n  hints $env{computecpp_dir}\n  path_suffixes lib\n  doc \"computecpp runtime library\")"}, {"filenames": ["computecpp_d", "computecpp", "computecpp_vs2015_d"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindComputeCpp.cmake", "content": "find_library(computecpp_runtime_library_debug\n  names computecpp_d computecpp computecpp_vs2015_d\n  hints $env{computecpp_dir}\n  path_suffixes lib\n  doc \"computecpp debug runtime library\")"}, {"filenames": ["compute++"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindComputeCpp.cmake", "content": "find_program(computecpp_device_compiler_executable compute++\n  hints $env{computecpp_host_dir}\n  path_suffixes bin\n  no_system_environment_path)"}, {"filenames": ["computecpp_info"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindComputeCpp.cmake", "content": "find_program(computecpp_info_executable computecpp_info\n  hints $env{computecpp_host_dir}\n  path_suffixes bin\n  no_system_environment_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "trisycl", "version": null, "version_op": null, "unified_name": "trisycl", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindTriSYCL.cmake", "confidence": "High"}, {"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "boost", "version": "1.58", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.58 required components chrono log)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindGMP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gmp"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGMP.cmake", "content": "find_library(gmp_libraries gmp paths $env{gmpdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindMetis.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["metis"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindMetis.cmake", "content": "find_library(metis_metis_library\n    names metis\n    hints ${metis_libdir})"}, {"filenames": ["metis"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindMetis.cmake", "content": "find_library(metis_metis_library\n      names metis\n      hints ${metis_dir}\n      path_suffixes lib lib32 lib64)"}, {"filenames": ["metis"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindMetis.cmake", "content": "find_library(metis_metis_library\n      names metis\n      hints ${_lib_env})"}, {"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindMetis.cmake", "content": "find_library(m_library names m)"}]}, {"deps": [{"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindMPFR.cmake", "confidence": "High"}, {"depname": "mpfr_find", "version": "1.0.0", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "\n  set(mpfr_find_version \"1.0.0\")", "confidence": "Low"}, {"depname": "mpfr_major", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr_minor", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr_patchlevel", "version": "1", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  set(mpfr_patchlevel_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "mpfr", "version": null, "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "  \n  set(mpfr_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["mpfr"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindMPFR.cmake", "content": "find_library(mpfr_libraries mpfr paths $env{gmpdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "umfpack", "version": null, "version_op": null, "unified_name": "umfpack", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["umfpack"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "content": "find_library(umfpack_libraries umfpack paths $env{umfpackdir} ${lib_install_dir})"}, {"filenames": ["colamd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "content": "find_library(colamd_library colamd paths ${umfpack_libdir} $env{umfpackdir} ${lib_install_dir})"}, {"filenames": ["amd"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "content": "find_library(amd_library amd paths ${umfpack_libdir} $env{umfpackdir} ${lib_install_dir})"}, {"filenames": ["suitesparse"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "content": "find_library(suitesparse_library suitesparse paths ${umfpack_libdir} $env{umfpackdir} ${lib_install_dir})"}, {"filenames": ["cholmod"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindUMFPACK.cmake", "content": "find_library(cholmod_library cholmod paths $env{umfpack_libdir} $env{umfpackdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "googlehash", "version": null, "version_op": null, "unified_name": "googlehash", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindGoogleHash.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindGSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libgsl.dll.a", "gsl", "libgsl"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGSL.cmake", "content": "find_library(gsl_gsl_library\n    names libgsl.dll.a gsl libgsl\n    paths  ${gsl_possible_root_dirs}\n    path_suffixes lib\n    doc \"gsl library\" )"}, {"filenames": ["libgslcblas.dll.a", "gslcblas", "libgslcblas"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGSL.cmake", "content": "find_library(gsl_gslcblas_library\n    names libgslcblas.dll.a gslcblas libgslcblas\n    paths  ${gsl_possible_root_dirs}\n    path_suffixes lib\n    doc \"gsl cblas library dir\" )"}, {"filenames": ["gsl-config"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindGSL.cmake", "content": "find_program(gsl_config gsl-config\n      ${gsl_config_prefer_path}\n      /usr/bin/\n      )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "spqr", "version": null, "version_op": null, "unified_name": "spqr", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindSPQR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["spqr"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindSPQR.cmake", "content": "find_library(spqr_libraries spqr $env{spqrdir} ${lib_install_dir})"}, {"filenames": ["suitesparse"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindSPQR.cmake", "content": "find_library(suitesparse_library suitesparse paths $env{spqrdir} ${lib_install_dir})"}, {"filenames": ["cholmod"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindSPQR.cmake", "content": "find_library(cholmod_library cholmod paths $env{umfpack_libdir} $env{umfpackdir} ${lib_install_dir})"}]}, {"deps": [{"depname": "ptscotch", "version": null, "version_op": null, "unified_name": "ptscotch", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi required)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${ptscotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(ptscotch_${ptscotch_lib}_library\n      names ${ptscotch_lib}\n      hints ${ptscotch_libdir})"}, {"filenames": ["${ptscotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(ptscotch_${ptscotch_lib}_library\n\tnames ${ptscotch_lib}\n\thints ${ptscotch_dir}\n\tpath_suffixes lib lib32 lib64)"}, {"filenames": ["${ptscotch_lib}"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(ptscotch_${ptscotch_lib}_library\n\tnames ${ptscotch_lib}\n\thints ${_lib_env})"}, {"filenames": ["z"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(z_library names z)"}, {"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(m_library names m)"}, {"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/eigen/cmake/FindPTSCOTCH.cmake", "content": "find_library(rt_library names rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "googlehash", "version": null, "version_op": null, "unified_name": "googlehash", "extractor_type": "cmake", "context": "find_package(googlehash)", "confidence": "High"}, {"depname": "adolc", "version": null, "version_op": null, "unified_name": "adolc", "extractor_type": "cmake", "context": "find_package(adolc)", "confidence": "High"}, {"depname": "mpfr", "version": "2.3.0", "version_op": null, "unified_name": "mpfr", "extractor_type": "cmake", "context": "find_package(mpfr 2.3.0)", "confidence": "High"}, {"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "find_package(gmp)", "confidence": "High"}, {"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "find_package(fftw)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "find_package(glut)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew)", "confidence": "High"}, {"depname": "cuda", "version": "7.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 7.0)", "confidence": "High"}, {"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigendoc", "version": null, "version_op": null, "unified_name": "eigendoc", "extractor_type": "cmake", "context": "project(eigendoc)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt4", "version": null, "version_op": null, "unified_name": "qt4", "extractor_type": "cmake", "context": "find_package(qt4)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}, {"depname": "eigenlapack", "version": null, "version_op": null, "unified_name": "eigenlapack", "extractor_type": "cmake", "context": "project(eigenlapack cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack quiet)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas required)", "confidence": "High"}, {"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "find_package(cholmod)", "confidence": "High"}, {"depname": "umfpack", "version": null, "version_op": null, "unified_name": "umfpack", "extractor_type": "cmake", "context": "find_package(umfpack)", "confidence": "High"}, {"depname": "klu", "version": null, "version_op": null, "unified_name": "klu", "extractor_type": "cmake", "context": "find_package(klu)", "confidence": "High"}, {"depname": "superlu", "version": "4.0", "version_op": null, "unified_name": "superlu", "extractor_type": "cmake", "context": "find_package(superlu 4.0)", "confidence": "High"}, {"depname": "pastix", "version": null, "version_op": null, "unified_name": "pastix", "extractor_type": "cmake", "context": "find_package(pastix quiet components metis seq)", "confidence": "High"}, {"depname": "spqr", "version": null, "version_op": null, "unified_name": "spqr", "extractor_type": "cmake", "context": "find_package(spqr)", "confidence": "High"}, {"depname": "qt4", "version": null, "version_op": null, "unified_name": "qt4", "extractor_type": "cmake", "context": "find_package(qt4)", "confidence": "High"}, {"depname": "boost", "version": "1.53.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.53.0)", "confidence": "High"}, {"depname": "cuda", "version": "5.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 5.0)", "confidence": "High"}, {"depname": "hip", "version": null, "version_op": null, "unified_name": "hip", "extractor_type": "cmake", "context": "find_package(hip required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigenblas", "version": null, "version_op": null, "unified_name": "eigenblas", "extractor_type": "cmake", "context": "project(eigenblas cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ecm", "version": null, "version_op": null, "unified_name": "ecm", "extractor_type": "cmake", "context": "find_package(ecm required no_module)", "confidence": "High"}, {"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "find_package(wayland required client cursor egl)", "confidence": "High"}, {"depname": "waylandscanner", "version": null, "version_op": null, "unified_name": "waylandscanner", "extractor_type": "cmake", "context": "find_package(waylandscanner required)", "confidence": "High"}, {"depname": "waylandprotocols", "version": "1.15", "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "find_package(waylandprotocols 1.15 required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "find_package(epollshim)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "find_package(osmesa required)", "confidence": "High"}, {"depname": "glfw", "version": "3.3.4", "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw version 3.3.4 languages c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "mlivesu@@cinolib/external/imgui/glfw/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "mlivesu@@cinolib/external/imgui/glfw/CMakeLists.txt", "content": "find_library(math_library m)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindEpollShim.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["epoll-shim", "libepoll-shim"], "version": "", "fromfile": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindEpollShim.cmake", "content": "find_library(epollshim_libraries names epoll-shim libepoll-shim hints /usr/local/lib)"}]}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindOSMesa.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package (pkgconfig)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (pkg_osmesa quiet osmesa)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindXKBCommon.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_xkbcommon quiet xkbcommon)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xkbcommon"], "version": "", "fromfile": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindXKBCommon.cmake", "content": "find_library(xkbcommon_library\n    names xkbcommon\n    hints ${pc_xkbcommon_library} ${pc_xkbcommon_library_dirs}\n)"}]}, {"deps": [{"depname": "waylandprotocols", "version": null, "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "mlivesu@@cinolib/external/imgui/glfw/CMake/modules/FindWaylandProtocols.cmake", "confidence": "High"}, {"depname": "wayland_protocols", "version": null, "version_op": null, "unified_name": "wayland_protocols", "extractor_type": "cmake", "context": "set(wayland_protocols_version ${waylandprotocols_version})", "confidence": "Low"}, {"depname": "wayland-protocols", "version": "${waylandprotocols_find_version}", "version_op": ">=", "unified_name": "wayland-protocols", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(waylandprotocols quiet wayland-protocols>=${waylandprotocols_find_version})", "confidence": "High"}], "type": "cmake", "libs": []}]}