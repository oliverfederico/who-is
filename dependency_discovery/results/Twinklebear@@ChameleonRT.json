{"target": "Twinklebear@@ChameleonRT", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 config required)", "confidence": "High"}, {"depname": "chameleonrt", "version": null, "version_op": null, "unified_name": "chameleonrt", "extractor_type": "cmake", "context": "project(chameleonrt)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pbrtparser", "version": null, "version_op": null, "unified_name": "pbrtparser", "extractor_type": "cmake", "context": "find_package(pbrtparser required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/util/CMakeLists.txt", "content": "find_library(sdl2_shared_library sdl2 required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "11", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 11 required)", "confidence": "High"}, {"depname": "optix", "version": "7", "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "find_package(optix 7 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["bin2c"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/optix/cmake/Bin2C.cmake", "content": "find_program(bin2c names bin2c\n    paths\n    ${cuda_sdk_root_dir}\n    ${cuda_compiler_bin})"}]}, {"deps": [{"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "Twinklebear@@ChameleonRT/backends/optix/cmake/FindOptiX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "embree", "version": "4", "version_op": null, "unified_name": "embree", "extractor_type": "cmake", "context": "find_package(embree 4 required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ospray", "version": null, "version_op": null, "unified_name": "ospray", "extractor_type": "cmake", "context": "find_package(ospray required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vulkan-1"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_library(vulkan_library\n            names vulkan-1\n            paths\n            ${vulkan_sdk}/lib\n            ${vulkan_sdk}/bin\n            $env{vulkan_sdk}/lib\n            $env{vulkan_sdk}/bin\n        )"}, {"filenames": ["vulkan-1"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_library(vulkan_library\n            names vulkan-1\n            paths\n            ${vulkan_sdk}/lib32\n            ${vulkan_sdk}/bin32\n            $env{vulkan_sdk}/lib32\n            $env{vulkan_sdk}/bin32\n            no_system_environment_path\n        )"}, {"filenames": ["vulkan"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_library(vulkan_library\n            names vulkan\n            paths\n            ${vulkan_sdk}/x86_64/lib\n            $env{vulkan_sdk}/x86_64/lib\n            no_default_path\n        )"}, {"filenames": ["vulkan"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_library(vulkan_library\n            names vulkan\n            paths\n            ${vulkan_sdk}/x86_64/lib\n            $env{vulkan_sdk}/x86_64/lib\n        )"}, {"filenames": ["glslc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_program(glslc\n            names glslc\n            paths\n            ${vulkan_sdk}/bin\n            $env{vulkan_sdk}/bin\n        )"}, {"filenames": ["glslc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_program(glslc\n            names glslc\n            paths\n            ${vulkan_sdk}/bin32\n            $env{vulkan_sdk}/bin32\n        )"}, {"filenames": ["glslc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_program(glslc\n            names glslc\n            paths\n            ${vulkan_sdk}/x86_64/bin\n            $env{vulkan_sdk}/x86_64/bin\n            no_default_path\n        )"}, {"filenames": ["glslc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/vulkan/cmake/FindVulkan.cmake", "content": "find_program(glslc\n            names glslc\n            paths\n            ${vulkan_sdk}/x86_64/bin\n            $env{vulkan_sdk}/x86_64/bin\n        )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["quartzcore"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/metal/CMakeLists.txt", "content": "find_library(quartz_core quartzcore)"}, {"filenames": ["metal"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/metal/CMakeLists.txt", "content": "find_library(metal_lib metal)"}, {"filenames": ["cocoa"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/metal/CMakeLists.txt", "content": "find_library(cocoa_lib cocoa)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "d3d12", "version": null, "version_op": null, "unified_name": "d3d12", "extractor_type": "cmake", "context": "find_package(d3d12 required)", "confidence": "High"}, {"depname": "winpixeventruntime", "version": null, "version_op": null, "unified_name": "winpixeventruntime", "extractor_type": "cmake", "context": "find_package(winpixeventruntime required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "d3d12", "version": null, "version_op": null, "unified_name": "d3d12", "extractor_type": "cmake", "context": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "confidence": "High"}, {"depname": "win10_sdk", "version": "10", "version_op": null, "unified_name": "win10_sdk", "extractor_type": "cmake", "context": "\tset (win10_sdk_version $env{win10_sdk_version})", "confidence": "Low"}, {"depname": "win10_sdk", "version": null, "version_op": null, "unified_name": "win10_sdk", "extractor_type": "cmake", "context": "\tset(win10_sdk_version \"${win10_sdk_version}.0\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["d3d12.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(d3d12_library names d3d12.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x64)"}, {"filenames": ["d3dcompiler.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(d3d12_compiler_library names d3dcompiler.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x64)"}, {"filenames": ["dxgi.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(dxgi_library names dxgi.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x64)"}, {"filenames": ["d3d12.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(d3d12_library names d3d12.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x86)"}, {"filenames": ["d3dcompiler.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(d3d12_compiler_library names d3dcompiler.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x86)"}, {"filenames": ["dxgi.lib"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_library(dxgi_library names dxgi.lib\n\t\thints ${win10_sdk_path}/lib/${win10_sdk_version}/um/x86)"}, {"filenames": ["dxc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_program(d3d12_shader_compiler names dxc\n\t\tpaths ${win10_sdk_path}/bin/${win10_sdk_version}/x64)"}, {"filenames": ["dxc"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindD3D12.cmake", "content": "find_program(d3d12_shader_compiler names dxc\n\t\tpaths ${win10_sdk_path}/bin/${win10_sdk_version}/x86)"}]}, {"deps": [{"depname": "winpixeventruntime", "version": null, "version_op": null, "unified_name": "winpixeventruntime", "extractor_type": "cmake", "context": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindWinPixEventRuntime.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["winpixeventruntime"], "version": "", "fromfile": "Twinklebear@@ChameleonRT/backends/dxr/cmake/FindWinPixEventRuntime.cmake", "content": "find_library(winpixeventruntime_library\n    names winpixeventruntime\n    paths\n    ${winpixeventruntime_dir}/bin/x64\n    $env{winpixeventruntime_dir}/bin/x64\n)"}]}, {"deps": [{"depname": "embree", "version": "4", "version_op": null, "unified_name": "embree", "extractor_type": "cmake", "context": "find_package(embree 4 required)", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}