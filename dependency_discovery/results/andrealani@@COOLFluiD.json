{"target": "andrealani@@COOLFluiD", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package( boost components ${cf_boost_components} )", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package( boost components ${cf_boost_components} )", "confidence": "High"}, {"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "find_package(metis)", "confidence": "High"}, {"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "find_package(parmetis)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl)", "confidence": "High"}, {"depname": "valgrind", "version": null, "version_op": null, "unified_name": "valgrind", "extractor_type": "cmake", "context": "find_package(valgrind)", "confidence": "High"}, {"depname": "googleperftools", "version": null, "version_op": null, "unified_name": "googleperftools", "extractor_type": "cmake", "context": "find_package(googleperftools)", "confidence": "High"}, {"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "find_package(gsl)", "confidence": "High"}, {"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}, {"depname": "mutationpp", "version": null, "version_op": null, "unified_name": "mutationpp", "extractor_type": "cmake", "context": "find_package(mutationpp)", "confidence": "High"}, {"depname": "plato", "version": null, "version_op": null, "unified_name": "plato", "extractor_type": "cmake", "context": "find_package(plato)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "find_package (bzip2)", "confidence": "High"}, {"depname": "coolfluid", "version": null, "version_op": null, "unified_name": "coolfluid", "extractor_type": "cmake", "context": "project (coolfluid c cxx )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "parmetis", "version": null, "version_op": null, "unified_name": "parmetis", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindParmetis.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${cf_libparmetis_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindParmetis.cmake", "content": "find_library(parmetis_lib_parmetis ${cf_libparmetis_name} ${trial_library_paths} no_default_path)"}, {"filenames": ["${cf_libparmetis_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindParmetis.cmake", "content": "find_library(parmetis_lib_parmetis ${cf_libparmetis_name} )"}, {"filenames": ["${cf_libmetis_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindParmetis.cmake", "content": "find_library(parmetis_lib_metis ${cf_libmetis_name} ${trial_library_paths} no_default_path)"}, {"filenames": ["${cf_libmetis_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindParmetis.cmake", "content": "find_library(parmetis_lib_metis ${cf_libmetis_name} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpirun"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/CheckMPI.cmake", "content": "find_program(cf_mpirun_program mpirun\n            paths ${mpi_home}/bin $env{mpi_home}/bin\n            path_suffixes mpi/bin\n            doc \"mpirun program\"\n            no_default_path )"}, {"filenames": ["mpirun"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/CheckMPI.cmake", "content": "find_program(cf_mpirun_program mpirun\n            path_suffixes mpi/bin\n            doc \"mpirun program\" )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "plato", "version": null, "version_op": null, "unified_name": "plato", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindPLATO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["plato"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindPLATO.cmake", "content": "find_library(plato_library plato ${trial_library_paths} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cblas", "version": null, "version_op": null, "unified_name": "cblas", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindCBlas.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cblas"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCBlas.cmake", "content": "find_library(cblas_library cblas ${trial_library_paths} no_default_path)"}, {"filenames": ["cblas"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCBlas.cmake", "content": "find_library(cblas_library cblas )"}]}, {"deps": [{"depname": "subversion", "version": null, "version_op": null, "unified_name": "subversion", "extractor_type": "cmake", "context": "find_package(subversion)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["svnversion"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/CheckSvnVersion.cmake", "content": "find_program(subversion_svnversion_executable svnversion doc \"subversion svnversion command line client\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "valgrind", "version": null, "version_op": null, "unified_name": "valgrind", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindValgrind.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindBoost.cmake", "confidence": "High"}, {"depname": "boost", "version": "0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "    set(boost_version 0)", "confidence": "Low"}, {"depname": "libboost_", "version": null, "version_op": null, "unified_name": "boost_", "extractor_type": "cmake", "context": "    set(boost_lib_version \"\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["libboost_${component}${_boost_compiler}-${boost_lib_version}", "libboost_${component}${_boost_compiler}-s-${boost_lib_version}", "libboost_${component}-${boost_lib_version}", "libboost_${component}-s-${boost_lib_version}", "libboost_${component}", "libboost_${component}-s", "libboost_${component}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_release\n        names  libboost_${component}${_boost_compiler}-${boost_lib_version}\n               libboost_${component}${_boost_compiler}-s-${boost_lib_version}\n               libboost_${component}-${boost_lib_version}\n               libboost_${component}-s-${boost_lib_version}\n               libboost_${component}\n               libboost_${component}-s\n               libboost_${component}\n        hints  ${_boost_libraries_search_dirs}\n\tno_default_path\n    )"}, {"filenames": ["libboost_${component}${_boost_compiler}-${boost_lib_version}", "libboost_${component}${_boost_compiler}-s-${boost_lib_version}", "libboost_${component}-${boost_lib_version}", "libboost_${component}-s-${boost_lib_version}", "libboost_${component}", "libboost_${component}-s", "libboost_${component}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_release\n        names  libboost_${component}${_boost_compiler}-${boost_lib_version}\n               libboost_${component}${_boost_compiler}-s-${boost_lib_version}\n               libboost_${component}-${boost_lib_version}\n               libboost_${component}-s-${boost_lib_version}\n               libboost_${component}\n               libboost_${component}-s\n               libboost_${component}\n        hints  ${_boost_libraries_search_dirs}\n    )"}, {"filenames": ["libboost_${component}${_boost_compiler}-${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}${_boost_compiler}-s${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-s${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-${_boost_abi_tag}", "libboost_${component}-s${_boost_abi_tag}", "libboost_${component}-${_boost_abi_tag}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_debug\n        names  libboost_${component}${_boost_compiler}-${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}${_boost_compiler}-s${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-s${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-${_boost_abi_tag}\n               libboost_${component}-s${_boost_abi_tag}\n               libboost_${component}-${_boost_abi_tag}\n        hints  ${_boost_libraries_search_dirs}\n\tno_default_path\n    )"}, {"filenames": ["libboost_${component}${_boost_compiler}-${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}${_boost_compiler}-s${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-s${_boost_abi_tag}-${boost_lib_version}", "libboost_${component}-${_boost_abi_tag}", "libboost_${component}-s${_boost_abi_tag}", "libboost_${component}-${_boost_abi_tag}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBoost.cmake", "content": "find_library(boost_${uppercomponent}_library_debug\n        names  libboost_${component}${_boost_compiler}-${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}${_boost_compiler}-s${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-s${_boost_abi_tag}-${boost_lib_version}\n               libboost_${component}-${_boost_abi_tag}\n               libboost_${component}-s${_boost_abi_tag}\n               libboost_${component}-${_boost_abi_tag}\n        hints  ${_boost_libraries_search_dirs}\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpich2", "mpi", "mpich", "mpich.rts"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library(mpi_library\n             names mpich2 mpi mpich mpich.rts\n             path_suffixes mpi/lib\n             paths ${trial_library_paths} no_default_path )"}, {"filenames": ["mpich2", "mpi", "mpich", "mpich.rts"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library(mpi_library\n               names mpich2 mpi mpich mpich.rts\n               path_suffixes mpi/lib\n               paths /usr/lib /usr/local/lib\n               \"$env{programfiles}/mpich/sdk/lib\"\n               \"$env{programfiles}/mpich2/lib\"\n               \"c:/program files/mpich/sdk/lib\" )"}, {"filenames": ["mpi++", "mpi_cxx"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library(mpicxx_library\n             names mpi++ mpi_cxx\n             path_suffixes mpi/lib\n             paths ${trial_library_paths} no_default_path)"}, {"filenames": ["mpi++", "mpi_cxx"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library(mpicxx_library\n               names mpi++ mpi_cxx\n               path_suffixes mpi/lib\n               paths /usr/lib /usr/local/lib\n               \"$env{programfiles}/mpich/sdk/lib\"\n               \"$env{programfiles}/mpich2/lib\"\n               \"c:/program files/mpich/sdk/lib\" )"}, {"filenames": ["${mpi_extra_lib}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library( mpi_extra_library_${mpi_extra_lib}\n                  names ${mpi_extra_lib}\n                  path_suffixes mpi/lib\n                  paths ${trial_library_paths} no_default_path)"}, {"filenames": ["${mpi_extra_lib}"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMPI.cmake", "content": "find_library( mpi_extra_library_${mpi_extra_lib}\n                  names ${mpi_extra_lib}\n                  paths /usr/lib /usr/local/lib\n                  \"$env{programfiles}/mpich/sdk/lib\"\n                  \"$env{programfiles}/mpich2/lib\"\n                  \"c:/program files/mpich/sdk/lib\" )"}]}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindCurl.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["curl"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCurl.cmake", "content": "find_library(curl_library curl ${trial_library_paths} no_default_path)"}]}, {"deps": [{"depname": "metis", "version": null, "version_op": null, "unified_name": "metis", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindMetis.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["metis"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMetis.cmake", "content": "find_library(metis_library metis ${trial_library_paths} no_default_path)"}, {"filenames": ["metis"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMetis.cmake", "content": "find_library(metis_library metis )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindGSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gsl"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGSL.cmake", "content": "find_library(gsl_library gsl ${trial_library_paths} no_default_path)"}, {"filenames": ["gsl"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGSL.cmake", "content": "find_library(gsl_library gsl )"}]}, {"deps": [{"depname": "googleperftools", "version": null, "version_op": null, "unified_name": "googleperftools", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["profiler"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_library(google_perftools_profiler_lib profiler ${trial_library_paths} no_default_path)"}, {"filenames": ["profiler"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_library(google_perftools_profiler_lib profiler )"}, {"filenames": ["tcmalloc"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_library(google_perftools_tcmalloc_lib tcmalloc ${trial_library_paths} no_default_path)"}, {"filenames": ["tcmalloc"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_library(google_perftools_tcmalloc_lib tcmalloc )"}, {"filenames": ["pprof"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_program(cf_pprof_command pprof)"}, {"filenames": ["dot"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindGooglePerftools.cmake", "content": "find_program(cf_dot_command dot)"}]}, {"deps": [{"depname": "mutationpp", "version": null, "version_op": null, "unified_name": "mutationpp", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindMutationpp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mutation++"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindMutationpp.cmake", "content": "find_library(mutationpp_library mutation++ ${trial_library_paths} no_default_path)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cuda"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(cuda_library\n             names cuda\n             paths ${trial_library_paths} )"}, {"filenames": ["cudart"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(cudart_library\n             names cudart\n             paths ${trial_library_paths} )"}, {"filenames": ["cublas"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(cublas_library\n             names cublas\n             paths ${trial_library_paths} )"}, {"filenames": ["cufft"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(cufft_library\n             names cufft\n             paths ${trial_library_paths} )"}, {"filenames": ["curand"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(curand_library\n             names curand\n             paths ${trial_library_paths} )"}, {"filenames": ["cusparse"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindCUDA.cmake", "content": "find_library(cusparse_library\n             names cusparse\n             paths ${trial_library_paths} )"}]}, {"deps": [{"depname": "googleperftools", "version": null, "version_op": null, "unified_name": "googleperftools", "extractor_type": "cmake", "context": "find_package(googleperftools)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "blaslapack", "version": null, "version_op": null, "unified_name": "blaslapack", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/cmake/FindBlasLapack.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["blas"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBlasLapack.cmake", "content": "find_library(blas_library blas ${trial_library_paths} no_default_path)"}, {"filenames": ["blas"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBlasLapack.cmake", "content": "find_library(blas_library blas )"}, {"filenames": ["lapack"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBlasLapack.cmake", "content": "find_library(lapack_library lapack ${trial_library_paths} no_default_path)"}, {"filenames": ["lapack"], "version": "", "fromfile": "andrealani@@COOLFluiD/cmake/FindBlasLapack.cmake", "content": "find_library(lapack_library lapack )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "config", "version": null, "version_op": null, "unified_name": "config", "extractor_type": "cmake", "context": "project(config)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "latex", "version": null, "version_op": null, "unified_name": "latex", "extractor_type": "cmake", "context": "find_package(latex)", "confidence": "High"}, {"depname": "htmlhelp", "version": null, "version_op": null, "unified_name": "htmlhelp", "extractor_type": "cmake", "context": "find_package(htmlhelp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "petsc", "version": null, "version_op": null, "unified_name": "petsc", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/Petsc/FindPetsc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${cf_libpetsc_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Petsc/FindPetsc.cmake", "content": "find_library(petsc_library ${cf_libpetsc_name} ${trial_library_paths}  no_default_path)"}, {"filenames": ["${cf_libpetsc_name}"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Petsc/FindPetsc.cmake", "content": "find_library(petsc_library ${cf_libpetsc_name} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tvmet", "version": null, "version_op": null, "unified_name": "tvmet", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/AutoTemplateLoader/FindTVMET.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "blitz", "version": null, "version_op": null, "unified_name": "blitz", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/AutoTemplateLoader/FindBlitz.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "flens", "version": null, "version_op": null, "unified_name": "flens", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/AutoTemplateLoader/FindFlens.cmake", "confidence": "High"}, {"depname": "cblas", "version": null, "version_op": null, "unified_name": "cblas", "extractor_type": "cmake", "context": "find_package(cblas)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["flens"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/AutoTemplateLoader/FindFlens.cmake", "content": "find_library(flens_library flens ${trial_library_paths} no_default_path)"}, {"filenames": ["flens"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/AutoTemplateLoader/FindFlens.cmake", "content": "find_library(flens_library flens )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cgns", "version": null, "version_op": null, "unified_name": "cgns", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/CGNS2CFmesh/FindCGNS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cgns"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/CGNS2CFmesh/FindCGNS.cmake", "content": "find_library(cgns_library cgns  paths  ${trial_library_paths}  no_default_path)"}, {"filenames": ["cgns"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/CGNS2CFmesh/FindCGNS.cmake", "content": "find_library(cgns_library cgns )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "samg", "version": null, "version_op": null, "unified_name": "samg", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/SAMGLSS/FindSAMG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["amg"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/SAMGLSS/FindSAMG.cmake", "content": "find_library(samg_k1 amg    ${trial_library_paths} no_default_path)"}, {"filenames": ["ifcore"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/SAMGLSS/FindSAMG.cmake", "content": "find_library(samg_k2 ifcore ${trial_library_paths} no_default_path)"}, {"filenames": ["imf"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/SAMGLSS/FindSAMG.cmake", "content": "find_library(samg_k3 imf    ${trial_library_paths} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pardiso", "version": null, "version_op": null, "unified_name": "pardiso", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libmkl_solver_lp64.a"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l1 libmkl_solver_lp64.a ${pardiso_library_dir} no_default_path)"}, {"filenames": ["libmkl_gf_lp64.a"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l2 libmkl_gf_lp64.a     ${pardiso_library_dir} no_default_path)"}, {"filenames": ["mkl_gnu_thread"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l3 mkl_gnu_thread       ${pardiso_library_dir} no_default_path)"}, {"filenames": ["gfortran"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l4 gfortran             ${pardiso_gfortranlib_dir} no_default_path)"}, {"filenames": ["iomp5"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l5 iomp5                ${pardiso_library_dir} no_default_path)"}, {"filenames": ["mkl_core"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l6 mkl_core             ${pardiso_library_dir} no_default_path)"}, {"filenames": ["pardiso_gnu42_em64t_int64_p"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l7 pardiso_gnu42_em64t_int64_p ${pardiso_library_dir} no_default_path)"}, {"filenames": ["m"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l8 m     ${pardiso_library_dir} no_default_path)"}, {"filenames": ["iomp5"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Pardiso/FindPardiso.cmake", "content": "find_library(pardiso_l9 iomp5 ${pardiso_library_dir} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "paralution", "version": null, "version_op": null, "unified_name": "paralution", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/Paralution/FindParalution.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["paralution"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Paralution/FindParalution.cmake", "content": "find_library(paralution_library paralution ${trial_library_paths}  no_default_path)"}, {"filenames": ["paralution"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Paralution/FindParalution.cmake", "content": "find_library(paralution_library paralution )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "get", "version": null, "version_op": null, "unified_name": "get", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["common"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libcommon common ${trial_library_paths} no_default_path)"}, {"filenames": ["common"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libcommon common )"}, {"filenames": ["system"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libsys system ${trial_library_paths} no_default_path)"}, {"filenames": ["system"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libsys system )"}, {"filenames": ["io"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libio io ${trial_library_paths} no_default_path)"}, {"filenames": ["io"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libio io )"}, {"filenames": ["step"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libstep step ${trial_library_paths} no_default_path)"}, {"filenames": ["step"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libstep step )"}, {"filenames": ["nurbs"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libnurbs nurbs ${trial_library_paths} no_default_path)"}, {"filenames": ["nurbs"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libnurbs nurbs )"}, {"filenames": ["get"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libget get ${trial_library_paths} no_default_path)"}, {"filenames": ["get"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/GETModel/FindGET.cmake", "content": "find_library(get_library_libget get )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lesmodels", "version": null, "version_op": null, "unified_name": "lesmodels", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/LES/FindLESModels.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lesmodels"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/LES/FindLESModels.cmake", "content": "find_library(lesmodels_libraries lesmodels ${trial_library_paths} no_default_path)"}, {"filenames": ["lesmodels"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/LES/FindLESModels.cmake", "content": "find_library(lesmodels_libraries lesmodels )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "trilinos", "version": null, "version_op": null, "unified_name": "trilinos", "extractor_type": "cmake", "context": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["teuchos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_teuchos_lib teuchos ${trial_library_paths}  no_default_path)"}, {"filenames": ["teuchos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_teuchos_lib teuchos )"}, {"filenames": ["thyracore"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyra_lib thyracore ${trial_library_paths}  no_default_path)"}, {"filenames": ["thyracore"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyra_lib thyracore )"}, {"filenames": ["thyraepetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyraepetra_lib thyraepetra ${trial_library_paths}  no_default_path)"}, {"filenames": ["thyraepetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyraepetra_lib thyraepetra )"}, {"filenames": ["thyraepetraext"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyraepetraext_lib thyraepetraext ${trial_library_paths}  no_default_path)"}, {"filenames": ["thyraepetraext"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_thyraepetraext_lib thyraepetraext )"}, {"filenames": ["stratimikos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikos_lib stratimikos ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikos_lib stratimikos )"}, {"filenames": ["stratimikosamesos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosamesos_lib stratimikosamesos ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikosamesos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosamesos_lib stratimikosamesos )"}, {"filenames": ["stratimikosaztecoo"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosaztecoo_lib stratimikosaztecoo ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikosaztecoo"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosaztecoo_lib stratimikosaztecoo )"}, {"filenames": ["stratimikosbelos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosbelos_lib stratimikosbelos ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikosbelos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosbelos_lib stratimikosbelos )"}, {"filenames": ["stratimikosifpack"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosifpack_lib stratimikosifpack ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikosifpack"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosifpack_lib stratimikosifpack )"}, {"filenames": ["stratimikosml"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosml_lib stratimikosml ${trial_library_paths}  no_default_path)"}, {"filenames": ["stratimikosml"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_stratimikosml_lib stratimikosml )"}, {"filenames": ["epetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_epetra_lib epetra ${trial_library_paths}  no_default_path)"}, {"filenames": ["epetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_epetra_lib epetra )"}, {"filenames": ["aztecoo"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_aztecoo_lib aztecoo ${trial_library_paths}  no_default_path)"}, {"filenames": ["aztecoo"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_aztecoo_lib aztecoo )"}, {"filenames": ["epetraext"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_epetraext_lib epetraext ${trial_library_paths}  no_default_path)"}, {"filenames": ["epetraext"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_epetraext_lib epetraext )"}, {"filenames": ["ifpack"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_ifpack_lib ifpack ${trial_library_paths}  no_default_path)"}, {"filenames": ["ifpack"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_ifpack_lib ifpack )"}, {"filenames": ["ml"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_ml_lib ml ${trial_library_paths}  no_default_path)"}, {"filenames": ["ml"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_ml_lib ml )"}, {"filenames": ["amesos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_amesos_lib amesos ${trial_library_paths}  no_default_path)"}, {"filenames": ["amesos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_amesos_lib amesos )"}, {"filenames": ["belos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_belos_lib belos ${trial_library_paths}  no_default_path)"}, {"filenames": ["belos"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_belos_lib belos )"}, {"filenames": ["belosepetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_belosepetra_lib belosepetra ${trial_library_paths}  no_default_path)"}, {"filenames": ["belosepetra"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_belosepetra_lib belosepetra )"}, {"filenames": ["meros"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_meros_lib meros ${trial_library_paths}  no_default_path)"}, {"filenames": ["meros"], "version": "", "fromfile": "andrealani@@COOLFluiD/plugins/Trilinos/FindTrilinos.cmake", "content": "find_library(trilinos_meros_lib meros )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}