{"target": "4paradigm@@OpenMLDB", "extractors": [{"deps": [], "type": "make"}, {"deps": [], "type": "clib"}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}, {"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "protobuf", "version": "3.6", "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf 3.6 exact required)", "confidence": "High"}, {"depname": "rocksdb", "version": null, "version_op": null, "unified_name": "rocksdb", "extractor_type": "cmake", "context": "find_package(rocksdb)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components filesystem date_time regex required)", "confidence": "High"}, {"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm required config)", "confidence": "High"}, {"depname": "absl", "version": null, "version_op": null, "unified_name": "absl", "extractor_type": "cmake", "context": "find_package(absl required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "icu", "version": null, "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "find_package(icu components i18n io uc data)", "confidence": "High"}, {"depname": "openmldb", "version": null, "version_op": null, "unified_name": "openmldb", "extractor_type": "cmake", "context": "project(openmldb)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["brpc"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(brpc_library brpc)"}, {"filenames": ["glog"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(glog_library glog)"}, {"filenames": ["gflags"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(gflags_library gflags)"}, {"filenames": ["unwind"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(unwind_library unwind)"}, {"filenames": ["leveldb"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(leveldb_library leveldb)"}, {"filenames": ["z"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(z_library z)"}, {"filenames": ["snappy"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(snappy_library snappy)"}, {"filenames": ["rocksdb"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(rocksdb_library rocksdb)"}, {"filenames": ["icui18n"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(icu_i18n icui18n)"}, {"filenames": ["icuio"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(icu_io icuio)"}, {"filenames": ["icuuc"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(icu_uc icuuc)"}, {"filenames": ["icudata"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_library(icu_data icudata)"}, {"filenames": ["lcov"], "version": "", "fromfile": "4paradigm@@OpenMLDB/CMakeLists.txt", "content": "find_program(lcov_exe names lcov doc \"coverage requires lcov installed\" required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "hybridsql", "version": null, "version_op": null, "unified_name": "hybridsql", "extractor_type": "cmake", "context": "project(hybridsql-deps)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchSwig.cmake", "content": "find_program(make_exe names gmake nmake make required)"}, {"filenames": ["yacc"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchSwig.cmake", "content": "find_program(yacc_exe names yacc required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchGlog.cmake", "content": "find_program(make_exe names gmake nmake make)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchLeveldb.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cppunit", "version": null, "version_op": null, "unified_name": "cppunit", "extractor_type": "cmake", "context": "4paradigm@@OpenMLDB/third-party/cmake/Findcppunit.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cppunit"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/Findcppunit.cmake", "content": "find_library(cppunit_library_release\n\tnames\n\tcppunit\n\thints\n\t\"${cppunit_root_dir}\"\n    path_suffixes\n    lib/\n    lib64/)"}, {"filenames": ["cppunitd"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/Findcppunit.cmake", "content": "find_library(cppunit_library_debug\n\tnames\n\tcppunitd\n\thints\n\t\"${cppunit_root_dir}\"\n    path_suffixes\n    lib/\n    lib64/)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchProtobuf.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["autoreconf"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZookeeper.cmake", "content": "find_program(autoreconf names autoreconf required)"}, {"filenames": ["name"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZookeeper.cmake", "content": "find_program(pkgconf name pkg-config required)"}, {"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZookeeper.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZlib.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchSqlite3.cmake", "content": "find_program(make_exe names gmake nmake make required)"}, {"filenames": ["tclsh"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchSqlite3.cmake", "content": "find_program(tclsh names tclsh required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchGperf.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchRocksDB.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchOpenssl.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchSnappy.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchBaiduCommon.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["gmake", "nmake", "make"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchLibunwind.cmake", "content": "find_program(make_exe names gmake nmake make required)"}]}, {"deps": [{"depname": "zetasql", "version": "0.3.0", "version_op": null, "unified_name": "zetasql", "extractor_type": "cmake", "context": "set(zetasql_version 0.3.0)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["bazel"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZetasql.cmake", "content": "find_program(bazel_exe names bazel required doc \"compile zetasql require bazel or bazelisk\")"}, {"filenames": ["python"], "version": "", "fromfile": "4paradigm@@OpenMLDB/third-party/cmake/FetchZetasql.cmake", "content": "find_program(python_exe names python required doc \"compile zetasql require python\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm required config)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components filesystem date_time regex required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "protobuf", "version": "3.6", "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf 3.6 exact required)", "confidence": "High"}, {"depname": "yaml-cpp", "version": null, "version_op": null, "unified_name": "yaml-cpp", "extractor_type": "cmake", "context": "find_package(yaml-cpp required)", "confidence": "High"}, {"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig required)", "confidence": "High"}, {"depname": "absl", "version": null, "version_op": null, "unified_name": "absl", "extractor_type": "cmake", "context": "find_package(absl required)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "icu", "version": null, "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "find_package(icu components i18n io uc data)", "confidence": "High"}, {"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "find_package(java components development required)", "confidence": "High"}, {"depname": "jni", "version": null, "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "find_package(jni required)", "confidence": "High"}, {"depname": "hybridse", "version": null, "version_op": null, "unified_name": "hybridse", "extractor_type": "cmake", "context": "project(hybridse)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["brpc"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(brpc_library brpc)"}, {"filenames": ["glog"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(glog_library glog)"}, {"filenames": ["gflags"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(gflags_library gflags)"}, {"filenames": ["unwind"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(unwind_library unwind)"}, {"filenames": ["leveldb"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(leveldb_library leveldb)"}, {"filenames": ["z"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(z_library z)"}, {"filenames": ["snappy"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(snappy_library snappy)"}, {"filenames": ["icui18n"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(icu_i18n icui18n)"}, {"filenames": ["icuio"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(icu_io icuio)"}, {"filenames": ["icuuc"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(icu_uc icuuc)"}, {"filenames": ["icudata"], "version": "", "fromfile": "4paradigm@@OpenMLDB/hybridse/CMakeLists.txt", "content": "find_library(icu_data icudata)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "yaml-cpp", "version": null, "version_op": null, "unified_name": "yaml-cpp", "extractor_type": "cmake", "context": "find_package(yaml-cpp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter development)", "confidence": "High"}, {"depname": "java", "version": null, "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "find_package(java components development required)", "confidence": "High"}, {"depname": "jni", "version": null, "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "find_package(jni required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${x}"], "version": "", "fromfile": "4paradigm@@OpenMLDB/src/sdk/CMakeLists.txt", "content": "find_library(${x}_library ${x})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "statistics", "version": null, "version_op": null, "unified_name": "statistics", "extractor_type": "cmake", "context": "project(statistics)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}]}