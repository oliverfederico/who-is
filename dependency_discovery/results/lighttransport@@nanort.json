{"target": "lighttransport@@nanort", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "nanort", "version": null, "version_op": null, "unified_name": "nanort", "extractor_type": "cmake", "context": "find_package(nanort required)", "confidence": "High"}, {"depname": "nanort", "version": null, "version_op": null, "unified_name": "nanort", "extractor_type": "cmake", "context": "project(nanort languages c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sanitizers", "version": null, "version_op": null, "unified_name": "sanitizers", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindSanitizers.cmake", "confidence": "High"}, {"depname": "asan", "version": null, "version_op": null, "unified_name": "asan", "extractor_type": "cmake", "context": "find_package(asan quiet)", "confidence": "High"}, {"depname": "tsan", "version": null, "version_op": null, "unified_name": "tsan", "extractor_type": "cmake", "context": "find_package(tsan quiet)", "confidence": "High"}, {"depname": "msan", "version": null, "version_op": null, "unified_name": "msan", "extractor_type": "cmake", "context": "find_package(msan quiet)", "confidence": "High"}, {"depname": "ubsan", "version": null, "version_op": null, "unified_name": "ubsan", "extractor_type": "cmake", "context": "find_package(ubsan quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tsan", "version": null, "version_op": null, "unified_name": "tsan", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindTSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "asan", "version": null, "version_op": null, "unified_name": "asan", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindASan.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"asan-wrapper\""], "version": "", "fromfile": "lighttransport@@nanort/cmake/FindASan.cmake", "content": "find_program(asan_wrapper \"asan-wrapper\" paths ${cmake_module_path})"}]}, {"deps": [{"depname": "ubsan", "version": null, "version_op": null, "unified_name": "ubsan", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindUBSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glfw", "version": null, "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindGLFW.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "glfw", "version": null, "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "        set(glfw_version \"${glfw_version_major}.${glfw_version_minor}.${glfw_version_revision}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["glfw32"], "version": "", "fromfile": "lighttransport@@nanort/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library \n            names\n                glfw32\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/x64\"\n                \"$env{glfw_location}/lib\"\n            paths\n                \"${opengl_library_dir}\"\n                /usr/lib\n                /usr/lib/w32api\n                /usr/local/lib\n                /usr/x11r6/lib\n            doc \n                \"the glfw library\"\n        )"}, {"filenames": ["glfw32", "glfw32s", "glfw", "glfw3"], "version": "", "fromfile": "lighttransport@@nanort/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library\n            names \n                glfw32 \n                glfw32s \n                glfw\n                glfw3\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/x64\"\n                \"${glfw_location}/lib-msvc110\"\n                \"${glfw_location}/lib-vc2012\"\n                \"$env{glfw_location}/lib\"\n                \"$env{glfw_location}/lib/x64\"\n                \"$env{glfw_location}/lib-msvc110\"\n                \"$env{glfw_location}/lib-vc2012\"\n            paths\n                \"$env{programfiles}/glfw/lib\"\n                \"${opengl_library_dir}\"\n            doc \n                \"the glfw library\"\n        )"}, {"filenames": ["glfw"], "version": "", "fromfile": "lighttransport@@nanort/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library glfw\n            names \n                glfw\n                glfw3\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/cocoa\"\n                \"$env{glfw_location}/lib\"\n                \"$env{glfw_location}/lib/cocoa\"\n            paths\n                /usr/local/lib\n        )"}, {"filenames": ["glfw", "glfw3"], "version": "", "fromfile": "lighttransport@@nanort/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library\n            names \n                glfw\n                glfw3\n            hints\n                \"${glfw_location}/lib\"\n                \"$env{glfw_location}/lib\"\n                \"${glfw_location}/lib/x11\"\n                \"$env{glfw_location}/lib/x11\"\n            paths\n                /usr/lib64\n                /usr/lib\n                /usr/lib/${cmake_library_architecture}\n                /usr/local/lib64\n                /usr/local/lib\n                /usr/local/lib/${cmake_library_architecture}\n                /usr/openwin/lib\n                /usr/x11r6/lib\n            doc \n                \"the glfw library\"\n        )"}]}, {"deps": [{"depname": "msan", "version": null, "version_op": null, "unified_name": "msan", "extractor_type": "cmake", "context": "lighttransport@@nanort/cmake/FindMSan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sanitizers", "version": null, "version_op": null, "unified_name": "sanitizers", "extractor_type": "cmake", "context": "find_package(sanitizers)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "lighttransport@@nanort/examples/vdisp/CMakeLists.txt", "content": "find_library(cocoa cocoa required)"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "pbr_surface", "version": null, "version_op": null, "unified_name": "pbr_surface", "extractor_type": "cmake", "context": "project(pbr_surface)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "lighttransport@@nanort/examples/common/CMakeLists.txt", "content": "find_library(cocoa cocoa required)"}]}, {"deps": [], "type": "make"}, {"deps": [{"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "project(glm)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "conan"}, {"deps": [{"depname": "glm", "version": "master", "version_op": null, "unified_name": "glm", "extractor_type": "conan", "context": "lighttransport@@nanort/examples/common/glm/util/conan-package/test_package/conanfile.py:\"glm/master@%s/%s\"%(username", "confidence": "High"}, {"depname": "channel)", "version": null, "version_op": null, "unified_name": "channel)", "extractor_type": "conan", "context": "lighttransport@@nanort/examples/common/glm/util/conan-package/test_package/conanfile.py:channel)", "confidence": "High"}], "type": "conan"}, {"deps": [{"depname": "glmtest", "version": null, "version_op": null, "unified_name": "glmtest", "extractor_type": "cmake", "context": "project(glmtest)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl32", "version": null, "version_op": null, "unified_name": "opengl32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "glu32", "version": null, "version_op": null, "unified_name": "glu32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "opengl32", "version": null, "version_op": null, "unified_name": "opengl32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "glu32", "version": null, "version_op": null, "unified_name": "glu32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "opengl32", "version": null, "version_op": null, "unified_name": "opengl32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "glu32", "version": null, "version_op": null, "unified_name": "glu32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "opengl32", "version": null, "version_op": null, "unified_name": "opengl32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}, {"depname": "glu32", "version": null, "version_op": null, "unified_name": "glu32", "extractor_type": "ms", "context": "lighttransport@@nanort/examples/gui/viwewer.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "meson"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ptexrt", "version": null, "version_op": null, "unified_name": "ptexrt", "extractor_type": "cmake", "context": "project(ptexrt)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "lighttransport@@nanort/examples/ptex/CMakeLists.txt", "content": "find_library(cocoa cocoa required)"}]}, {"deps": [], "type": "make"}]}