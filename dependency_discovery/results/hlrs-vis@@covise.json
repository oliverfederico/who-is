{"target": "hlrs-vis@@covise", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "gsoap", "version": null, "version_op": null, "unified_name": "gsoap", "extractor_type": "cmake", "context": "find_package(gsoap)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "find_package(pthread)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew)", "confidence": "High"}, {"depname": "gdcm", "version": null, "version_op": null, "unified_name": "gdcm", "extractor_type": "cmake", "context": "find_package(gdcm quiet)", "confidence": "High"}, {"depname": "xercesc", "version": null, "version_op": null, "unified_name": "xercesc", "extractor_type": "cmake", "context": "find_package(xercesc required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "jpegturbo", "version": null, "version_op": null, "unified_name": "jpegturbo", "extractor_type": "cmake", "context": "find_package(jpegturbo)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg required)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png required)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff required)", "confidence": "High"}, {"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "find_package(glut)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg)", "confidence": "High"}, {"depname": "steereo", "version": null, "version_op": null, "unified_name": "steereo", "extractor_type": "cmake", "context": "find_package(steereo)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 components osgdb osgutil osgviewer osgparticle osgtext osgsim osgga osgfx osgterrain)", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk components vtkiolegacy vtkioxml vtkfilterscore vtkcommoncore vtkimagingcore vtkcommondatamodel vtkcommonexecutionmodel no_module)", "confidence": "High"}, {"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 components c hl cxx)", "confidence": "High"}, {"depname": "cg", "version": null, "version_op": null, "unified_name": "cg", "extractor_type": "cmake", "context": "find_package(cg)", "confidence": "High"}, {"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv)", "confidence": "High"}, {"depname": "opencrg", "version": null, "version_op": null, "unified_name": "opencrg", "extractor_type": "cmake", "context": "find_package(opencrg)", "confidence": "High"}, {"depname": "covise", "version": "2019", "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "project(covise version 2019 languages cxx c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["applicationservices"], "version": "", "fromfile": "hlrs-vis@@covise/CMakeLists.txt", "content": "find_library(app_services_library applicationservices)"}]}, {"deps": [{"depname": "cef", "version": null, "version_op": null, "unified_name": "cef", "extractor_type": "cmake", "context": "find_package(cef)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osi", "version": null, "version_op": null, "unified_name": "osi", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${osi_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSI.cmake", "content": "find_library(osi_library names ${osi_names}\n  paths\n  $env{osi_home}\n  $env{externlibs}/osi\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osi - library\"\n)"}, {"filenames": ["${osi_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSI.cmake", "content": "find_library(osi_library_debug names ${osi_dbg_names}\n    paths\n    $env{osi_home}/lib\n    $env{externlibs}/osi/lib\n    doc \"osi - library (debug)\"\n  )"}]}, {"deps": [{"depname": "osvr", "version": null, "version_op": null, "unified_name": "osvr", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSVR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osvrrendermanager.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSVR.cmake", "content": "find_library(osvr_rm_library names osvrrendermanager.lib\n  paths\n  $env{osvr_home}\n  $env{externlibs}/osvr\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/msvc_x64\n  doc \"osvr rendermanager - library\"\n)"}, {"filenames": ["osvrclient.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSVR.cmake", "content": "find_library(osvr_library names osvrclient.lib\n  paths\n  $env{osvr_home}\n  $env{externlibs}/osvr\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/msvc_x64\n  doc \"osvr - library\"\n)"}, {"filenames": ["osvrclientd.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSVR.cmake", "content": "find_library(osvr_library_debug names osvrclientd.lib\n    paths\n    $env{osvr_home}/lib\n    $env{externlibs}/osvr\n    path_suffixes bin lib lib64 lib/msvc_x64\n    doc \"osvr - library (debug)\"\n  )"}, {"filenames": ["osvrrendermanagerd.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSVR.cmake", "content": "find_library(osvr_rm_library_debug names osvrrendermanagerd.lib\n    paths\n    $env{osvr_home}/lib\n    $env{externlibs}/osvr\n    path_suffixes bin lib lib64 lib/msvc_x64\n    doc \"osvr rendermanager - library (debug)\"\n  )"}]}, {"deps": [{"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOPENVR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${openvr_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENVR.cmake", "content": "find_library(openvr_library names ${openvr_names}\n  paths\n  $env{openvr_home}\n  $env{externlibs}/openvr\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/msvc_x64\n  doc \"openvr - library\"\n)"}, {"filenames": ["${openvr_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENVR.cmake", "content": "find_library(openvr_library_debug names ${openvr_dbg_names}\n    paths\n    $env{openvr_home}/lib\n    $env{externlibs}/openvr\n    path_suffixes bin lib lib64 lib/msvc_x64\n    doc \"openvr - library (debug)\"\n  )"}]}, {"deps": [{"depname": "revit", "version": null, "version_op": null, "unified_name": "revit", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindRevit.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "geotiff", "version": null, "version_op": null, "unified_name": "geotiff", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindGeoTIFF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["geotiff", "geotiff_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGeoTIFF.cmake", "content": "find_library(geotiff_library names geotiff geotiff_i\n   paths\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the geotiff library\")"}, {"filenames": ["geotiffd", "geotiff_d_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGeoTIFF.cmake", "content": "find_library(geotiff_library_debug names geotiffd geotiff_d_i\n   paths\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes\n   debug/lib debug/lib64\n   lib lib64\n   doc \"the geotiff library\")"}]}, {"deps": [{"depname": "steereo", "version": null, "version_op": null, "unified_name": "steereo", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSteereo.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["steereo", "steereo"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSteereo.cmake", "content": "find_library(steereo_library names steereo  steereo\n  paths\n  $env{steereo_home}/lib\n   $env{externlibs}/steereo/lib\n  no_default_path\n)"}, {"filenames": ["steereo", "steereo"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSteereo.cmake", "content": "find_library(steereo_library names steereo  steereo)"}]}, {"deps": [{"depname": "e57", "version": null, "version_op": null, "unified_name": "e57", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindE57.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${e57_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindE57.cmake", "content": "find_library(e57_library names ${e57_names}\n  paths\n  $env{externlibs}/e57\n  $env{externlibs}/libe57\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"e57 - library\"\n)"}, {"filenames": ["${e57_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindE57.cmake", "content": "find_library(e57_library_debug names ${e57_dbg_names}\n    paths\n    $env{externlibs}/e57/lib\n    doc \"e57 - library (debug)\"\n  )"}]}, {"deps": [{"depname": "schism", "version": null, "version_op": null, "unified_name": "schism", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["scm_core", "libscm_core"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_core_library \n             names scm_core libscm_core\n             paths ${schism_library_search_dirs}\n             suffixes release\n            )"}, {"filenames": ["scm_gl_core", "libscm_gl_core"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_gl_core_library \n             names scm_gl_core libscm_gl_core\n             paths ${schism_library_search_dirs}\n             suffixes release\n            )"}, {"filenames": ["scm_gl_util", "libscm_gl_util"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_gl_util_library \n             names scm_gl_util libscm_gl_util\n             paths ${schism_library_search_dirs}\n             suffixes release\n            )"}, {"filenames": ["scm_input", "libscm_input"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_input_library \n             names scm_input libscm_input\n             paths ${schism_library_search_dirs}\n             suffixes release\n            )"}, {"filenames": ["scm_core-gd", "libscm_core-gd", "scm_core", "libscm_core"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_core_library_debug\n             names scm_core-gd libscm_core-gd scm_core libscm_core\n             paths ${schism_library_search_dirs}\n             suffixes debug\n            )"}, {"filenames": ["scm_gl_core-gd", "libscm_gl_core-gd", "scm_gl_core", "libscm_gl_core"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_gl_core_library_debug\n             names scm_gl_core-gd libscm_gl_core-gd scm_gl_core libscm_gl_core\n             paths ${schism_library_search_dirs}\n             suffixes debug\n            )"}, {"filenames": ["scm_gl_util-gd", "libscm_gl_util-gd", "scm_gl_util", "libscm_gl_util"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_gl_util_library_debug\n             names scm_gl_util-gd libscm_gl_util-gd scm_gl_util libscm_gl_util\n             paths ${schism_library_search_dirs}\n             suffixes debug\n            )"}, {"filenames": ["scm_input-gd", "libscm_input-gd", "scm_input", "libscm_input"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSCHISM.cmake", "content": "find_library(schism_input_library_debug\n             names scm_input-gd libscm_input-gd scm_input libscm_input\n             paths ${schism_library_search_dirs}\n             suffixes debug\n            )"}]}, {"deps": [{"depname": "wmfsdk", "version": null, "version_op": null, "unified_name": "wmfsdk", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindWMFSDK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wmvcore"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWMFSDK.cmake", "content": "find_library(wmfsdk_library names wmvcore\n    paths\n    $env{wmfsdk_home}/lib\n   $env{externlibs}/wmfsdk11/lib/x64\n   $env{externlibs}/wmfsdk11/lib\n   $env{windowssdkdir}/lib/x64\n   $env{windowssdkdir}/lib/win8/um/x64\n   $env{windowssdkdir}/lib/winv6.3/um/x64\n   \"/program files/microsoft sdks/windows/v7.0/lib/x64\"\n   \"/program files (x86)/microsoft sdks/windows/v7.1a/lib/x64\"\n    no_default_path\n  )"}]}, {"deps": [{"depname": "hidapi", "version": null, "version_op": null, "unified_name": "hidapi", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindHIDAPI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["hidapi", "hidapi-libusb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindHIDAPI.cmake", "content": "find_library(hidapi_library\n\tnames hidapi hidapi-libusb)"}]}, {"deps": [{"depname": "cef", "version": null, "version_op": null, "unified_name": "cef", "extractor_type": "cmake", "context": "find_package(cef)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xercesc", "version": null, "version_op": null, "unified_name": "xercesc", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindXERCESC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${xercesc_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXERCESC.cmake", "content": "find_library(xercesc_library names ${xercesc_names}\n  paths\n  $env{xercesc_home}/lib\n  $env{externlibs}/xerces/lib\n  $env{externlibs}/xercesc/lib\n  /usr\n  doc \"xercesc - library\"\n)"}, {"filenames": ["${xercesc_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXERCESC.cmake", "content": "find_library(xercesc_library names ${xercesc_names} doc \"xercesc - library\")"}, {"filenames": ["${xercesc_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXERCESC.cmake", "content": "find_library(xercesc_library_debug names ${xercesc_dbg_names}\n    paths\n    $env{xercesc_home}/lib\n    $env{externlibs}/xerces/lib\n    $env{externlibs}/xercesc/lib\n    doc \"xercesc - library (debug)\"\n  )"}]}, {"deps": [{"depname": "jt", "version": null, "version_op": null, "unified_name": "jt", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindJT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${jt_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJT.cmake", "content": "find_library(jt_library names ${jt_names}\n  paths\n  $env{jt_home}\n  $env{externlibs}/jt\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64 lib/win_64_vs2015\n  doc \"jt - library\"\n)"}, {"filenames": ["${jt_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJT.cmake", "content": "find_library(jt_library_debug names ${jt_dbg_names}\n    paths\n    $env{jt_home}/lib\n    $env{externlibs}/jt\n    path_suffixes lib lib64 lib/win_64_vs2015\n    doc \"jt - library (debug)\"\n  )"}]}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["alchemy"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_alchemy  alchemy  ${xenomai_dir}/lib )"}, {"filenames": ["copperplate"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_copperplate copperplate ${xenomai_dir}/lib )"}, {"filenames": ["mercury"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_mercury mercury  ${xenomai_dir}/lib )"}, {"filenames": ["alchemy"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_alchemy  alchemy  ${xenomai_dir}/lib )"}, {"filenames": ["copperplate"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_copperplate copperplate ${xenomai_dir}/lib )"}, {"filenames": ["cobalt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindXenomai.cmake", "content": "find_library( xenomai_library_mercury cobalt  ${xenomai_dir}/lib )"}]}, {"deps": [{"depname": "cudpp", "version": null, "version_op": null, "unified_name": "cudpp", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCUDPP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${cudpp_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCUDPP.cmake", "content": "find_library(cudpp_library names ${cudpp_names}\n  paths\n  $env{nvsdkcompute_root}/c/common/lib/linux\n  $env{externlibs}/cuda/c/common/lib/linux\n  $env{externlibs}/cudpp\n  $env{externlibs}/cuda\n  path_suffixes lib lib64\n  doc \"cudpp - library\"\n)"}, {"filenames": ["cudpp64d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCUDPP.cmake", "content": "find_library(cudpp_library_debug names cudpp64d\n    paths\n    $env{cudpp_home}/lib\n    $env{externlibs}/cudpp/lib\n    doc \"cudpp - library (debug)\"\n  )"}]}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["netcdf"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_library names netcdf)"}, {"filenames": ["netcdfd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_library_debug names netcdfd)"}, {"filenames": ["netcdf-cxx4", "netcdf_c++4"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_c++_library names  netcdf-cxx4 netcdf_c++4)"}, {"filenames": ["netcdf-cxx4d", "netcdf_c++4d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_c++_library_debug names netcdf-cxx4d netcdf_c++4d)"}, {"filenames": ["${netcdf_c++_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_c++_library_debug names ${netcdf_c++_dbg_names}\n        paths\n        $env{externlibs}/netcdf\n        path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n        doc \"netcdf_c++ - library (debug)\"\n    )"}, {"filenames": ["${netcdf_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNETCDF.cmake", "content": "find_library(netcdf_library_debug names ${netcdf_dbg_names}\n        paths\n        $env{externlibs}/netcdf\n        path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n        doc \"netcdf - library (debug)\"\n    )"}]}, {"deps": [{"depname": "midifile", "version": null, "version_op": null, "unified_name": "midifile", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindMIDIFILE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["midifile"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindMIDIFILE.cmake", "content": "find_library(midifile_library names midifile\n  paths\n  $env{midifile_home}\n  $env{externlibs}/midifile\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"midifile - library\"\n)"}, {"filenames": ["midifiled"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindMIDIFILE.cmake", "content": "find_library(midifile_library_debug names midifiled\n    paths\n    $env{midifile_home}/lib\n    $env{externlibs}/midifile/lib\n    doc \"midifile - library (debug)\"\n  )"}]}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSMesa.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osmesa", "osmesa16", "osmesa32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSMesa.cmake", "content": "find_library(osmesa_library names osmesa osmesa16 osmesa32 paths ${osmesa_root}/lib\n      no_default_path\n    )"}, {"filenames": ["osmesa", "osmesa16", "osmesa32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSMesa.cmake", "content": "find_library(osmesa_library names osmesa osmesa16 osmesa32 paths\n      /usr/x11/lib\n      /usr/x11r6/lib\n      /opt/graphics/opengl/lib\n      /usr/openwin/lib\n    )"}]}, {"deps": [{"depname": "rbdl", "version": null, "version_op": null, "unified_name": "rbdl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/Findrbdl.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rbdl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Findrbdl.cmake", "content": "find_library(rbdl_library names rbdl\n  paths\n  $env{rbdl_home}\n  $env{externlibs}/rbdl\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"rbdl - library\"\n)"}, {"filenames": ["rbdld"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Findrbdl.cmake", "content": "find_library(rbdl_library_debug names rbdld\n    paths\n    $env{rbdl_home}/lib\n    $env{externlibs}/rbdl/lib\n    doc \"rbdl - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cpack_package", "version": "6.5.0", "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "set(cpack_package_version \"6.5.0\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "confidence": "High"}, {"depname": "libavformat", "version": "52", "version_op": ">=", "unified_name": "avformat", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pc_ffmpeg_avformat libavformat>=52 )", "confidence": "High"}, {"depname": "libavcodec", "version": null, "version_op": null, "unified_name": "avcodec", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pc_ffmpeg_avcodec libavcodec )", "confidence": "High"}, {"depname": "libavutil", "version": null, "version_op": null, "unified_name": "avutil", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pc_ffmpeg_avutil libavutil )", "confidence": "High"}, {"depname": "libswscale", "version": null, "version_op": null, "unified_name": "swscale", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pc_ffmpeg_swscale libswscale )", "confidence": "High"}, {"depname": "libswresample", "version": null, "version_op": null, "unified_name": "swresample", "extractor_type": "cmake::pkg", "context": "pkg_check_modules( pc_ffmpeg_swresample libswresample )", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["swscale-0", "swscale"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_swscale_library names swscale-0 swscale\n  hints\n     $env{ffmpegdir}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/ffmpeg\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    doc \"ffmpeg swscale - library\"\n  )"}, {"filenames": ["avformat-52", "avformat"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avformat_library names avformat-52 avformat\n  hints\n     $env{ffmpegdir}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/ffmpeg\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    doc \"ffmpeg avformat - library\"\n  )"}, {"filenames": ["avutil-49", "avutil"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avutil_library names avutil-49 avutil\n  hints\n     $env{ffmpegdir}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/ffmpeg\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    doc \"ffmpeg avutil - library\"\n  )"}, {"filenames": ["avcodec-52", "avcodec-51", "avcodec"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avcodec_library names avcodec-52 avcodec-51 avcodec\n  hints\n     $env{ffmpegdir}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/ffmpeg\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    doc \"ffmpeg avcodec - library\"\n  )"}, {"filenames": ["avformat"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avformat_library\n      names avformat\n      hints ${pc_ffmpeg_avformat_library_dirs})"}, {"filenames": ["avcodec"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avcodec_library\n      names avcodec\n      hints ${pc_ffmpeg_avcodec_library_dirs})"}, {"filenames": ["avutil"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avutil_library\n      names avutil\n      hints ${pc_ffmpeg_avutil_library_dirs})"}, {"filenames": ["swscale"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_swscale_library\n      names swscale\n      hints ${pc_ffmpeg_swscale_library_dirs})"}, {"filenames": ["swresample"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_swresample_library\n      names swresample\n      hints ${pc_ffmpeg_swresample_library_dirs})"}]}, {"deps": [{"depname": "osc", "version": null, "version_op": null, "unified_name": "osc", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSC.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["oscpack"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSC.cmake", "content": "find_library(osc_library names oscpack\n  paths\n  $env{osc_home}\n  $env{externlibs}/oscpack\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osc - library\"\n)"}, {"filenames": ["oscpackd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSC.cmake", "content": "find_library(osc_library_debug names oscpackd\n    paths\n    $env{osc_home}/lib\n    $env{externlibs}/oscpack/lib\n    doc \"osc - library (debug)\"\n  )"}]}, {"deps": [{"depname": "speex", "version": null, "version_op": null, "unified_name": "speex", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSPEEX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${speex_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSPEEX.cmake", "content": "find_library(speex_library names ${speex_names}\n  paths\n  $env{speex_home}\n  $env{externlibs}/speex\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/release/vs2012 lib/windows/x64/debug/vs2012\n  doc \"speex - library\"\n)"}, {"filenames": ["libspeexdsp"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSPEEX.cmake", "content": "find_library(speexdsp_library names libspeexdsp\n  paths\n  $env{speex_home}\n  $env{externlibs}/speex\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/release/vs2012 lib/windows/x64/debug/vs2012\n  doc \"speex - library\"\n)"}, {"filenames": ["${speex_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSPEEX.cmake", "content": "find_library(speex_library_debug names ${speex_dbg_names}\n    paths\n  $env{speex_home}\n  $env{externlibs}/speex\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/debug/vs2012 lib/windows/x64/release/vs2012\n    doc \"speex - library (debug)\"\n  )"}, {"filenames": ["libspeexdspd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSPEEX.cmake", "content": "find_library(speexdsp_library_debug names libspeexdspd\n    paths\n  $env{speex_home}\n  $env{externlibs}/speex\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/debug/vs2012 lib/windows/x64/release/vs2012\n    doc \"speex - library (debug)\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv2", "version": null, "version_op": null, "unified_name": "opencv2", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOPENCV2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${opencv2_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCV2.cmake", "content": "find_library(opencv2_${_uppercomponent}_library names ${opencv2_names}\n  paths\n  ${opencv2_externlibs}\n  $env{opencv2_home}\n  ${opencv2_externlibs}/x64/vc14\n  ${opencv2_externlibs}/x64/vc12\n  ${opencv2_externlibs}/x64/vc11\n  ${opencv2_externlibs}/x64/vc10\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"opencv2 - library\"\n  no_default_path\n)"}, {"filenames": ["${opencv2_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCV2.cmake", "content": "find_library(opencv2_${_uppercomponent}_library names ${opencv2_names}\n  doc \"opencv2 - library\"\n)"}, {"filenames": ["opencv_${component}${version}d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCV2.cmake", "content": "find_library(opencv2_${_uppercomponent}_library_debug names opencv_${component}${version}d\n    paths\n    $env{opencv2_home}/lib\n    ${opencv2_externlibs}/x64/vc14/lib\n    ${opencv2_externlibs}/x64/vc12/lib\n    ${opencv2_externlibs}/x64/vc11/lib\n    ${opencv2_externlibs}/x64/vc10/lib\n    doc \"opencv2 - library (debug)\"\n  )"}, {"filenames": ["opencv_${component}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCV2.cmake", "content": "find_library(opencv2_${_uppercomponent}_library names opencv_${component}\n    paths\n    $env{opencv2_home}/lib\n    doc \"opencv2 - library (wov)\"\n  )"}]}, {"deps": [{"depname": "videoinput", "version": null, "version_op": null, "unified_name": "videoinput", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindVideoInput.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${videoinput_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVideoInput.cmake", "content": "find_library(videoinput_library names ${videoinput_names}\n  paths\n  $env{videoinput_home}\n  $env{externlibs}/videoinput\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"videoinput - library\"\n)"}, {"filenames": ["${videoinput_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVideoInput.cmake", "content": "find_library(videoinput_library_debug names ${videoinput_dbg_names}\n    paths\n    $env{videoinput_home}/lib\n    $env{externlibs}/videoinput/lib\n    doc \"videoinput - library (debug)\"\n  )"}]}, {"deps": [{"depname": "icet", "version": null, "version_op": null, "unified_name": "icet", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindIceT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["icetcore"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindIceT.cmake", "content": "find_library(icet_core_library names icetcore\n   paths\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the icetcore library\")"}, {"filenames": ["icetgl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindIceT.cmake", "content": "find_library(icet_gl_library names icetgl\n   paths\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the icetgl library\")"}, {"filenames": ["icetmpi"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindIceT.cmake", "content": "find_library(icet_mpi_library names icetmpi\n   paths\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the icetmpi library\")"}]}, {"deps": [{"depname": "opencrg", "version": null, "version_op": null, "unified_name": "opencrg", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOPENCRG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opencrg"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCRG.cmake", "content": "find_library(opencrg_library names opencrg\n  paths\n  $env{opencrg_home}\n  $env{externlibs}/opencrg\n  $env{externlibs}/opencrg\n  $env{externlibs}/opencrg/1.1.2\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"opencrg - library\"\n)"}, {"filenames": ["opencrgd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENCRG.cmake", "content": "find_library(opencrg_library_debug names opencrgd\n    paths\n    $env{opencrg_home}/lib\n    $env{externlibs}/opencrg/lib\n    $env{externlibs}/opencrg/lib\n    doc \"opencrg - library (debug)\"\n  )"}]}, {"deps": [{"depname": "surface", "version": null, "version_op": null, "unified_name": "surface", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSurface.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["surface", "surface"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSurface.cmake", "content": "find_library(surface_library names surface  surface\n  paths\n  $env{surface_home}/lib\n  $env{externlibs}/surface\n  no_default_path\n)"}]}, {"deps": [{"depname": "abaqus", "version": null, "version_op": null, "unified_name": "abaqus", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${abaqus_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library names ${abaqus_names}\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libifcore.so.5", "abqsmaabubasicutils.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_2 names libifcore.so.5 abqsmaabubasicutils.lib\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libimf.so", "abqsmabascoreutils.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_3 names libimf.so abqsmabascoreutils.lib\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libiomp5.so", "abqsmabasshared.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_4 names libiomp5.so abqsmabasshared.lib\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libmpi.so", "abqsmaodbcore.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_5 names libmpi.so abqsmaodbcore.lib\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libmpio.so", "abqsmabasmem.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_6 names libmpio.so abqsmabasmem.lib\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmaodbcore.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_7 names libabqsmaodbcore.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmaabubasicutils.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_8 names libabqsmaabubasicutils.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmabasshared.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_9 names libabqsmabasshared.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmabascoreutils.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_10 names libabqsmabascoreutils.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmabasmem.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_11 names libabqsmabasmem.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["libabqsmabasalloc.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_12 names libabqsmabasalloc.so\n  paths ${libsearch}\n  path_suffixes lib lib64\n  doc \"abaqus - library\"\n)"}, {"filenames": ["abqsmaodbapi.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug names abqsmaodbapi.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["abqsmaabubasicutils.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug_2 names abqsmaabubasicutils.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["abqsmabascoreutils.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug_3 names abqsmabascoreutils.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["abquti_blas_core", "abqsmabasshared.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug_4 names abquti_blas_core abqsmabasshared.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["abquti_basicutils", "abqsmaodbcore.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug_5 names abquti_basicutils abqsmaodbcore.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["abqddb_odb", "abqsmabasmem.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_library_debug_6 names abqddb_odb abqsmabasmem.lib\n    paths\n    $env{externlibs}/abaqus/lib\n    doc \"abaqus - library (debug)\"\n  )"}, {"filenames": ["${lib}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindABAQUS.cmake", "content": "find_library(abaqus_some_lib names ${lib}\n        paths ${libsearch}\n        path_suffixes lib lib64\n        doc \"abaqus - library\"\n     )"}]}, {"deps": [{"depname": "fmod", "version": null, "version_op": null, "unified_name": "fmod", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindFMOD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fmodstudio64_vc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFMOD.cmake", "content": "find_library(fmod_library names fmodstudio64_vc\n  paths\n  $env{fmod_home}\n  $env{externlibs}/fmod/studio/lib\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"fmod - library\"\n)"}, {"filenames": ["fmod64_vc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFMOD.cmake", "content": "find_library(fmod_event_library names fmod64_vc\n  paths\n  $env{fmod_home}\n  $env{externlibs}/fmod/lowlevel/lib\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"fmod_event - library\"\n)"}, {"filenames": ["fmodstudio64_vc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFMOD.cmake", "content": "find_library(fmod_library_debug names fmodstudio64_vc\n    paths\n    $env{fmod_home}\n    $env{externlibs}/fmod/studio/lib\n    path_suffixes lib lib64\n    doc \"fmod - library (debug)\"\n  )"}, {"filenames": ["fmod64_vc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFMOD.cmake", "content": "find_library(fmod_event_library_debug names fmod64_vc\n    paths\n    $env{fmod_home}\n    $env{externlibs}/fmod/lowlevel/lib\n    path_suffixes lib lib64\n    doc \"fmod_event - library (debug)\"\n  )"}]}, {"deps": [{"depname": "jsbsim", "version": null, "version_op": null, "unified_name": "jsbsim", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindJSBSIM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jsbsim"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJSBSIM.cmake", "content": "find_library(jsbsim_library names jsbsim\n  paths\n  $env{jsbsim_home}\n  $env{externlibs}/jsbsim\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"jsbsim - library\"\n)"}, {"filenames": ["jsbsimd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJSBSIM.cmake", "content": "find_library(jsbsim_library_debug names jsbsimd\n    paths\n    $env{jsbsim_home}/lib\n    doc \"jsbsim - library (debug)\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "slam6d", "version": null, "version_op": null, "unified_name": "slam6d", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSLAM6D.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["scanlib32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSLAM6D.cmake", "content": "find_library(slam6d_library names scanlib32\n  paths\n  $env{3dtk_home}\n  $env{externlibs}/3dtk\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"slam6d - library\"\n)"}, {"filenames": ["ann32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSLAM6D.cmake", "content": "find_library(ann_library names ann32\n  paths\n  $env{3dtk_home}\n  $env{externlibs}/3dtk\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"slam6d - library\"\n)"}, {"filenames": ["scanlibd32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSLAM6D.cmake", "content": "find_library(slam6d_library_debug names scanlibd32\n    paths\n    $env{3dtk_home}/lib\n    $env{externlibs}/3dtk/lib\n    doc \"slam6d - library (debug)\"\n  )"}, {"filenames": ["annd32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSLAM6D.cmake", "content": "find_library(ann_library_debug names annd32\n    paths\n    $env{3dtk_home}/lib\n    $env{externlibs}/3dtk/lib\n    doc \"slam6d - library (debug)\"\n  )"}]}, {"deps": [{"depname": "libvncserver", "version": null, "version_op": null, "unified_name": "vncserver", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLIBVNCSERVER.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vncserver"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBVNCSERVER.cmake", "content": "find_library(libvncserver_server_library names vncserver path_suffixes lib lib64)"}, {"filenames": ["vncclient"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBVNCSERVER.cmake", "content": "find_library(libvncserver_client_library names vncclient path_suffixes lib lib64)"}]}, {"deps": [{"depname": "vrpn", "version": null, "version_op": null, "unified_name": "vrpn", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindVRPN.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vrpns", "vrpn"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVRPN.cmake", "content": "find_library(vrpn_vrpn_library names vrpns vrpn\n   paths\n   $env{externlibs}/vrpn/lib\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the vrpn vrpn library\")"}, {"filenames": ["quat"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVRPN.cmake", "content": "find_library(vrpn_quat_library names quat\n   paths\n   $env{externlibs}/vrpn/lib\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the vrpn quat library\")"}, {"filenames": ["vrpnsd", "vrpnd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVRPN.cmake", "content": "find_library(vrpn_vrpn_library_debug names vrpnsd vrpnd\n    paths\n    $env{vrpn_home}/lib\n    $env{externlibs}/vrpn/lib\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local\n    /usr\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n    doc \"vrpn - library (debug)\"\n  )"}, {"filenames": ["quatd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindVRPN.cmake", "content": "find_library(vrpn_quat_library_debug names quatd\n   paths\n   $env{externlibs}/vrpn/lib\n   /usr/local\n   /usr\n   /sw\n   /opt/local\n   path_suffixes lib lib64\n   doc \"the vrpn quat library (debug)\")"}]}, {"deps": [{"depname": "libusb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLIBUSB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libusb_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBUSB.cmake", "content": "find_library(libusb_library names ${libusb_names}\n  paths\n  $env{libusb_home}\n  $env{externlibs}/libusb\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/msvc_x64\n  doc \"libusb - library\"\n)"}, {"filenames": ["${libusb_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBUSB.cmake", "content": "find_library(libusb_library_debug names ${libusb_dbg_names}\n    paths\n    $env{libusb_home}/lib\n    $env{externlibs}/libusb\n    path_suffixes bin lib lib64 lib/msvc_x64\n    doc \"libusb - library (debug)\"\n  )"}]}, {"deps": [{"depname": "osgcal3d", "version": null, "version_op": null, "unified_name": "osgcal3d", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOsgCAL3D.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgcal"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgCAL3D.cmake", "content": "find_library(osgcal3d_library names osgcal\n  paths\n  $env{osgcal3d_home}\n  $env{externlibs}/osgcal\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgcal - library\"\n)"}, {"filenames": ["osgcald"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgCAL3D.cmake", "content": "find_library(osgcal3d_library_debug names osgcald\n    paths\n    $env{osgcal3d_home}\n    $env{externlibs}/osgcal\n    doc \"osgcal - library (debug)\"\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgearth", "version": null, "version_op": null, "unified_name": "osgearth", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSGEARTH.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgearth"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGEARTH.cmake", "content": "find_library(osgearth_library names osgearth\n  paths\n  $env{osgearth_home}\n  $env{externlibs}/osgearth\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgearth - library\"\n)"}, {"filenames": ["osgearthd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGEARTH.cmake", "content": "find_library(osgearth_library_debug names osgearthd\n    paths\n    $env{osgearth_home}/lib\n    $env{externlibs}/osgearth/lib\n    doc \"osgearth - library (debug)\"\n  )"}]}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindV8.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${v8_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindV8.cmake", "content": "find_library(v8_library names ${v8_names}\n  paths\n  $env{v8_home}\n  $env{externlibs}/v8\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"v8 - library\"\n)"}, {"filenames": ["${v8s_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindV8.cmake", "content": "find_library(v8s_library names ${v8s_names}\n  paths\n  $env{v8_home}\n  $env{externlibs}/v8\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"v8s - library\"\n)"}, {"filenames": ["${v8_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindV8.cmake", "content": "find_library(v8_library_debug names ${v8_dbg_names}\n    paths\n    $env{v8_home}/lib\n    $env{externlibs}/v8/lib\n    doc \"v8 - library (debug)\"\n  )"}, {"filenames": ["${v8s_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindV8.cmake", "content": "find_library(v8s_library_debug names ${v8s_dbg_names}\n    paths\n    $env{v8_home}/lib\n    $env{externlibs}/v8/lib\n    doc \"v8s - library (debug)\"\n  )"}]}, {"deps": [{"depname": "alut", "version": null, "version_op": null, "unified_name": "alut", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindALUT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["alut"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALUT.cmake", "content": "find_library(alut_library names alut\n  paths\n  $env{alut_home}/lib\n  $env{externlibs}/alut/lib\n  $env{externlibs}/openal/lib\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  [hkey_local_machine\\\\software\\\\creative\\ labs\\\\openal\\ 1.1\\ software\\ development\\ kit\\\\1.00.0000;installdir]\n  path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n  doc \"alut - library\"\n)"}, {"filenames": ["alutd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALUT.cmake", "content": "find_library(alut_library_debug names alutd\n    paths\n    $env{alut_home}/lib\n    $env{externlibs}/alut/lib\n    $env{externlibs}/openal/lib\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local\n    /usr\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    [hkey_local_machine\\\\software\\\\creative\\ labs\\\\openal\\ 1.1\\ software\\ development\\ kit\\\\1.00.0000;installdir]\n    path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n    doc \"alut - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cfx", "version": null, "version_op": null, "unified_name": "cfx", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCFX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"libmeshimport.a\"", "\"libmeshimport.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_import_library names \"libmeshimport.a\" \"libmeshimport.lib\"\n    paths ${cfx_dir}/lib\n)"}, {"filenames": ["\"libmeshexport.a\"", "\"libmeshexport.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_export_library names \"libmeshexport.a\" \"libmeshexport.lib\"\n    paths ${cfx_dir}/lib\n)"}, {"filenames": ["\"libpgtapi.a\"", "\"libpgtapi.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_pgt_library names \"libpgtapi.a\" \"libpgtapi.lib\"\n    paths ${cfx_dir}/lib\n)"}, {"filenames": ["\"libunits.a\"", "\"libunits.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_units_library names \"libunits.a\" \"libunits.lib\"\n    paths ${cfx_dir}/lib\n)"}, {"filenames": ["\"libcclapilt.a\"", "\"libcclapilt.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_cclapilt_library names \"libcclapilt.a\" \"libcclapilt.lib\"\n    paths ${cfx_dir}/lib\n)"}, {"filenames": ["\"libio.a\"", "\"libio.lib\""], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCFX.cmake", "content": "find_library(cfx_io_library names \"libio.a\" \"libio.lib\"\n    paths ${cfx_dir}/lib\n)"}]}, {"deps": [{"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindFREEIMAGE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["freeimage"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFREEIMAGE.cmake", "content": "find_library(freeimage_library\n            names freeimage\n            paths ${freeimage_library_search_dirs}\n            path_suffixes release\n            )"}, {"filenames": ["freeimageplus"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFREEIMAGE.cmake", "content": "find_library(freeimageplus_library\n            names freeimageplus\n            paths ${freeimage_library_search_dirs}\n            path_suffixes release\n            )"}, {"filenames": ["freeimage"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFREEIMAGE.cmake", "content": "find_library(freeimage_library_debug\n            names freeimage\n            paths ${freeimage_library_search_dirs}\n            path_suffixes debug\n            )"}, {"filenames": ["freeimageplus"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFREEIMAGE.cmake", "content": "find_library(freeimageplus_library_debug\n            names freeimageplus\n            paths ${freeimage_library_search_dirs}\n            path_suffixes debug\n            )"}]}, {"deps": [{"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindGLEW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glew", "glew", "glew32", "glew32s"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGLEW.cmake", "content": "find_library( glew_library\n\t\tnames glew glew glew32 glew32s\n\t\tpaths\n\t\tdoc \"the glew library\")"}, {"filenames": ["glew", "glew"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGLEW.cmake", "content": "find_library( glew_library\n\t\tnames glew glew\n\t\tpaths\n                $env{externlibs}/glew\n\t\t/usr/lib64\n\t\t/usr/lib\n\t\t/usr/local/lib64\n\t\t/usr/local/lib\n\t\t/sw/lib\n\t\t/opt/local/lib\n\t\tdoc \"the glew library\")"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["i686-w64-mingw32-windres"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Toolchain-cross-mingw32-linux.cmake", "content": "find_program(cmake_rc_compiler names i686-w64-mingw32-windres)"}, {"filenames": ["i686-w64-mingw32-gcc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Toolchain-cross-mingw32-linux.cmake", "content": "find_program(cmake_c_compiler names i686-w64-mingw32-gcc)"}, {"filenames": ["i686-w64-mingw32-g++"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Toolchain-cross-mingw32-linux.cmake", "content": "find_program(cmake_cxx_compiler names i686-w64-mingw32-g++)"}, {"filenames": ["i686-w64-mingw32-gfortran"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Toolchain-cross-mingw32-linux.cmake", "content": "find_program(cmake_fortran_compiler names i686-w64-mingw32-gfortran)"}]}, {"deps": [{"depname": "wiringpi", "version": null, "version_op": null, "unified_name": "wiringpi", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindWIRINGPI.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${wiringpi_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIRINGPI.cmake", "content": "find_library(wiringpi_library names ${wiringpi_names}\n  paths\n  $env{externlibs}/wiringpi\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"wiringpi - library\"\n)"}, {"filenames": ["${wiringpi_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIRINGPI.cmake", "content": "find_library(wiringpi_library_debug names ${wiringpi_dbg_names}\n    paths\n    $env{externlibs}/wiringpi/lib\n    doc \"wiringpi - library (debug)\"\n  )"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libzip", "version": null, "version_op": null, "unified_name": "zip", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLIBZIP.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libzip", "version": "0", "version_op": null, "unified_name": "zip", "extractor_type": "cmake", "context": "\nset(libzip_version 0)", "confidence": "Low"}, {"depname": "libzip", "version": null, "version_op": null, "unified_name": "zip", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libzip quiet libzip)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["zip"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBZIP.cmake", "content": "find_library(libzip_library\n    names zip)"}]}, {"deps": [{"depname": "bison++", "version": null, "version_op": null, "unified_name": "bison++", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindBISON++.cmake", "confidence": "High"}, {"depname": "bisonpp", "version": "1.21.9-1", "version_op": null, "unified_name": "bisonpp", "extractor_type": "cmake", "context": "\n    set(bisonpp_version \"1.21.9-1\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "proj4", "version": null, "version_op": null, "unified_name": "proj4", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindPROJ4.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${proj4_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPROJ4.cmake", "content": "find_library(proj4_library names ${proj4_names}\n  paths\n  $env{externlibs}/proj4\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"proj4 - library\"\n)"}, {"filenames": ["${proj4_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPROJ4.cmake", "content": "find_library(proj4_library_debug names ${proj4_dbg_names}\n    paths\n    $env{externlibs}/proj4/lib\n    doc \"proj4 - library (debug)\"\n  )"}]}, {"deps": [{"depname": "natnet", "version": null, "version_op": null, "unified_name": "natnet", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindNATNET.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${natnet_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNATNET.cmake", "content": "find_library(natnet_library names ${natnet_names}\n  paths\n  $env{natnet_home}\n  $env{externlibs}/natnetsdk/lib/x64\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"natnet - library\"\n)"}, {"filenames": ["${natnet_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindNATNET.cmake", "content": "find_library(natnet_library_debug names ${natnet_dbg_names}\n    paths\n    $env{natnet_home}/lib\n    $env{externlibs}/natnetsdk/lib/x64\n    doc \"natnet - library (debug)\"\n  )"}]}, {"deps": [{"depname": "artoolkitplus", "version": null, "version_op": null, "unified_name": "artoolkitplus", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindARTOOLKITPLUS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["artoolkitplusd", "artoolkitplusdll", "libartoolkitplusd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKITPLUS.cmake", "content": "find_library(artoolkitplus_library_debug names artoolkitplusd artoolkitplusdll libartoolkitplusd\n        paths\n        $env{artoolkitplus_home}/lib\n        $env{externlibs}/artoolkitplus/lib\n      )"}, {"filenames": ["artoolkitplus", "artoolkitplusdll", "libartoolkitplus"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKITPLUS.cmake", "content": "find_library(artoolkitplus_library_release names artoolkitplus artoolkitplusdll libartoolkitplus\n        paths\n        $env{artoolkitplus_home}/lib\n        $env{externlibs}/artoolkitplus/lib\n      )"}, {"filenames": ["${artoolkitplus_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKITPLUS.cmake", "content": "find_library(artoolkitplus_library names ${artoolkitplus_names}\n    paths\n    $env{artoolkitplus_home}/lib\n    $env{externlibs}/artoolkitplus/lib\n    no_default_path\n  )"}, {"filenames": ["${artoolkitplus_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKITPLUS.cmake", "content": "find_library(artoolkitplus_library names ${artoolkitplus_names})"}]}, {"deps": [{"depname": "openpass", "version": null, "version_op": null, "unified_name": "openpass", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["common"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_common_library \n             names common\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}, {"filenames": ["simulationcore"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_simulation_core_library \n             names simulationcore\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}, {"filenames": ["corecommon"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_core_common_library \n             names corecommon\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}, {"filenames": ["commond"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_common_library_debug\n             names commond\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}, {"filenames": ["simulationcored"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_simulation_core_library_debug\n             names simulationcored\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}, {"filenames": ["corecommond"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOPENPASS.cmake", "content": "find_library(openpass_core_common_library_debug\n             names corecommond\n             paths ${openpass_library_search_dirs}\n             suffixes bin\n            )"}]}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOpenCV.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${opencv_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenCV.cmake", "content": "find_library(opencv_${_uppercomponent}_library names ${opencv_names}\n  paths\n  ${opencv_externlibs}\n  $env{opencv_home}\n  ${opencv_externlibs}/x64/vc17\n  ${opencv_externlibs}/x64/vc14\n  ${opencv_externlibs}/x64/vc12\n  ${opencv_externlibs}/x64/vc11\n  ${opencv_externlibs}/x64/vc10\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  /opt/homebrew/opt/opencv\n  /opt/homebrew/opt/opencv@3\n  /usr/local/opt/opencv\n  /usr/local/opt/opencv@3\n  path_suffixes lib lib64\n  doc \"opencv - library\"\n)"}, {"filenames": ["${opencv_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenCV.cmake", "content": "find_library(opencv_${_uppercomponent}_library names ${opencv_names}\n  doc \"opencv - library\"\n)"}, {"filenames": ["opencv_${component}${version}d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenCV.cmake", "content": "find_library(opencv_${_uppercomponent}_library_debug names opencv_${component}${version}d\n    paths\n    $env{opencv_home}/lib\n    ${opencv_externlibs}/x64/vc17/lib\n    ${opencv_externlibs}/x64/vc14/lib\n    ${opencv_externlibs}/x64/vc12/lib\n    ${opencv_externlibs}/x64/vc11/lib\n    ${opencv_externlibs}/x64/vc10/lib\n    path_suffixes debug/lib debug/lib64 lib lib64\n    doc \"opencv - library (debug)\"\n  )"}, {"filenames": ["opencv_${component}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenCV.cmake", "content": "find_library(opencv_${_uppercomponent}_library names opencv_${component}\n    paths\n    $env{opencv_home}/lib\n    doc \"opencv - library (wov)\"\n  )"}]}, {"deps": [{"depname": "artoolkit", "version": null, "version_op": null, "unified_name": "artoolkit", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["artoolkitd_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library_debug names artoolkitd_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["artoolkit_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library_release names artoolkit_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["artoolkitd", "artoolkit-staticd", "libartoolkitd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library_debug names artoolkitd artoolkit-staticd libartoolkitd\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["artoolkit", "artoolkit-static", "libartoolkit"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library_release names artoolkit artoolkit-static libartoolkit\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["${artoolkit_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library names ${artoolkit_names}\n    paths\n    $env{artoolkit_home}/lib\n    $env{externlibs}/artoolkit/lib\n    no_default_path\n  )"}, {"filenames": ["${artoolkit_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_library names ${artoolkit_names})"}, {"filenames": ["ard_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_ar_library_debug names ard_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["ar_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_ar_library_release names ar_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["argsubd_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argsub_library_debug names argsubd_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["argsub_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argsub_library_release names argsub_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["arvideod_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_arvideo_library_debug names arvideod_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["arvideo_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argvideo_library_release names arvideo_mt\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["ard", "ar-staticd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_ar_library_debug names ard ar-staticd\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["ar", "ar-static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_ar_library_release names ar ar-static\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["argsubd", "argsub-staticd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argsub_library_debug names argsubd argsub-staticd\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["argsub", "argsub-static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argsub_library_release names argsub argsub-static\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["arvideod", "arvideo-staticd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_arvideo_library_debug names arvideod arvideo-staticd\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["arvideo", "arvideo-static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_arvideo_library_release names arvideo arvideo-static\n        paths\n        $env{artoolkit_home}/lib\n        $env{externlibs}/artoolkit/lib\n      )"}, {"filenames": ["libdv.so", "libdv.a"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_dv_library names libdv.so libdv.a\n    paths\n    $env{externlibs}/artoolkit/lib\n    $env{artoolkit_home}/lib\n  )"}, {"filenames": ["libdc1394.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_dc1394_library names libdc1394.so\n    paths\n    $env{externlibs}/artoolkit/lib\n    $env{artoolkit_home}/lib\n    no_default_path\n  )"}, {"filenames": ["libraw1394.so"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_raw1394_library names libraw1394.so\n    paths\n    $env{externlibs}/artoolkit/lib\n    $env{artoolkit_home}/lib\n    no_default_path\n  )"}, {"filenames": ["libar.a"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_ar_library names libar.a\n    paths\n    $env{externlibs}/artoolkit/lib\n    $env{artoolkit_home}/lib\n    no_default_path\n  )"}, {"filenames": ["libargsub.a"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_argsub_library names libargsub.a\n    paths\n    $env{artoolkit_home}/lib\n    $env{externlibs}/artoolkit/lib\n    no_default_path\n  )"}, {"filenames": ["libarvideo.a"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindARTOOLKIT.cmake", "content": "find_library(artoolkit_arvideo_library names libarvideo.a\n    paths\n    $env{artoolkit_home}/lib\n    $env{externlibs}/artoolkit/lib\n    no_default_path\n  )"}]}, {"deps": [{"depname": "snappy", "version": null, "version_op": null, "unified_name": "snappy", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSNAPPY.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["snappy"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSNAPPY.cmake", "content": "find_library (snappy_libraries\n    names\n    snappy\n    paths\n  )"}]}, {"deps": [{"depname": "microhttpd", "version": null, "version_op": null, "unified_name": "microhttpd", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindMicrohttpd.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${microhttpd_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindMicrohttpd.cmake", "content": "find_library(microhttpd_library names ${microhttpd_names}\n  paths\n  $env{microhttpd_home}\n  $env{externlibs}/microhttpd\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"microhttpd - library\"\n)"}, {"filenames": ["${microhttpd_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindMicrohttpd.cmake", "content": "find_library(microhttpd_library_debug names ${microhttpd_dbg_names}\n    paths\n    $env{microhttpd_home}/lib\n    $env{externlibs}/microhttpd/lib\n    path_suffixes debug/lib debug/lib64 lib lib64\n    doc \"microhttpd - library (debug)\"\n  )"}, {"filenames": ["${microhttpd_dbg_names}", "${microhttpd_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindMicrohttpd.cmake", "content": "find_library(microhttpd_library_debug names ${microhttpd_dbg_names} ${microhttpd_names}\n          path_suffixes debug/lib debug/lib64\n          doc \"microhttpd - library (debug)\"\n      )"}]}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindFFTW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${fftw_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFTW.cmake", "content": "find_library(fftw_library names ${fftw_names}\n  paths\n  $env{fftw_home}\n  $env{externlibs}/fftw\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"fftw - library\"\n)"}, {"filenames": ["${fftw_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFFTW.cmake", "content": "find_library(fftw_library_debug names ${fftw_dbg_names}\n    paths\n    $env{fftw_home}/lib\n    $env{externlibs}/fftw/lib\n    path_suffixes debug/lib debug/lib64\n    doc \"fftw - library (debug)\"\n  )"}]}, {"deps": [{"depname": "zspace", "version": null, "version_op": null, "unified_name": "zspace", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindZSPACE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["zspaceapi64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindZSPACE.cmake", "content": "find_library(zspace_library names zspaceapi64\n  paths\n  $env{zspace_home}\n  $env{externlibs}/zspace\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"zspace - library\"\n)"}, {"filenames": ["zspaceapi64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindZSPACE.cmake", "content": "find_library(zspace_library_debug names zspaceapi64\n    paths\n    $env{zspace_home}\n    $env{externlibs}/zspace\n    path_suffixes lib lib64\n    doc \"zspace - library (debug)\"\n  )"}]}, {"deps": [{"depname": "ossimplanet", "version": null, "version_op": null, "unified_name": "ossimplanet", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSSIMPLANET.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ossim"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSSIMPLANET.cmake", "content": "find_library(ossim_library names ossim\n  paths\n  $env{ossimplanet_home}\n  $env{externlibs}/ossimplanet\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"ossimplanet - library\"\n)"}, {"filenames": ["ossimplanet"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSSIMPLANET.cmake", "content": "find_library(ossimplanet_library names ossimplanet\n  paths\n  $env{ossimplanet_home}\n  $env{externlibs}/ossimplanet\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"ossimplanet - library\"\n)"}, {"filenames": ["ossimplanetd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSSIMPLANET.cmake", "content": "find_library(ossimplanet_library_debug names ossimplanetd\n    paths\n    $env{ossimplanet_home}/lib\n    $env{externlibs}/ossim/lib\n    doc \"ossimplanet - library (debug)\"\n  )"}, {"filenames": ["ossimd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSSIMPLANET.cmake", "content": "find_library(ossim_library_debug names ossimd\n    paths\n    $env{ossimplanet_home}/lib\n    $env{externlibs}/ossim/lib\n    doc \"ossimplanet - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cg", "version": null, "version_op": null, "unified_name": "cg", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCg.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cg"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCg.cmake", "content": "find_library(cg_library\n    names cg\n    paths\n\t$env{cg_bin_path}\n    $env{cg_lib_path}\n    $env{programfiles}/nvidia\\ corporation/cg/lib\n    $env{programfiles}/cg\n    /usr/lib64\n    /usr/lib\n    /usr/local/lib64\n    /usr/local/lib\n    ../lib64\n    ../lib\n    .\n\tno_default_path\n    doc \"the cg runtime library\"\n  )"}, {"filenames": ["cggl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCg.cmake", "content": "find_library(cg_gl_library\n    names cggl\n    paths\n\t$env{cg_bin_path}\n    $env{cg_lib_path}\n    $env{programfiles}/nvidia\\ corporation/cg/lib\n    $env{programfiles}/cg\n    /usr/lib64\n    /usr/lib\n    /usr/local/lib64\n    /usr/local/lib\n    ../lib64\n    ../lib\n    .\n\tno_default_path\n    doc \"the cg runtime library\"\n  )"}, {"filenames": ["cgc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCg.cmake", "content": "find_program(cg_compiler cgc\n  paths\n  $env{cg_bin64_path}\n  $env{externlibs}/cg/bin\n  $env{externlibs}/cg/bin\n  $env{programfiles}/nvidia\\ corporation/cg/bin\n  $env{programfiles}/cg\n  /usr/bin\n  /usr/local/bin\n  no_default_path\n  doc \"nvidia cg compiler\"\n)"}]}, {"deps": [{"depname": "tcl", "version": null, "version_op": null, "unified_name": "tcl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindTCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcl", "tcl${tcl_library_version}", "tcl${tcl_tclsh_version}", "tcl${tk_wish_version}", "tcl86", "tcl8.6", "tcl85", "tcl8.5", "tcl84", "tcl8.4", "tcl83", "tcl8.3", "tcl82", "tcl8.2", "tcl80", "tcl8.0"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTCL.cmake", "content": "find_library(tcl_library\n  names \n  tcl   \n  tcl${tcl_library_version} tcl${tcl_tclsh_version} tcl${tk_wish_version}\n  tcl86 tcl8.6 \n  tcl85 tcl8.5 \n  tcl84 tcl8.4 \n  tcl83 tcl8.3 \n  tcl82 tcl8.2 \n  tcl80 tcl8.0\n  paths ${tcltk_possible_lib_paths}\n  )"}, {"filenames": ["tclg", "tcl${tcl_library_version}g", "tcl${tcl_tclsh_version}g", "tcl${tk_wish_version}g", "tcl86g", "tcl8.6g", "tcl85g", "tcl8.5g", "tcl84g", "tcl8.4g", "tcl83g", "tcl8.3g", "tcl82g", "tcl8.2g", "tcl80g", "tcl8.0g"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTCL.cmake", "content": "find_library(tcl_debug_library\n  names \n  tclg   \n  tcl${tcl_library_version}g tcl${tcl_tclsh_version}g tcl${tk_wish_version}g\n  tcl86g tcl8.6g \n  tcl85g tcl8.5g \n  tcl84g tcl8.4g \n  tcl83g tcl8.3g \n  tcl82g tcl8.2g \n  tcl80g tcl8.0g\n  paths ${tcltk_possible_lib_paths}\n  )"}, {"filenames": ["tk", "tk${tk_library_version}", "tk${tcl_tclsh_version}", "tk${tk_wish_version}", "tk86", "tk8.6", "tk85", "tk8.5", "tk84", "tk8.4", "tk83", "tk8.3", "tk82", "tk8.2", "tk80", "tk8.0"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTCL.cmake", "content": "find_library(tk_library \n  names \n  tk\n  tk${tk_library_version} tk${tcl_tclsh_version} tk${tk_wish_version}\n  tk86 tk8.6\n  tk85 tk8.5 \n  tk84 tk8.4 \n  tk83 tk8.3 \n  tk82 tk8.2 \n  tk80 tk8.0\n  paths ${tcltk_possible_lib_paths}\n  )"}, {"filenames": ["tkg", "tk${tk_library_version}g", "tk${tcl_tclsh_version}g", "tk${tk_wish_version}g", "tk86g", "tk8.6g", "tk85g", "tk8.5g", "tk84g", "tk8.4g", "tk83g", "tk8.3g", "tk82g", "tk8.2g", "tk80g", "tk8.0g"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTCL.cmake", "content": "find_library(tk_debug_library\n  names \n  tkg   \n  tk${tk_library_version}g tk${tcl_tclsh_version}g tk${tk_wish_version}g\n  tk86g tk8.6g \n  tk85g tk8.5g \n  tk84g tk8.4g \n  tk83g tk8.3g \n  tk82g tk8.2g \n  tk80g tk8.0g\n  paths ${tcltk_possible_lib_paths}\n  )"}]}, {"deps": [{"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindPTHREAD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthreadvc2d.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPTHREAD.cmake", "content": "find_library(pthread_library_debug names pthreadvc2d.lib\n        paths\n        $env{pthread_home}/lib\n        $env{externlibs}/pthreads/lib\n      )"}, {"filenames": ["pthreadvc2.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPTHREAD.cmake", "content": "find_library(pthread_library_release names pthreadvc2.lib\n        paths\n        $env{pthread_home}/lib\n        $env{externlibs}/pthreads/lib\n      )"}, {"filenames": ["${pthread_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPTHREAD.cmake", "content": "find_library(pthread_library names ${pthread_names}\n    paths\n    $env{pthread_home}/lib\n    $env{externlibs}/pthread/lib\n    $env{externlibs}/pthreads/lib\n    /usr/lib\n    /usr/lib32\n    /usr/lib64\n    /usr/local/lib\n    /opt/local/lib\n    doc \"the pthread library\"\n  )"}, {"filenames": ["${pthread_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPTHREAD.cmake", "content": "find_library(pthread_library names ${pthread_names})"}]}, {"deps": [{"depname": "osgcal", "version": null, "version_op": null, "unified_name": "osgcal", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSGCAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgcal"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGCAL.cmake", "content": "find_library(osgcal_library names osgcal\n  paths\n  $env{osgcal_home}\n  $env{externlibs}/osgcal\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgcal - library\"\n)"}, {"filenames": ["osgcald"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGCAL.cmake", "content": "find_library(osgcal_library_debug names osgcald\n    paths\n    $env{osgcal_home}\n    $env{externlibs}/osgcal\n    path_suffixes lib lib64\n    doc \"osgcal - library (debug)\"\n  )"}]}, {"deps": [{"depname": "sisl", "version": null, "version_op": null, "unified_name": "sisl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSISL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sisl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSISL.cmake", "content": "find_library(sisl_library names sisl\n  paths\n  $env{sisl_home}\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"sisl - library\"\n)"}, {"filenames": ["sisl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSISL.cmake", "content": "find_library(sisl_library_debug names sisl\n    paths\n    $env{sisl_home}/lib\n    doc \"sisl - library (debug)\"\n  )"}]}, {"deps": [{"depname": "qt6", "version": null, "version_op": null, "unified_name": "qt6", "extractor_type": "cmake", "context": "find_package(qt6 components core gui xml network uitools required optional_components webenginewidgets webview quick svg svgwidgets opengl openglwidgets printsupport)", "confidence": "High"}, {"depname": "qt5core", "version": null, "version_op": null, "unified_name": "qt5core", "extractor_type": "cmake", "context": "find_package(qt5core required)", "confidence": "High"}, {"depname": "qt5network", "version": null, "version_op": null, "unified_name": "qt5network", "extractor_type": "cmake", "context": "find_package(qt5network required)", "confidence": "High"}, {"depname": "qt5xml", "version": null, "version_op": null, "unified_name": "qt5xml", "extractor_type": "cmake", "context": "find_package(qt5xml required)", "confidence": "High"}, {"depname": "qt5widgets", "version": null, "version_op": null, "unified_name": "qt5widgets", "extractor_type": "cmake", "context": "find_package(qt5widgets required)", "confidence": "High"}, {"depname": "qt5opengl", "version": null, "version_op": null, "unified_name": "qt5opengl", "extractor_type": "cmake", "context": "find_package(qt5opengl required)", "confidence": "High"}, {"depname": "qt5gui", "version": null, "version_op": null, "unified_name": "qt5gui", "extractor_type": "cmake", "context": "find_package(qt5gui required)", "confidence": "High"}, {"depname": "qt5svg", "version": null, "version_op": null, "unified_name": "qt5svg", "extractor_type": "cmake", "context": "find_package(qt5svg required)", "confidence": "High"}, {"depname": "qt5printsupport", "version": null, "version_op": null, "unified_name": "qt5printsupport", "extractor_type": "cmake", "context": "find_package(qt5printsupport required)", "confidence": "High"}, {"depname": "qt5uitools", "version": null, "version_op": null, "unified_name": "qt5uitools", "extractor_type": "cmake", "context": "find_package(qt5uitools required)", "confidence": "High"}, {"depname": "qt5webengine", "version": null, "version_op": null, "unified_name": "qt5webengine", "extractor_type": "cmake", "context": "find_package(qt5webengine quiet)", "confidence": "High"}, {"depname": "qt5webenginewidgets", "version": null, "version_op": null, "unified_name": "qt5webenginewidgets", "extractor_type": "cmake", "context": "find_package(qt5webenginewidgets quiet)", "confidence": "High"}, {"depname": "qt5webkit", "version": null, "version_op": null, "unified_name": "qt5webkit", "extractor_type": "cmake", "context": "find_package(qt5webkit quiet)", "confidence": "High"}, {"depname": "qt5webkitwidgets", "version": null, "version_op": null, "unified_name": "qt5webkitwidgets", "extractor_type": "cmake", "context": "find_package(qt5webkitwidgets quiet)", "confidence": "High"}, {"depname": "qt5quick", "version": null, "version_op": null, "unified_name": "qt5quick", "extractor_type": "cmake", "context": "find_package(qt5quick quiet)", "confidence": "High"}, {"depname": "qt5location", "version": null, "version_op": null, "unified_name": "qt5location", "extractor_type": "cmake", "context": "find_package(qt5location quiet)", "confidence": "High"}, {"depname": "qt5positioning", "version": null, "version_op": null, "unified_name": "qt5positioning", "extractor_type": "cmake", "context": "find_package(qt5positioning quiet)", "confidence": "High"}, {"depname": "qt5multimedia", "version": null, "version_op": null, "unified_name": "qt5multimedia", "extractor_type": "cmake", "context": "find_package(qt5multimedia quiet)", "confidence": "High"}, {"depname": "qt5script", "version": null, "version_op": null, "unified_name": "qt5script", "extractor_type": "cmake", "context": "find_package(qt5script quiet)", "confidence": "High"}, {"depname": "qt5scripttools", "version": null, "version_op": null, "unified_name": "qt5scripttools", "extractor_type": "cmake", "context": "find_package(qt5scripttools quiet)", "confidence": "High"}, {"depname": "qt5x11extras", "version": null, "version_op": null, "unified_name": "qt5x11extras", "extractor_type": "cmake", "context": "find_package(qt5x11extras quiet)", "confidence": "High"}, {"depname": "qt5script", "version": null, "version_op": null, "unified_name": "qt5script", "extractor_type": "cmake", "context": "find_package(qt5script required)", "confidence": "High"}, {"depname": "qt5scripttools", "version": null, "version_op": null, "unified_name": "qt5scripttools", "extractor_type": "cmake", "context": "find_package(qt5scripttools required)", "confidence": "High"}, {"depname": "qt5quick", "version": null, "version_op": null, "unified_name": "qt5quick", "extractor_type": "cmake", "context": "find_package(qt5quick required)", "confidence": "High"}, {"depname": "qt5positioning", "version": null, "version_op": null, "unified_name": "qt5positioning", "extractor_type": "cmake", "context": "find_package(qt5positioning required)", "confidence": "High"}, {"depname": "qt5location", "version": null, "version_op": null, "unified_name": "qt5location", "extractor_type": "cmake", "context": "find_package(qt5location required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "icu", "version": null, "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindICU.cmake", "confidence": "High"}, {"depname": "icu", "version": "0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "\n  set(icu_version 0)", "confidence": "Low"}, {"depname": "icu_major", "version": "0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "  set(icu_major_version 0)", "confidence": "Low"}, {"depname": "icu_minor", "version": "0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "  set(icu_minor_version 0)", "confidence": "Low"}, {"depname": "icu", "version": "0.0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "\n  set(icu_version \"0.0\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["icuuc", "cygicuuc", "cygicuuc32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindICU.cmake", "content": "find_library(\n  icu_library\n  names icuuc cygicuuc cygicuuc32\n  doc \"libraries to link against for the common parts of icu\")"}, {"filenames": ["icudata"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindICU.cmake", "content": "find_library(\n  icu_data_library\n  names icudata\n  doc \"libraries to link against for the common parts of icu\")"}, {"filenames": ["icuin", "icui18n", "cygicuin", "cygicuin32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindICU.cmake", "content": "find_library(\n    icu_i18n_library\n    names icuin icui18n cygicuin cygicuin32\n    doc \"libraries to link against for icu internationalization\")"}]}, {"deps": [{"depname": "assimp", "version": null, "version_op": null, "unified_name": "assimp", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/Findassimp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${assimp_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Findassimp.cmake", "content": "find_library(assimp_library names ${assimp_names}\n  paths\n  $env{assimp_home}/lib\n  doc \"assimp - library\"\n  \n  path_suffixes lib lib64\n)"}, {"filenames": ["${assimp_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Findassimp.cmake", "content": "find_library(assimp_library names ${assimp_names} doc \"assimp - library\")"}, {"filenames": ["${assimp_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/Findassimp.cmake", "content": "find_library(assimp_library_debug names ${assimp_dbg_names}\n    paths\n    $env{assimp_home}/lib\n    doc \"assimp - library (debug)\"\n  )"}]}, {"deps": [{"depname": "bifbof", "version": null, "version_op": null, "unified_name": "bifbof", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindBIFBOF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dsio"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindBIFBOF.cmake", "content": "find_library(bifbof_library names dsio\n  paths\n  $env{bifbof_home}\n  $env{externlibs}/bifbof\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"bifbof - library\"\n)"}, {"filenames": ["dsio_md_d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindBIFBOF.cmake", "content": "find_library(bifbof_library_debug names dsio_md_d\n    paths\n    $env{bifbof_home}\n    $env{externlibs}/bifbof\n    path_suffixes lib lib64\n    doc \"bifbof - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cgns", "version": null, "version_op": null, "unified_name": "cgns", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCGNS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cgns"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCGNS.cmake", "content": "find_library(cgns_library names cgns\n  paths\n  $env{cgns_home}\n  $env{externlibs}/cgns\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"cgns - library\"\n)"}, {"filenames": ["cgnsd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCGNS.cmake", "content": "find_library(cgns_library_debug names cgnsd\n    paths\n    $env{cgns_home}\n    $env{externlibs}/cgns\n    path_suffixes lib lib64\n    doc \"cgns - library (debug)\"\n  )"}]}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCOVISE.cmake", "confidence": "High"}, {"depname": "${argv}", "version": null, "version_op": null, "unified_name": "${argv}", "extractor_type": "cmake", "context": "find_package(${argv})", "confidence": "High"}, {"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk\n           components vtkiolegacy vtkfilterscore vtkcommoncore vtkimagingcore vtkcommondatamodel vtkcommonexecutionmodel\n           no_module\n           quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${library}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVISE.cmake", "content": "find_library(${module}_library\n         names ${library}\n         path_suffixes lib\n         paths\n         ${covisedir}/$env{archsuffix}\n         doc \"${module} - library\"\n      )"}, {"filenames": ["co${comp}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVISE.cmake", "content": "find_library(covise_webservice co${comp})"}]}, {"deps": [{"depname": "osgephemeris", "version": null, "version_op": null, "unified_name": "osgephemeris", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSGEPHEMERIS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgephemeris"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGEPHEMERIS.cmake", "content": "find_library(osgephemeris_library names osgephemeris\n  paths\n  $env{osgephemeris_home}\n  $env{externlibs}/osgephemeris\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgephemeris - library\"\n)"}, {"filenames": ["osgephemerisd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGEPHEMERIS.cmake", "content": "find_library(osgephemeris_library_debug names osgephemerisd\n    paths\n    $env{osgephemeris_home}/lib\n    $env{externlibs}/osgephemeris/lib\n    doc \"osgephemeris - library (debug)\"\n  )"}]}, {"deps": [{"depname": "alvar", "version": null, "version_op": null, "unified_name": "alvar", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindALVAR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["alvar200"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALVAR.cmake", "content": "find_library(alvar_library names alvar200\n  paths\n  $env{alvar_home}\n  $env{externlibs}/alvar\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64\n  doc \"alvar - library\"\n)"}, {"filenames": ["alvarplatform200"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALVAR.cmake", "content": "find_library(alvarplatform_library names alvarplatform200\n  paths\n  $env{alvar_home}\n  $env{externlibs}/alvar\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64\n  doc \"alvarplatform - library\"\n)"}, {"filenames": ["alvar200d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALVAR.cmake", "content": "find_library(alvar_library_debug names alvar200d\n    paths\n    $env{alvar_home}/lib\n    $env{externlibs}/alvar/lib\n    $env{externlibs}/alvar/bin\n    doc \"alvar - library (debug)\"\n  )"}, {"filenames": ["alvarplatform200d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindALVAR.cmake", "content": "find_library(alvarplatform_library_debug names alvarplatform200d\n    paths\n    $env{alvar_home}/lib\n    $env{externlibs}/alvar/lib\n    $env{externlibs}/alvar/bin\n    doc \"alvarplatform - library (debug)\"\n  )"}]}, {"deps": [{"depname": "itk", "version": null, "version_op": null, "unified_name": "itk", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindITK.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "3dsmax", "version": null, "version_op": null, "unified_name": "3dsmax", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/Find3DSMAX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ik", "version": null, "version_op": null, "unified_name": "ik", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindIK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ik"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindIK.cmake", "content": "find_library(ik_library names ik\n  paths\n  $env{ik_home}\n  $env{externlibs}/cometik\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"ik - library\"\n)"}, {"filenames": ["ikd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindIK.cmake", "content": "find_library(ik_library_debug names ikd\n    paths\n    $env{ik_home}/lib\n    $env{externlibs}/cometik/lib\n    doc \"ik - library (debug)\"\n  )"}]}, {"deps": [{"depname": "physx", "version": null, "version_op": null, "unified_name": "physx", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${physx_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_library  names ${physx_names}\n  paths ${physx_search_path}\n  doc \"physx - library\"\n)"}, {"filenames": ["lowlevel"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_ll_library names lowlevel\n  paths ${physx_search_path}\n  doc \"physx_ll - library\"\n)"}, {"filenames": ["${physx_common_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_common_library names ${physx_common_names}\n  paths ${physx_search_path}\n  doc \"physx_common - library\"\n)"}, {"filenames": ["${physx_extensions_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_extensions_library names ${physx_extensions_names}\n  paths ${physx_search_path}\n  doc \"physx_extensions - library\"\n)"}, {"filenames": ["physxvisualdebuggersdk"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_vd_library names physxvisualdebuggersdk\n  paths ${physx_search_path}\n  doc \"physx_vd - library\"\n)"}, {"filenames": ["${physx_cooking_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_cooking_library names ${physx_cooking_names}\n  paths ${physx_search_path}\n  doc \"physx_cooking - library\"\n)"}, {"filenames": ["physxvehicle_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_vehicle_library names physxvehicle_static_64\n  paths ${physx_search_path}\n  doc \"physx_vehicle - library\"\n)"}, {"filenames": ["physxtask_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_task_library names physxtask_static_64\n  paths ${physx_search_path}\n  doc \"physx_task - library\"\n)"}, {"filenames": ["physxpvdsdk_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_pvdsdk_library names physxpvdsdk_static_64\n  paths ${physx_search_path}\n  doc \"physx_pvdsdk - library\"\n)"}, {"filenames": ["physxcharacterkinematic_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_character_library names physxcharacterkinematic_static_64\n  paths ${physx_search_path}\n  doc \"physx_character - library\"\n)"}, {"filenames": ["physxfoundation_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_foundation_library names physxfoundation_64\n  paths ${physx_search_path}\n  doc \"physx_foundation - library\"\n)"}, {"filenames": ["${physx_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_library_debug names ${physx_dbg_names}\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["lowleveldebug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_ll_library_debug names lowleveldebug\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_ll - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["${physx_common_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_common_library_debug names ${physx_common_dbg_names}\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_common - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["${physx_extensions_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_extensions_library_debug names ${physx_extensions_dbg_names}\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_extensions - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxvisualdebuggersdkdebug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_vd_library_debug names physxvisualdebuggersdkdebug\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_vd - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["${physx_cooking_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_cooking_library_debug names ${physx_cooking_dbg_names}\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_cooking - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxvehicle_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_vehicle_library_debug names physxvehicle_static_64\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_vehicle - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxtask_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_task_library_debug names physxtask_static_64\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_task - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxpvdsdk_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_pvdsdk_library_debug names physxpvdsdk_static_64\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_pvdsdk - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxcharacterkinematic_static_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_character_library_debug names physxcharacterkinematic_static_64\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_character - library (debug)\"\n\tno_default_path\n  )"}, {"filenames": ["physxfoundation_64"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPHYSX.cmake", "content": "find_library(physx_foundation_library_debug names physxfoundation_64\n    paths\n  $env{externlibs}/physx/bin/win.x86_64.vc142.md/debug\n    $env{physx_home}\n  $env{externlibs}/physx/lib/vc11win64\n  $env{externlibs}/physx/lib/\n    path_suffixes lib lib64\n    doc \"physx_foundation - library (debug)\"\n\tno_default_path\n  )"}]}, {"deps": [{"depname": "osgqt", "version": null, "version_op": null, "unified_name": "osgqt", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOSGQT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${osgqt_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGQT.cmake", "content": "find_library(osgqt_library names ${osgqt_names}\n  paths\n  $env{osgqt_home}\n  $env{externlibs}/openscenegraph\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgqt - library\"\n)"}, {"filenames": ["${osgqt_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOSGQT.cmake", "content": "find_library(osgqt_library_debug names ${osgqt_dbg_names}\n    paths\n    $env{osgqt_home}/lib\n    $env{externlibs}/openscenegraph/lib\n    doc \"osgqt - library (debug)\"\n  )"}]}, {"deps": [{"depname": "faro", "version": null, "version_op": null, "unified_name": "faro", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindFARO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["farolaserscannerapi"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFARO.cmake", "content": "find_library(faro_library names farolaserscannerapi\n  paths\n  $env{faro_home}\n  $env{externlibs}/faro\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"faro - library\"\n)"}, {"filenames": ["farolaserscannerapid"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindFARO.cmake", "content": "find_library(faro_library_debug names farolaserscannerapid\n    paths\n    $env{faro_home}/lib\n    $env{externlibs}/faro/lib\n    doc \"faro - library (debug)\"\n  )"}]}, {"deps": [{"depname": "subversion", "version": null, "version_op": null, "unified_name": "subversion", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindSubversion.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["svn"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindSubversion.cmake", "content": "find_program(subversion_svn_executable svn\n  paths\n  \"$env{svn_home}/bin\"\n  \"$env{externlibs}/svn/bin\"\n  \"$env{externlibs}/unixutils/svn\"\n  doc \"subversion command line client\"\n)"}]}, {"deps": [{"depname": "libusb1", "version": null, "version_op": null, "unified_name": "usb1", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLIBUSB1.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libusb1_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBUSB1.cmake", "content": "find_library(libusb1_library names ${libusb1_names}\n  paths\n  $env{libusb1_home}\n  $env{externlibs}/libusb1\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/msvc_x64\n  doc \"libusb1 - library\"\n)"}, {"filenames": ["${libusb1_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLIBUSB1.cmake", "content": "find_library(libusb1_library_debug names ${libusb1_dbg_names}\n    paths\n    $env{libusb1_home}/lib\n    $env{externlibs}/libusb1\n    path_suffixes bin lib lib64 lib/msvc_x64\n    doc \"libusb1 - library (debug)\"\n  )"}]}, {"deps": [{"depname": "jpegturbo", "version": null, "version_op": null, "unified_name": "jpegturbo", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jpeg"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "content": "find_library(jpegturbo_library names jpeg\n  hints ${jpegturbo_prefix}/lib ${jpegturbo_prefix}/lib64\n  paths\n  $env{jpegturbo_home}\n  $env{externlibs}/libjpeg-turbo64\n  $env{externlibs}/libjpeg-turbo\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /opt/homebrew/opt/jpeg-turbo\n  /usr/local/opt/jpeg-turbo\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"jpegturbo - library\"\n)"}, {"filenames": ["jpegd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "content": "find_library(jpegturbo_library_debug names jpegd\n        hints ${jpegturbo_prefix}/lib ${jpegturbo_prefix}/lib64\n        paths\n        $env{jpegturbo_home}\n        $env{externlibs}/libjpeg-turbo64\n        $env{externlibs}/libjpeg-turbo\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local\n        /opt/homebrew/opt/jpeg-turbo\n        /usr/local/opt/jpeg-turbo\n        /usr\n        /sw\n        /opt/local\n        /opt/csw\n        /opt\n        path_suffixes lib lib64\n        doc \"jpegturbo - library\"\n    )"}, {"filenames": ["turbojpeg"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "content": "find_library(turbojpeg_library turbojpeg\n  hints ${jpegturbo_prefix}/lib ${jpegturbo_prefix}/lib64\n  paths\n  $env{jpegturbo_home}\n  $env{externlibs}/libjpeg-turbo64\n  $env{externlibs}/libjpeg-turbo\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /opt/homebrew/opt/jpeg-turbo\n  /usr/local/opt/jpeg-turbo\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"jpegturbo - library\"\n)"}, {"filenames": ["libturbojpeg.a"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "content": "find_library(turbojpeg_library_static names libturbojpeg.a\n  hints ${jpegturbo_prefix}/lib ${jpegturbo_prefix}/lib64\n  paths\n  $env{jpegturbo_home}\n  $env{externlibs}/libjpeg-turbo64\n  $env{externlibs}/libjpeg-turbo\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /opt/homebrew/opt/jpeg-turbo\n  /usr/local/opt/jpeg-turbo\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"jpegturbo - static library\"\n)"}, {"filenames": ["turbojpegd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindJPEGTURBO.cmake", "content": "find_library(turbojpeg_library_debug turbojpegd\n        hints ${jpegturbo_prefix}/debug/lib ${jpegturbo_prefix}/debug/lib64 ${jpegturbo_prefix}/lib ${jpegturbo_prefix}/lib64\n        paths\n        $env{jpegturbo_home}\n        $env{externlibs}/libjpeg-turbo64\n        $env{externlibs}/libjpeg-turbo\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local\n        /opt/homebrew/opt/jpeg-turbo\n        /usr/local/opt/jpeg-turbo\n        /usr\n        /sw\n        /opt/local\n        /opt/csw\n        /opt\n        path_suffixes debug/lib debug/lib64 lib lib64\n        doc \"jpegturbo - library\"\n    )"}]}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindEIGEN.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCAL3D.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cal3d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCAL3D.cmake", "content": "find_library(cal3d_library names cal3d\n  paths\n  $env{cal3d_home}\n  $env{externlibs}/cal3d\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"cal3d - library\"\n)"}, {"filenames": ["cal3d_d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCAL3D.cmake", "content": "find_library(cal3d_library_debug names cal3d_d\n    paths\n    $env{cal3d_home}\n    $env{externlibs}/cal3d\n    path_suffixes lib lib64\n    doc \"cal3d - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cover", "version": null, "version_op": null, "unified_name": "cover", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "confidence": "High"}, {"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 components osgviewer osgga osgdb)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coopencover"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "content": "find_library(cover coopencover)"}, {"filenames": ["coopenconfig"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "content": "find_library(cover_config coopenconfig)"}, {"filenames": ["coopenvrui"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "content": "find_library(cover_vrui coopenvrui)"}, {"filenames": ["coosgvrui"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "content": "find_library(cover_osgvrui coosgvrui)"}, {"filenames": ["coopenpluginutil"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCOVER.cmake", "content": "find_library(cover_pluginutil coopenpluginutil)"}]}, {"deps": [{"depname": "linphonedesktop", "version": null, "version_op": null, "unified_name": "linphonedesktop", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLinphoneDesktop.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib_name}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLinphoneDesktop.cmake", "content": "find_library(linphonedesktop_${lib_name}_lib names ${lib_name}\n    paths\n    ${linphonedesktop_externlibs}\n    /usr/local\n    path_suffixes lib lib64\n    doc \"linphone-desktop - library used by linphone\"\n  )"}]}, {"deps": [{"depname": "wiiyourself", "version": null, "version_op": null, "unified_name": "wiiyourself", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindWIIYOURSELF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wiiyourselfs"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIIYOURSELF.cmake", "content": "find_library(wiiyourself_library names wiiyourselfs\n  paths\n  $env{externlibs}/wiiyourself\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"wiiyourself - library\"\n)"}, {"filenames": ["hid}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIIYOURSELF.cmake", "content": "find_library(wiiyourself_hid_library names hid}\n  paths\n  $env{externlibs}/wiiyourself\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"wiiyourself - library\"\n)"}, {"filenames": ["hid"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIIYOURSELF.cmake", "content": "find_library(wiiyourself_hid_library names hid\n    paths\n    $env{externlibs}/wiiyourself/lib\n    doc \"wiiyourself - hid library\"\n  )"}, {"filenames": ["wiiyourselfsd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindWIIYOURSELF.cmake", "content": "find_library(wiiyourself_library_debug names wiiyourselfsd\n    paths\n    $env{externlibs}/wiiyourself/lib\n    doc \"wiiyourself - library (debug)\"\n  )"}]}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindTBB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library tbb\n        paths ${tbb_libdir}\n        no_default_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library_malloc tbbmalloc\n        paths ${tbb_libdir}\n        no_default_path)"}, {"filenames": ["tbb_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library_debug tbb_debug\n        paths ${tbb_libdir}\n        no_default_path)"}, {"filenames": ["tbbmalloc_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library_malloc_debug tbbmalloc_debug\n        paths ${tbb_libdir}\n        no_default_path)"}, {"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library tbb\n            paths ${tbb_libdir}\n            no_default_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library_malloc tbbmalloc\n            paths ${tbb_libdir}\n            no_default_path)"}, {"filenames": ["tbb_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library_debug tbb_debug\n            paths ${tbb_libdir} ${tbb_debuglibdir}\n            no_default_path)"}, {"filenames": ["tbbmalloc_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library_malloc_debug tbbmalloc_debug\n            paths ${tbb_libdir} ${tbb_debuglibdir}\n            no_default_path)"}, {"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(tbb_library tbb)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(tbb_library_malloc tbbmalloc)"}, {"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n                tbb_library tbb\n                paths ${tbb_root}/lib\n                no_default_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n                tbb_library_malloc tbbmalloc\n                paths ${tbb_root}/lib\n                no_default_path)"}, {"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library tbb\n            paths ${tbb_root}/lib ${tbb_root}/lib64 ${tbb_root}/lib/x86_64-linux-gnu ${tbb_root}/lib/intel64/gcc4.4\n            no_default_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n            tbb_library_malloc tbbmalloc\n            paths ${tbb_root}/lib ${tbb_root}/lib64 ${tbb_root}/lib/x86_64-linux-gnu ${tbb_root}/lib/intel64/gcc4.4\n            no_default_path)"}, {"filenames": ["tbb"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library_mic tbb\n        paths ${tbb_root}/lib/mic\n        no_default_path)"}, {"filenames": ["tbbmalloc"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindTBB.cmake", "content": "find_library(\n        tbb_library_malloc_mic tbbmalloc\n        paths ${tbb_root}/lib/mic\n        no_default_path)"}]}, {"deps": [{"depname": "audiofile", "version": null, "version_op": null, "unified_name": "audiofile", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindAUDIOFILE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["audiofile"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindAUDIOFILE.cmake", "content": "find_library(audiofile_library names audiofile\n  paths\n  $env{audiofile_home}/lib\n  $env{externlibs}/audiofile/lib\n  doc \"audiofile - library\"\n  \n  path_suffixes lib lib64\n)"}, {"filenames": ["audiofile"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindAUDIOFILE.cmake", "content": "find_library(audiofile_library names audiofile doc \"audiofile - library\")"}, {"filenames": ["audiofiled"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindAUDIOFILE.cmake", "content": "find_library(audiofile_library_debug names audiofiled\n    paths\n    $env{audiofile_home}/lib\n    $env{externlibs}/audiofile/lib\n    doc \"audiofile - library (debug)\"\n  )"}]}, {"deps": [{"depname": "opennurbs", "version": null, "version_op": null, "unified_name": "opennurbs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOpenNURBS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opennurbs_public.lib", "opennurbs_public"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenNURBS.cmake", "content": "find_library(opennurbs_library names opennurbs_public.lib opennurbs_public paths $env{externlibs}/opennurbs  path_suffixes lib64 lib libs64 libs libs/win32 libs/win64)"}, {"filenames": ["opennurbs_publicd.lib", "opennurbs_public"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenNURBS.cmake", "content": "find_library(opennurbs_library_debug names opennurbs_publicd.lib opennurbs_public)"}, {"filenames": ["${opennurbs_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOpenNURBS.cmake", "content": "find_library(opennurbs_library_debug names ${opennurbs_dbg_names}\n        paths\n        $env{externlibs}/opennurbs\n        path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n        doc \"opennurbs - library (debug)\"\n    )"}]}, {"deps": [{"depname": "osgphysx", "version": null, "version_op": null, "unified_name": "osgphysx", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOsgPhysX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osgphysics"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgPhysX.cmake", "content": "find_library(osgphysx_library names osgphysics\n  paths\n  $env{osgphysx_home}\n  $env{externlibs}/osgphysx\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgphysx - library\"\n)"}, {"filenames": ["osgphysicsutils"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgPhysX.cmake", "content": "find_library(osgphysx_utils_library names osgphysicsutils\n  paths\n  $env{osgphysx_home}\n  $env{externlibs}/osgphysx\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"osgphysx_utils - library\"\n)"}, {"filenames": ["osgphysicsd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgPhysX.cmake", "content": "find_library(osgphysx_library_debug names osgphysicsd\n    paths\n    $env{osgphysx_home}/lib\n    $env{externlibs}/osgphysx/lib\n    doc \"osgphysx - library (debug)\"\n  )"}, {"filenames": ["osgphysicsutilsd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOsgPhysX.cmake", "content": "find_library(osgphysx_utils_library_debug names osgphysicsutilsd\n    paths\n    $env{osgphysx_home}/lib\n    $env{externlibs}/osgphysx/lib\n    doc \"osgphysx_utils - library (debug)\"\n  )"}]}, {"deps": [{"depname": "gsoap", "version": null, "version_op": null, "unified_name": "gsoap", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindGSOAP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["soapcpp2"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGSOAP.cmake", "content": "find_program(gsoap_soapcpp2 soapcpp2\n  paths\n  $env{gsoap_home}/bin/linux386\n  $env{externlibs}/gsoap/gsoap/bin/linux386\n  /usr/bin\n  /usr/local/bin\n  /opt/bin\n  /opt/local/bin\n  no_default_path\n  doc \"gsoap - soapcpp2\"\n)"}, {"filenames": ["wsdl2h"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindGSOAP.cmake", "content": "find_program(gsoap_wsdl2h wsdl2h\n  paths\n  $env{gsoap_home}/bin/linux386\n  $env{externlibs}/gsoap/gsoap/bin/linux386\n  /usr/bin\n  /usr/local/bin\n  /opt/bin\n  /opt/local/bin\n  no_default_path\n  doc \"gsoap - wsdl2h\"\n)"}]}, {"deps": [{"depname": "lamure", "version": null, "version_op": null, "unified_name": "lamure", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindLamure.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lamure_rendering"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_library names lamure_rendering\n  paths\n  $env{lamure_home}\n  $env{externlibs}/lamure\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/release\n  doc \"lamure - library\"\n)"}, {"filenames": ["lamure_virtual_texturing"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamurevt_library names lamure_virtual_texturing\n  paths\n  $env{lamure_home}\n  $env{externlibs}/lamure\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/release\n  doc \"lamurevt - library\"\n)"}, {"filenames": ["lamure_common"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_common_library names lamure_common\n  paths\n  $env{lamure_home}\n  $env{externlibs}/lamure\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/release\n  doc \"lamure_common - library\"\n)"}, {"filenames": ["lamure_rendering"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_rendering_library names lamure_rendering\n  paths\n  $env{lamure_home}\n  $env{externlibs}/lamure\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/release\n  doc \"lamure_rendering - library\"\n)"}, {"filenames": ["lamure_pvs_common"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_pvs_common_library names lamure_pvs_common\n  paths\n  $env{lamure_home}\n  $env{externlibs}/lamure\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/release\n  doc \"lamure_pvs_common - library\"\n)"}, {"filenames": ["lamure_renderingd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_library_debug names lamure_renderingd\n    paths\n    $env{lamure_home}/lib/debug\n    $env{externlibs}/lamure/lib/debug\n    doc \"lamure - library (debug)\"\n  )"}, {"filenames": ["lamure_virtual_texturing"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamurevt_library_debug names lamure_virtual_texturing\n    paths\n    $env{lamure_home}/lib/debug\n    $env{externlibs}/lamure/lib/debug\n    doc \"lamurevt - library (debug)\"\n  )"}, {"filenames": ["lamure_commond"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_common_library_debug names lamure_commond\n    paths\n    $env{lamure_home}/lib/debug\n    $env{externlibs}/lamure/lib/debug\n    doc \"lamure_common - library (debug)\"\n  )"}, {"filenames": ["lamure_renderingd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_rendering_library_debug names lamure_renderingd\n    paths\n    $env{lamure_home}/lib/debug\n    $env{externlibs}/lamure/lib/debug\n    doc \"lamure_common - library (debug)\"\n  )"}, {"filenames": ["lamure_pvs_common"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindLamure.cmake", "content": "find_library(lamure_pvs_common_library_debug names lamure_pvs_common\n    paths\n    $env{lamure_home}/lib/debug\n    $env{externlibs}/lamure/lib/debug\n    doc \"lamure_pvs_common - library (debug)\"\n  )"}]}, {"deps": [{"depname": "ovr", "version": null, "version_op": null, "unified_name": "ovr", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindOVR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${ovr_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOVR.cmake", "content": "find_library(ovr_library names ${ovr_names}\n  paths\n  $env{ovr_home}\n  $env{externlibs}/oculussdk/libovr\n  $env{externlibs}/libovr\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/release/vs2012 lib/windows/x64/debug/vs2012\n  doc \"ovr - library\"\n)"}, {"filenames": ["${ovr_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindOVR.cmake", "content": "find_library(ovr_library_debug names ${ovr_dbg_names}\n    paths\n  $env{ovr_home}\n  $env{externlibs}/oculussdk/libovr\n  $env{externlibs}/libovr\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes bin lib lib64 lib/x64/vs2012 lib/windows/x64/debug/vs2012 lib/windows/x64/release/vs2012\n    doc \"ovr - library (debug)\"\n  )"}]}, {"deps": [{"depname": "${argv}", "version": null, "version_op": null, "unified_name": "${argv}", "extractor_type": "cmake", "context": "find_package(${argv})", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "find_package(cudatoolkit)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components ${boost_components} required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components ${boost_components} quiet required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["grep"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/CoviseHelperMacros.cmake", "content": "find_program(grep_executable grep paths $env{externlibs}/unixutils/bin doc \"grep executable\")"}, {"filenames": ["findstr"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/CoviseHelperMacros.cmake", "content": "find_program(findstr_executable findstr doc \"findstr executable\")"}]}, {"deps": [{"depname": "pcl", "version": null, "version_op": null, "unified_name": "pcl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindPCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${pcl_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_library names ${pcl_names}\n  paths\n  $env{pcl_home}\n  $env{externlibs}/pcl\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"pcl - library\"\n)"}, {"filenames": ["${pcl_io_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_io_library names ${pcl_io_names}\n  paths\n  $env{pcl_home}\n  $env{externlibs}/pcl\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"pcl-io - library\"\n)"}, {"filenames": ["${pcl_ooc_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_ooc_library names ${pcl_ooc_names}\n  paths\n  $env{pcl_home}\n  $env{externlibs}/pcl\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  path_suffixes lib lib64\n  doc \"pcl-ooc - library\"\n)"}, {"filenames": ["pcl_common_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_library_debug names pcl_common_debug\n    paths\n    $env{pcl_home}\n    $env{externlibs}/pcl\n    path_suffixes lib lib64\n    doc \"pcl - library (debug)\"\n  )"}, {"filenames": ["pcl_io_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_io_library_debug names pcl_io_debug\n    paths\n    $env{pcl_home}\n    $env{externlibs}/pcl\n    path_suffixes lib lib64\n    doc \"pcl - io - library (debug)\"\n  )"}, {"filenames": ["pcl_outofcore_debug"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindPCL.cmake", "content": "find_library(pcl_ooc_library_debug names pcl_outofcore_debug\n    paths\n    $env{pcl_home}\n    $env{externlibs}/pcl\n    path_suffixes lib lib64\n    doc \"pcl - ooc - library (debug)\"\n  )"}]}, {"deps": [{"depname": "cef", "version": null, "version_op": null, "unified_name": "cef", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/FindCEF.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${cef_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCEF.cmake", "content": "find_library(cef_library names ${cef_names}\n  paths\n  $env{cef_home}\n  $env{externlibs}/cef\n  /opt/local\n  /opt/cef\n  /opt\n  path_suffixes release lib/cef lib64/cef lib lib64 lib/win_64_vs2015\n  doc \"cef - library\"\n)"}, {"filenames": ["${cef_wrapper_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCEF.cmake", "content": "find_library(cef_wrapper_library names ${cef_wrapper_names}\n  paths\n  $env{cef_home}\n  $env{externlibs}/cef\n  /opt/local\n  /opt/cef\n  /opt\n  path_suffixes release lib/cef lib64/cef lib lib64 lib/win_64_vs2015 release/libcef_dll_wrapper libcef_dll_wrapper\n  doc \"cef - wrapper library\"\n)"}, {"filenames": ["${cef_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCEF.cmake", "content": "find_library(cef_library_debug names ${cef_dbg_names}\n    paths\n    $env{cef_home}/lib\n    $env{externlibs}/cef\n    /opt/local\n    /opt/cef\n    /opt\n    path_suffixes debug lib/cef lib64/cef lib lib64 lib/win_64_vs2015\n    doc \"cef - library (debug)\"\n  )"}, {"filenames": ["${cef_wrapper_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/FindCEF.cmake", "content": "find_library(cef_wrapper_library_debug names ${cef_wrapper_dbg_names}\n    paths\n    $env{cef_home}/lib\n    $env{externlibs}/cef\n    /opt/local\n    /opt/cef\n    /opt\n    path_suffixes debug lib/cef lib64/cef lib lib64 lib/win_64_vs2015 debug/libcef_dll_wrapper libcef_dll_wrapper\n    doc \"cef - wrapper library (debug)\"\n  )"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/apple/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgphysx", "version": null, "version_op": null, "unified_name": "osgphysx", "extractor_type": "cmake", "context": "find_package(osgphysx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pcl", "version": null, "version_op": null, "unified_name": "pcl", "extractor_type": "cmake", "context": "find_package(pcl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libusb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "cmake", "context": "find_package(libusb)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "netcdf", "version": null, "version_op": null, "unified_name": "netcdf", "extractor_type": "cmake", "context": "find_package(netcdf)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "videoinput", "version": null, "version_op": null, "unified_name": "videoinput", "extractor_type": "cmake", "context": "find_package(videoinput)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "find_package(pthread required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgcal", "version": null, "version_op": null, "unified_name": "osgcal", "extractor_type": "cmake", "context": "find_package(osgcal)", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "find_package(cal3d)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "physx", "version": null, "version_op": null, "unified_name": "physx", "extractor_type": "cmake", "context": "find_package(physx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "zspace", "version": null, "version_op": null, "unified_name": "zspace", "extractor_type": "cmake", "context": "find_package(zspace)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "find_package(fftw)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "snappy", "version": null, "version_op": null, "unified_name": "snappy", "extractor_type": "cmake", "context": "find_package(snappy)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opennurbs", "version": null, "version_op": null, "unified_name": "opennurbs", "extractor_type": "cmake", "context": "find_package(opennurbs)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sisl", "version": null, "version_op": null, "unified_name": "sisl", "extractor_type": "cmake", "context": "find_package(sisl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "bullet", "version": null, "version_op": null, "unified_name": "bullet", "extractor_type": "cmake", "context": "find_package(bullet config quiet)", "confidence": "High"}, {"depname": "bullet", "version": null, "version_op": null, "unified_name": "bullet", "extractor_type": "cmake", "context": "find_package(bullet module)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ifcpp", "version": null, "version_op": null, "unified_name": "ifcpp", "extractor_type": "cmake", "context": "find_package(ifcpp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "e57", "version": null, "version_op": null, "unified_name": "e57", "extractor_type": "cmake", "context": "find_package(e57)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8 quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "find_package(glut)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "find_package(pthreads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "vtk_library", "version": null, "version_op": null, "unified_name": "vtk_library", "extractor_type": "cmake", "context": "        set(vtk_library_version -${vtk_major_version}.${vtk_minor_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "microhttpd", "version": null, "version_op": null, "unified_name": "microhttpd", "extractor_type": "cmake", "context": "find_package(microhttpd)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "linphonedesktop", "version": null, "version_op": null, "unified_name": "linphonedesktop", "extractor_type": "cmake", "context": "find_package(linphonedesktop)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "find_package(cal3d)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgbullet", "version": null, "version_op": null, "unified_name": "osgbullet", "extractor_type": "cmake", "context": "find_package(osgbullet components osgbcollision osgbdynamics osgbinteraction)", "confidence": "High"}, {"depname": "osgworks", "version": "2.0.0", "version_op": null, "unified_name": "osgworks", "extractor_type": "cmake", "context": "find_package(osgworks 2.0.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "lamure", "version": null, "version_op": null, "unified_name": "lamure", "extractor_type": "cmake", "context": "find_package(lamure)", "confidence": "High"}, {"depname": "schism", "version": null, "version_op": null, "unified_name": "schism", "extractor_type": "cmake", "context": "find_package(schism)", "confidence": "High"}, {"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "find_package(freeimage)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "find_package(openvr)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "proj4", "version": null, "version_op": null, "unified_name": "proj4", "extractor_type": "cmake", "context": "find_package(proj4)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openpass", "version": null, "version_op": null, "unified_name": "openpass", "extractor_type": "cmake", "context": "find_package(openpass)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "surface", "version": null, "version_op": null, "unified_name": "surface", "extractor_type": "cmake", "context": "find_package(surface)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgearth", "version": null, "version_op": null, "unified_name": "osgearth", "extractor_type": "cmake", "context": "find_package(osgearth)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sixense", "version": null, "version_op": null, "unified_name": "sixense", "extractor_type": "cmake", "context": "find_package(sixense)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgephemeris", "version": null, "version_op": null, "unified_name": "osgephemeris", "extractor_type": "cmake", "context": "find_package(osgephemeris)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "wiiyourself", "version": null, "version_op": null, "unified_name": "wiiyourself", "extractor_type": "cmake", "context": "find_package(wiiyourself)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openthreads", "version": null, "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "find_package(openthreads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "assimp", "version": null, "version_op": null, "unified_name": "assimp", "extractor_type": "cmake", "context": "find_package(assimp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "jt", "version": null, "version_op": null, "unified_name": "jt", "extractor_type": "cmake", "context": "find_package(jt)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tcl", "version": null, "version_op": null, "unified_name": "tcl", "extractor_type": "cmake", "context": "find_package(tcl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osvr", "version": null, "version_op": null, "unified_name": "osvr", "extractor_type": "cmake", "context": "find_package(osvr)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgqt", "version": null, "version_op": null, "unified_name": "osgqt", "extractor_type": "cmake", "context": "find_package(osgqt)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsbsim", "version": null, "version_op": null, "unified_name": "jsbsim", "extractor_type": "cmake", "context": "find_package(jsbsim)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "bifbof", "version": null, "version_op": null, "unified_name": "bifbof", "extractor_type": "cmake", "context": "find_package(bifbof)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libusb1", "version": null, "version_op": null, "unified_name": "usb1", "extractor_type": "cmake", "context": "find_package(libusb1)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ik", "version": null, "version_op": null, "unified_name": "ik", "extractor_type": "cmake", "context": "find_package(ik)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "speex", "version": null, "version_op": null, "unified_name": "speex", "extractor_type": "cmake", "context": "find_package(speex)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgcal", "version": null, "version_op": null, "unified_name": "osgcal", "extractor_type": "cmake", "context": "find_package(osgcal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "wiringpi", "version": null, "version_op": null, "unified_name": "wiringpi", "extractor_type": "cmake", "context": "find_package(wiringpi)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "itk", "version": null, "version_op": null, "unified_name": "itk", "extractor_type": "cmake", "context": "find_package(itk)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "midifile", "version": null, "version_op": null, "unified_name": "midifile", "extractor_type": "cmake", "context": "find_package(midifile)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "embree", "version": "3.0.0", "version_op": null, "unified_name": "embree", "extractor_type": "cmake", "context": "find_package(embree 3.0.0 quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "alvar", "version": null, "version_op": null, "unified_name": "alvar", "extractor_type": "cmake", "context": "find_package(alvar)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ccd", "version": null, "version_op": null, "unified_name": "ccd", "extractor_type": "cmake", "context": "find_package(ccd)", "confidence": "High"}, {"depname": "fcl", "version": null, "version_op": null, "unified_name": "fcl", "extractor_type": "cmake", "context": "find_package(fcl)", "confidence": "High"}, {"depname": "dart", "version": "6.6.0", "version_op": null, "unified_name": "dart", "extractor_type": "cmake", "context": "find_package(dart 6.6.0 required components gui-osg config)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "find_package(freeimage)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "curses", "version": null, "version_op": null, "unified_name": "curses", "extractor_type": "cmake", "context": "find_package(curses)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "slam6d", "version": null, "version_op": null, "unified_name": "slam6d", "extractor_type": "cmake", "context": "find_package(slam6d)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ovr", "version": null, "version_op": null, "unified_name": "ovr", "extractor_type": "cmake", "context": "find_package(ovr)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "abaqus", "version": null, "version_op": null, "unified_name": "abaqus", "extractor_type": "cmake", "context": "find_package(abaqus)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osc", "version": null, "version_op": null, "unified_name": "osc", "extractor_type": "cmake", "context": "find_package(osc)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "geotiff", "version": null, "version_op": null, "unified_name": "geotiff", "extractor_type": "cmake", "context": "find_package(geotiff)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "artoolkitplus", "version": null, "version_op": null, "unified_name": "artoolkitplus", "extractor_type": "cmake", "context": "find_package(artoolkitplus)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "natnet", "version": null, "version_op": null, "unified_name": "natnet", "extractor_type": "cmake", "context": "find_package(natnet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cef", "version": null, "version_op": null, "unified_name": "cef", "extractor_type": "cmake", "context": "find_package(cef)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cgns", "version": null, "version_op": null, "unified_name": "cgns", "extractor_type": "cmake", "context": "find_package(cgns)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ossimplanet", "version": null, "version_op": null, "unified_name": "ossimplanet", "extractor_type": "cmake", "context": "find_package(ossimplanet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv2", "version": null, "version_op": null, "unified_name": "opencv2", "extractor_type": "cmake", "context": "find_package(opencv2)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "revit", "version": null, "version_op": null, "unified_name": "revit", "extractor_type": "cmake", "context": "find_package(revit)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mpi", "version": null, "version_op": null, "unified_name": "mpi", "extractor_type": "cmake", "context": "find_package(mpi components c cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "flex", "version": null, "version_op": null, "unified_name": "flex", "extractor_type": "cmake", "context": "find_package(flex)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmod", "version": null, "version_op": null, "unified_name": "fmod", "extractor_type": "cmake", "context": "find_package(fmod)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/unix/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libhdf5_d", "hdf5d", "hdf5_d", "hdf5d_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_library_debug names libhdf5_d hdf5d hdf5_d hdf5d_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5", "hdf5", "hdf5_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_library_release names libhdf5 hdf5 hdf5_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_hl_d", "hdf5_hld", "hdf5_hl_d", "hdf5d_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_hl_library_debug names libhdf5_hl_d hdf5_hld hdf5_hl_d hdf5d_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_hl", "hdf5_hl", "hdf5_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_hl_library_release names libhdf5_hl hdf5_hl hdf5_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_cpp_d", "hdf5d", "hdf5_cpp_d", "hdf5_cpp_dd", "hdf5_cppd_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_cxx_library_debug names libhdf5_cpp_d hdf5d hdf5_cpp_d hdf5_cpp_dd hdf5_cppd_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_cpp", "hdf5_cpp", "hdf5_cpp_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_cxx_library_release names libhdf5_cpp hdf5_cpp hdf5_cpp_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_hl_cpp_d", "hdf5_hl_cppd", "hdf5_hl_cpp_d", "hdf5_hl_cpp_dd", "hdf5_hl_cppd_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_hl_cxx_library_debug names libhdf5_hl_cpp_d hdf5_hl_cppd hdf5_hl_cpp_d hdf5_hl_cpp_dd hdf5_hl_cppd_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["libhdf5_hl_cpp", "hdf5_hl_cpp", "hdf5_hl_cpp_i"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_hl_cxx_library_release names libhdf5_hl_cpp hdf5_hl_cpp hdf5_hl_cpp_i\n        paths\n        $env{hdf5_home}/lib\n        $env{externlibs}/hdf5/lib\n      )"}, {"filenames": ["hdf5", "hdf5"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_library names hdf5 hdf5\n    paths\n    $env{hdf5_home}/lib\n    $env{externlibs}/hdf5/lib\n    no_default_path\n  )"}, {"filenames": ["hdf5", "hdf5"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindHDF5.cmake", "content": "find_library(hdf5_library names hdf5 hdf5)"}]}, {"deps": [{"depname": "sdl", "version": null, "version_op": null, "unified_name": "sdl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindSDL.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl", "sdl-1.1", "sdl2"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL.cmake", "content": "find_library(sdl_library_temp \n  names sdl sdl-1.1 sdl2\n  hints\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  $env{externlibs}/sdl\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdld", "sdld-1.1", "sdl2d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL.cmake", "content": "find_library(sdl_library_debug_temp \n  names sdld sdld-1.1 sdl2d\n  hints\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  $env{externlibs}/sdl\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdlmain", "sdlmain-1.1"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL.cmake", "content": "find_library(sdlmain_library \n      names sdlmain sdlmain-1.1\n      hints\n      $env{sdldir}\n      path_suffixes lib64 lib\n      paths\n      $env{externlibs}/sdl\n      /sw\n      /opt/local\n      /opt/csw\n      /opt\n    )"}]}, {"deps": [{"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["curld", "libcurld", "curllibd", "libcurld_imp", "libcurl-d_imp", "curllibd_static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "content": "find_library(curl_library_debug names curld libcurld curllibd libcurld_imp libcurl-d_imp curllibd_static\n        paths\n        $env{curl_home}/lib\n        $env{externlibs}/curl/lib\n      )"}, {"filenames": ["curl", "libcurl", "curllib", "libcurl_imp", "curllib_static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "content": "find_library(curl_library_release names curl libcurl curllib libcurl_imp curllib_static\n        paths\n        $env{curl_home}/lib\n        $env{externlibs}/curl/lib\n      )"}, {"filenames": ["curld", "libcurld", "curllibd", "libcurld_imp", "libcurl-d_imp", "curllibd_static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "content": "find_library(curl_library_debug names curld libcurld curllibd libcurld_imp libcurl-d_imp curllibd_static\n        paths\n        $env{curl_home}/lib\n        $env{externlibs}/curl/lib\n      )"}, {"filenames": ["curl", "libcurl", "curllib", "libcurl_imp", "curllib_static"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "content": "find_library(curl_library_release names curl libcurl curllib libcurl_imp curllib_static\n        paths\n        $env{curl_home}/lib\n        $env{externlibs}/curl/lib\n      )"}, {"filenames": ["${curl_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindCURL.cmake", "content": "find_library(curl_library names ${curl_names}\n    paths\n    $env{curl_home}/lib\n    $env{externlibs}/curl/lib\n    no_default_path\n  )"}]}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl", "sdl-1.1", "sdl2"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL2.cmake", "content": "find_library(sdl2_library_temp \n  names sdl sdl-1.1 sdl2\n  hints\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  $env{externlibs}/sdl\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdld", "sdld-1.1", "sdl2d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL2.cmake", "content": "find_library(sdl2_library_debug_temp \n  names sdld sdld-1.1 sdl2d\n  hints\n  $env{sdldir}\n  path_suffixes lib64 lib\n  paths\n  $env{externlibs}/sdl\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["sdlmain", "sdlmain-1.1"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindSDL2.cmake", "content": "find_library(sdlmain_library \n      names sdlmain sdlmain-1.1\n      hints\n      $env{sdldir}\n      path_suffixes lib64 lib\n      paths\n      $env{externlibs}/sdl\n      /sw\n      /opt/local\n      /opt/csw\n      /opt\n    )"}]}, {"deps": [{"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindPythonLibs.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python${_current_version_no_dots}_d", "python"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPythonLibs.cmake", "content": "find_library(python_debug_library\n      names python${_current_version_no_dots}_d python\n      paths\n      \"$env{python_home}\"\n      \"$env{externlibs}/python\"\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs/debug\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n      path_suffixes lib libs \n    )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPythonLibs.cmake", "content": "find_library(python_library\n    names python${_current_version_no_dots} python${_current_version}\n    paths\n      \"$env{python_home}\"\n      \"$env{externlibs}/python\"\n      [hkey_local_machine\\\\software\\\\python\\\\pythoncore\\\\${_current_version}\\\\installpath]/libs\n    path_suffixes lib libs \n    \n    no_system_environment_path\n  )"}, {"filenames": ["python${_current_version_no_dots}", "python${_current_version}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPythonLibs.cmake", "content": "find_library(python_library\n    names python${_current_version_no_dots} python${_current_version}\n    \n    no_system_environment_path\n    \n    path_suffixes python${_current_version}/config\n  )"}]}, {"deps": [{"depname": "glut", "version": null, "version_op": null, "unified_name": "glut", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glutd", "glut32d", "freeglutd"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_library_debug names glutd glut32d freeglutd\n    paths\n    $env{externlibs}/glut/lib\n    ${opengl_library_dir}\n    ${glut_root_path}/debug\n    )"}, {"filenames": ["glut", "glut32", "freeglut"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_library_debug names glut glut32 freeglut\n           paths $env{externlibs}/glut/debug/lib\n           ${opengl_library_dir}/debug/lib\n           ${glut_root_path}/debug/lib\n           )"}, {"filenames": ["glut", "glut32", "freeglut"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_library_release names glut glut32 freeglut\n    paths\n    ${opengl_library_dir}\n    $env{externlibs}/glut/lib\n    ${glut_root_path}/release\n    )"}, {"filenames": ["glut"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_glut_library glut\n      /usr/openwin/lib\n      )"}, {"filenames": ["xi"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_xi_library xi\n      /usr/openwin/lib\n      )"}, {"filenames": ["xmu"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_xmu_library xmu\n      /usr/openwin/lib\n      )"}, {"filenames": ["xxf86vm"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGLUT.cmake", "content": "find_library( glut_xxf86vm_library xxf86vm\n      /usr/openwin/lib\n      )"}]}, {"deps": [{"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindOpenAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${openal_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenAL.cmake", "content": "find_library(openal_library names ${openal_names}\n  paths\n  $env{openal_home}/lib\n  $env{externlibs}/openal/lib\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  [hkey_local_machine\\\\software\\\\creative\\ labs\\\\openal\\ 1.1\\ software\\ development\\ kit\\\\1.00.0000;installdir]\n  path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n  doc \"openal - library\"\n)"}, {"filenames": ["${openal_dbg_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenAL.cmake", "content": "find_library(openal_library_debug names ${openal_dbg_names}\n    paths\n    $env{openal_home}/lib\n    $env{externlibs}/openal/lib\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local\n    /usr\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    [hkey_local_machine\\\\software\\\\creative\\ labs\\\\openal\\ 1.1\\ software\\ development\\ kit\\\\1.00.0000;installdir]\n    path_suffixes lib64 lib libs64 libs libs/win32 libs/win64\n    doc \"openal - library (debug)\"\n  )"}]}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ssleay32mtd", "ssleay32d_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_debug names ssleay32mtd ssleay32d_mt\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["ssleay32mt", "ssleay32_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_release names ssleay32mt ssleay32_mt\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["libeay32mtd", "libeay32d_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_debug names libeay32mtd libeay32d_mt\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["libeay32mt", "libeay32_mt"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_release names libeay32mt libeay32_mt\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["ssleay32mdd", "ssleay32d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_debug names ssleay32mdd ssleay32d\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["ssleay32md", "ssleay32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_release names ssleay32md ssleay32\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["libeay32mdd", "libeay32d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_debug names libeay32mdd libeay32d\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["libeay32md", "libeay32"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_release names libeay32md libeay32\n        paths\n        $env{openssl_home}/lib\n        $env{externlibs}/openssl_static/lib\n        $env{externlibs}/openssl/lib\n      )"}, {"filenames": ["ssl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_library names ssl\n    paths\n    $env{openssl_home}/lib\n    $env{externlibs}/openssl/lib\n    no_default_path\n  )"}, {"filenames": ["ssl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_ssl_library names ssl)"}, {"filenames": ["crypto"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_library names crypto\n    paths\n    $env{openssl_home}/lib\n    $env{externlibs}/openssl/lib\n    no_default_path\n  )"}, {"filenames": ["crypto"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindOpenSSL.cmake", "content": "find_library(openssl_crypto_library names crypto)"}]}, {"deps": [{"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindPthreads.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthreadvc2d.lib", "pthreadsvc2d.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPthreads.cmake", "content": "find_library(pthreads_library_debug names pthreadvc2d.lib pthreadsvc2d.lib\n        paths\n        $env{pthreads_home}/lib\n        $env{externlibs}/pthreads/lib\n      )"}, {"filenames": ["pthreadvc2.lib", "pthreadsvc2.lib"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPthreads.cmake", "content": "find_library(pthreads_library_release names pthreadvc2.lib pthreadsvc2.lib\n        paths\n        $env{pthreads_home}/lib\n        $env{externlibs}/pthreads/lib\n      )"}, {"filenames": ["${pthreads_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPthreads.cmake", "content": "find_library(pthreads_library names ${pthreads_names}\n    paths\n    $env{pthreads_home}/lib\n    $env{externlibs}/pthread/lib\n    $env{externlibs}/pthreads/lib\n    /usr/lib\n    /usr/lib32\n    /usr/lib64\n    /usr/local/lib\n    /opt/local/lib\n    doc \"the pthread library\"\n  )"}, {"filenames": ["${pthreads_names}"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindPthreads.cmake", "content": "find_library(pthreads_library names ${pthreads_names})"}]}, {"deps": [{"depname": "flex", "version": null, "version_op": null, "unified_name": "flex", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindFLEX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fl"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindFLEX.cmake", "content": "find_library(fl_library names fl\n  doc \"path to the fl library\")"}, {"filenames": ["flex", "win_flex"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindFLEX.cmake", "content": "find_program(flex_executable names flex win_flex paths\n    $env{flex_home}\n    $env{externlibs}/flex \"path to the flex executable\")"}]}, {"deps": [{"depname": "hdf5generated", "version": null, "version_op": null, "unified_name": "hdf5generated", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindHDF5Generated.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/windows/FindGDAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_gdal_lib}", "gdal", "gdal_i", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGDAL.cmake", "content": "find_library(gdal_library \n  names ${_gdal_lib} gdal gdal_i gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  hints\n     $env{gdal_dir}\n     $env{gdal_root}\n     ${_gdal_libpath}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/gdal\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n)"}, {"filenames": ["gdald", "gdal_i_d", "gdal_id", "gdald_i", "gdal1.5.0d", "gdal1.4.0d", "gdal1.3.2d"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGDAL.cmake", "content": "find_library(gdal_library_debug names gdald gdal_i_d gdal_id gdald_i gdal1.5.0d gdal1.4.0d gdal1.3.2d\n  hints\n     $env{gdal_dir}\n     $env{gdal_root}\n     ${_gdal_libpath}\n  path_suffixes lib64 lib\n  paths\n    $env{externlibs}/gdal\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    doc \"gdal - library (debug)\"\n  )"}, {"filenames": ["gdal-config"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/windows/FindGDAL.cmake", "content": "find_program(gdal_config gdal-config\n        hints\n          $env{gdal_dir}\n          $env{gdal_root}\n        path_suffixes bin\n        paths\n            /sw \n            /opt/local \n            /opt/csw \n            /opt\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/mingw/FindPackageHandleStandardArgs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "hlrs-vis@@covise/cmake/mingw/FindSWIG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["swig2.0", "swig"], "version": "", "fromfile": "hlrs-vis@@covise/cmake/mingw/FindSWIG.cmake", "content": "find_program(swig_executable names swig2.0 swig)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise required)", "confidence": "High"}, {"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise components gpu required)", "confidence": "High"}, {"depname": "gsoap", "version": null, "version_op": null, "unified_name": "gsoap", "extractor_type": "cmake", "context": "find_package(gsoap)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "xercesc", "version": null, "version_op": null, "unified_name": "xercesc", "extractor_type": "cmake", "context": "find_package(xercesc required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "cg", "version": null, "version_op": null, "unified_name": "cg", "extractor_type": "cmake", "context": "find_package(cg)", "confidence": "High"}, {"depname": "artoolkit", "version": null, "version_op": null, "unified_name": "artoolkit", "extractor_type": "cmake", "context": "find_package(artoolkit)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "jpegturbo", "version": null, "version_op": null, "unified_name": "jpegturbo", "extractor_type": "cmake", "context": "find_package(jpegturbo)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "vrpn", "version": null, "version_op": null, "unified_name": "vrpn", "extractor_type": "cmake", "context": "find_package(vrpn)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 components osgdb osgutil osgviewer\n   osgparticle osgtext osgsim osgga osgfx osgterrain osgshadow required)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl quiet)", "confidence": "High"}, {"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package(bison)", "confidence": "High"}, {"depname": "opencover", "version": null, "version_op": null, "unified_name": "opencover", "extractor_type": "cmake", "context": "project(opencover c cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["applicationservices"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/CMakeLists.txt", "content": "find_library(app_services_library applicationservices)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "find_package(alsa quiet)", "confidence": "High"}, {"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "find_package(openal quiet)", "confidence": "High"}, {"depname": "alut", "version": null, "version_op": null, "unified_name": "alut", "extractor_type": "cmake", "context": "find_package(alut)", "confidence": "High"}, {"depname": "audiofile", "version": null, "version_op": null, "unified_name": "audiofile", "extractor_type": "cmake", "context": "find_package(audiofile quiet)", "confidence": "High"}, {"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package(bison)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sur40cover", "version": null, "version_op": null, "unified_name": "sur40cover", "extractor_type": "cmake", "context": "project(sur40cover csharp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "opencover", "version": null, "version_op": null, "unified_name": "opencover", "extractor_type": "cmake", "context": "project(opencover cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}, {"depname": "drivingsim", "version": null, "version_op": null, "unified_name": "drivingsim", "extractor_type": "cmake", "context": "project(drivingsim c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}, {"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}, {"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}, {"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}, {"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpp0x", "version": null, "version_op": null, "unified_name": "cpp0x", "extractor_type": "cmake", "context": "project (cpp0x)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb)", "confidence": "High"}, {"depname": "benchmarks", "version": null, "version_op": null, "unified_name": "benchmarks", "extractor_type": "cmake", "context": "project (benchmarks)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpp0x_examples", "version": null, "version_op": null, "unified_name": "cpp0x_examples", "extractor_type": "cmake", "context": "project (cpp0x_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph required osg osgviewer osgga)", "confidence": "High"}, {"depname": "closedloopkinematics", "version": null, "version_op": null, "unified_name": "closedloopkinematics", "extractor_type": "cmake", "context": "project (closedloopkinematics)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "montecarlopi", "version": null, "version_op": null, "unified_name": "montecarlopi", "extractor_type": "cmake", "context": "project (montecarlopi)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph required osg osgviewer osgga osgdb)", "confidence": "High"}, {"depname": "cardynamics", "version": null, "version_op": null, "unified_name": "cardynamics", "extractor_type": "cmake", "context": "project (cardynamics)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph required osg osgviewer osgga)", "confidence": "High"}, {"depname": "elasticcoupling", "version": null, "version_op": null, "unified_name": "elasticcoupling", "extractor_type": "cmake", "context": "project (elasticcoupling)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph required osg osgviewer osgga osgdb)", "confidence": "High"}, {"depname": "cardynamicscga", "version": null, "version_op": null, "unified_name": "cardynamicscga", "extractor_type": "cmake", "context": "project (cardynamicscga)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "tests", "version": null, "version_op": null, "unified_name": "tests", "extractor_type": "cmake", "context": "project (tests)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpp", "version": null, "version_op": null, "unified_name": "cpp", "extractor_type": "cmake", "context": "project (cpp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "benchmarks", "version": null, "version_op": null, "unified_name": "benchmarks", "extractor_type": "cmake", "context": "project (benchmarks)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpp_examples", "version": null, "version_op": null, "unified_name": "cpp_examples", "extractor_type": "cmake", "context": "project (cpp_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "montecarlopi", "version": null, "version_op": null, "unified_name": "montecarlopi", "extractor_type": "cmake", "context": "project (montecarlopi)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph required osg osgviewer)", "confidence": "High"}, {"depname": "elasticcoupling", "version": null, "version_op": null, "unified_name": "elasticcoupling", "extractor_type": "cmake", "context": "project (elasticcoupling)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "rotationcuda", "version": null, "version_op": null, "unified_name": "rotationcuda", "extractor_type": "cmake", "context": "project (rotationcuda)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "tests", "version": null, "version_op": null, "unified_name": "tests", "extractor_type": "cmake", "context": "project (tests)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}, {"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "hidapi", "version": null, "version_op": null, "unified_name": "hidapi", "extractor_type": "cmake", "context": "find_package(hidapi)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "D:\\Downloads\\SixenseSDK\\lib\\win32\\debug_dll\\sixensed", "version": null, "version_op": null, "unified_name": "d:\\downloads\\sixensesdk\\lib\\win32\\debug_dll\\sixensed", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "D:\\Downloads\\SixenseSDK\\lib\\win32\\debug_dll\\sixense_utilsd", "version": null, "version_op": null, "unified_name": "d:\\downloads\\sixensesdk\\lib\\win32\\debug_dll\\sixense_utilsd", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "D:\\Downloads\\SixenseSDK\\lib\\x64\\debug_dll\\sixensed_x64", "version": null, "version_op": null, "unified_name": "d:\\downloads\\sixensesdk\\lib\\x64\\debug_dll\\sixensed_x64", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "D:\\Downloads\\SixenseSDK\\lib\\win32\\release_dll\\sixense", "version": null, "version_op": null, "unified_name": "d:\\downloads\\sixensesdk\\lib\\win32\\release_dll\\sixense", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "D:\\Downloads\\SixenseSDK\\lib\\win32\\release_dll\\sixense_utils", "version": null, "version_op": null, "unified_name": "d:\\downloads\\sixensesdk\\lib\\win32\\release_dll\\sixense_utils", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/cover/input/dev/vrc/server/hydra/testhydra.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "opencover", "version": null, "version_op": null, "unified_name": "opencover", "extractor_type": "cmake", "context": "project(opencover cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "opencover", "version": null, "version_op": null, "unified_name": "opencover", "extractor_type": "cmake", "context": "project(opencover cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "openvrui", "version": null, "version_op": null, "unified_name": "openvrui", "extractor_type": "cmake", "context": "project(openvrui cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "opencover", "version": null, "version_op": null, "unified_name": "opencover", "extractor_type": "cmake", "context": "project(opencover cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cover", "version": null, "version_op": null, "unified_name": "cover", "extractor_type": "cmake", "context": "find_package(cover required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd\n  names cutild cutil32d\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil debug library\"\n  no_default_path\n )"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd names cutild cutil32d doc \"location of cutil library\")"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKitPlus/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd\n  names cutild cutil32d\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil debug library\"\n  no_default_path\n )"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd names cutild cutil32d doc \"location of cutil library\")"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARUCO/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd\n  names cutild cutil32d\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil debug library\"\n  no_default_path\n )"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd names cutild cutil32d doc \"location of cutil library\")"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ALVAR/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd\n  names cutild cutil32d\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil debug library\"\n  no_default_path\n )"}, {"filenames": ["cutild", "cutil32d"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_libraryd names cutild cutil32d doc \"location of cutil library\")"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_library\n  names cutil cutil32\n  paths ${cuda_sdk_search_path}\n  \n  path_suffixes \"common/lib\" \"common/lib/x64\" \"lib\" \"c/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n )"}, {"filenames": ["cutil", "cutil32"], "version": "", "fromfile": "hlrs-vis@@covise/src/OpenCOVER/plugins/markertracking/ARToolKit/CMakeLists.txt", "content": "find_library(cuda_cut_library names cutil cutil32 doc \"location of cutil library\")"}]}, {"deps": [], "type": "make"}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "osgcal", "version": null, "version_op": null, "unified_name": "osgcal", "extractor_type": "cmake", "context": "find_package(osgcal)", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "find_package(cal3d)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}, {"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 components concurrent  xml xmlpatterns required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}, {"depname": "fftw", "version": null, "version_op": null, "unified_name": "fftw", "extractor_type": "cmake", "context": "find_package(fftw)", "confidence": "High"}, {"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}, {"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgterrain)", "confidence": "High"}, {"depname": "osgterrain", "version": null, "version_op": null, "unified_name": "osgterrain", "extractor_type": "cmake", "context": "find_package(osgterrain)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cover", "version": null, "version_op": null, "unified_name": "cover", "extractor_type": "cmake", "context": "find_package(cover required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "sdl", "version": null, "version_op": null, "unified_name": "sdl", "extractor_type": "cmake", "context": "find_package(sdl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "wmfsdk", "version": null, "version_op": null, "unified_name": "wmfsdk", "extractor_type": "cmake", "context": "find_package(wmfsdk)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "find_package(nvml)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "pythonlibs", "version": null, "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package(pythonlibs)", "confidence": "High"}, {"depname": "pythonlibs_find", "version": "3.0", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "set(pythonlibs_find_version 3.0)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost components timer required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "faro", "version": null, "version_op": null, "unified_name": "faro", "extractor_type": "cmake", "context": "find_package(faro)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "find_package(osmesa required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "sdl", "version": null, "version_op": null, "unified_name": "sdl", "extractor_type": "cmake", "context": "find_package(sdl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "openscenegraph", "version": "3.2.0", "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package(openscenegraph 3.2.0 quiet components osgdb osgutil osgviewer\n   osgparticle osgtext osgsim osgga osgfx osgterrain osgshadow osgwidget)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "lapack", "version": null, "version_op": null, "unified_name": "lapack", "extractor_type": "cmake", "context": "find_package(lapack)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "levmar", "version": null, "version_op": null, "unified_name": "levmar", "extractor_type": "cmake", "context": "project(levmar)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cudpp", "version": null, "version_op": null, "unified_name": "cudpp", "extractor_type": "cmake", "context": "find_package(cudpp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "revitplugin", "version": null, "version_op": null, "unified_name": "revitplugin", "extractor_type": "cmake", "context": "project(revitplugin csharp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf)", "confidence": "High"}, {"depname": "zeromq", "version": null, "version_op": null, "unified_name": "zeromq", "extractor_type": "cmake", "context": "find_package(zeromq)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "find_package(v8)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cudpp", "version": null, "version_op": null, "unified_name": "cudpp", "extractor_type": "cmake", "context": "find_package(cudpp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cudpp", "version": null, "version_op": null, "unified_name": "cudpp", "extractor_type": "cmake", "context": "find_package(cudpp)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cudpp", "version": null, "version_op": null, "unified_name": "cudpp", "extractor_type": "cmake", "context": "find_package(cudpp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "C:\\src\\covise\\zebu\\lib\\coOpenCOVER", "version": null, "version_op": null, "unified_name": "c:\\src\\covise\\zebu\\lib\\coopencover", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/MfcShell/MFCApplication2/MFCApplication2.vcxproj", "confidence": "High"}, {"depname": "C:\\src\\covise\\zebu\\lib\\coConfig", "version": null, "version_op": null, "unified_name": "c:\\src\\covise\\zebu\\lib\\coconfig", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/OpenCOVER/MfcShell/MFCApplication2/MFCApplication2.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "spbgpu", "version": null, "version_op": null, "unified_name": "spbgpu", "extractor_type": "cmake", "context": "project(spbgpu cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cheese", "version": null, "version_op": null, "unified_name": "cheese", "extractor_type": "cmake", "context": "project(cheese cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "webgl", "version": null, "version_op": null, "unified_name": "webgl", "extractor_type": "cmake", "context": "project(webgl cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}, {"depname": "motif", "version": null, "version_op": null, "unified_name": "motif", "extractor_type": "cmake", "context": "find_package(motif)", "confidence": "High"}, {"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package(bison)", "confidence": "High"}, {"depname": "plot", "version": null, "version_op": null, "unified_name": "plot", "extractor_type": "cmake", "context": "project(plot cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ite", "version": null, "version_op": null, "unified_name": "ite", "extractor_type": "cmake", "context": "project(ite cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "general", "version": null, "version_op": null, "unified_name": "general", "extractor_type": "cmake", "context": "project(general cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cfx", "version": null, "version_op": null, "unified_name": "cfx", "extractor_type": "cmake", "context": "find_package(cfx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "libarchive", "version": null, "version_op": null, "unified_name": "archive", "extractor_type": "cmake", "context": "find_package(libarchive)", "confidence": "High"}, {"depname": "libzip", "version": null, "version_op": null, "unified_name": "zip", "extractor_type": "cmake", "context": "find_package(libzip)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "sys", "version": null, "version_op": null, "unified_name": "sys", "extractor_type": "cmake", "context": "project(sys cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "hlrs-vis@@covise/src/sys/vrb/gui/CMakeLists.txt", "content": "find_library(rt rt)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "find_package(swig)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cover", "version": null, "version_op": null, "unified_name": "cover", "extractor_type": "cmake", "context": "find_package(cover required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "rtcptunnel", "version": null, "version_op": null, "unified_name": "rtcptunnel", "extractor_type": "cmake", "context": "    project(rtcptunnel)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "wiringPi", "version": null, "version_op": null, "unified_name": "wiringpi", "extractor_type": "make", "context": "hlrs-vis@@covise/src/tools/RPi_ergometer/Makefile:LDLIBS    = -lwiringPi -lwiringPiDev -lpthread -lm", "confidence": "High"}, {"depname": "wiringPiDev", "version": null, "version_op": null, "unified_name": "wiringpidev", "extractor_type": "make", "context": "hlrs-vis@@covise/src/tools/RPi_ergometer/Makefile:LDLIBS    = -lwiringPi -lwiringPiDev -lpthread -lm", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "make", "context": "hlrs-vis@@covise/src/tools/RPi_ergometer/Makefile:LDLIBS    = -lwiringPi -lwiringPiDev -lpthread -lm", "confidence": "High"}, {"depname": "m", "version": null, "version_op": null, "unified_name": "m", "extractor_type": "make", "context": "hlrs-vis@@covise/src/tools/RPi_ergometer/Makefile:LDLIBS    = -lwiringPi -lwiringPiDev -lpthread -lm", "confidence": "High"}], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "jpegturbo", "version": null, "version_op": null, "unified_name": "jpegturbo", "extractor_type": "cmake", "context": "find_package(jpegturbo)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "hlrs-vis@@covise/src/tools/as3dctrl/CMakeLists.txt", "content": "find_library(rt rt)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "hlrs-vis@@covise/src/tools/clean/CMakeLists.txt", "content": "find_library(rt rt)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "hlrs-vis@@covise/src/tools/f80ctrl/CMakeLists.txt", "content": "find_library(rt rt)"}]}, {"deps": [{"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "helpsys", "version": null, "version_op": null, "unified_name": "helpsys", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "helpsys", "version": null, "version_op": null, "unified_name": "helpsys", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "helpsys", "version": null, "version_op": null, "unified_name": "helpsys", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "cal3d_d", "version": null, "version_op": null, "unified_name": "cal3d_d", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "paramblk2", "version": null, "version_op": null, "unified_name": "paramblk2", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "comctl32", "version": null, "version_op": null, "unified_name": "comctl32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "version", "version": null, "version_op": null, "unified_name": "version", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxscrpt", "version": null, "version_op": null, "unified_name": "maxscrpt", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "bmm", "version": null, "version_op": null, "unified_name": "bmm", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "core", "version": null, "version_op": null, "unified_name": "core", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "geom", "version": null, "version_op": null, "unified_name": "geom", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "gfx", "version": null, "version_op": null, "unified_name": "gfx", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "maxutil", "version": null, "version_op": null, "unified_name": "maxutil", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "mesh", "version": null, "version_op": null, "unified_name": "mesh", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "wsock32", "version": null, "version_op": null, "unified_name": "wsock32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/vrmlexp/vrmlexp2010.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "3dsmax", "version": null, "version_op": null, "unified_name": "3dsmax", "extractor_type": "cmake", "context": "find_package(3dsmax)", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "find_package(cal3d)", "confidence": "High"}, {"depname": "openthreads", "version": null, "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "find_package(openthreads)", "confidence": "High"}, {"depname": "vrmlexp", "version": null, "version_op": null, "unified_name": "vrmlexp", "extractor_type": "cmake", "context": "project (vrmlexp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "revitplugin", "version": null, "version_op": null, "unified_name": "revitplugin", "extractor_type": "cmake", "context": "project(revitplugin csharp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "FULL-PACKAGE-NAME", "version": "VERSION", "version_op": null, "unified_name": "full-package-name", "extractor_type": "autoconf", "context": "AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "full-package-name", "version": "VERSION", "version_op": null, "unified_name": "full-package-name", "extractor_type": "autoconf", "context": "hlrs-vis@@covise/src/tools/bison++/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "ms"}, {"deps": [{"depname": "3dsmax", "version": null, "version_op": null, "unified_name": "3dsmax", "extractor_type": "cmake", "context": "find_package(3dsmax)", "confidence": "High"}, {"depname": "cal3d", "version": null, "version_op": null, "unified_name": "cal3d", "extractor_type": "cmake", "context": "find_package(cal3d)", "confidence": "High"}, {"depname": "vrmlexp", "version": null, "version_op": null, "unified_name": "vrmlexp", "extractor_type": "cmake", "context": "project (vrmlexp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "hlrs-vis@@covise/src/tools/samsungctrl/CMakeLists.txt", "content": "find_library(rt rt)"}]}, {"deps": [{"depname": "C:\\src\\covise\\src\\tools\\Cyberstick\\SPIUSB\\Hostinterface\\libusb\\lib\\msvc_x64\\libusb", "version": null, "version_op": null, "unified_name": "c:\\src\\covise\\src\\tools\\cyberstick\\spiusb\\hostinterface\\libusb\\lib\\msvc_x64\\libusb", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/Cyberstick/SPIUSB/Hostinterface/Hostinterface/Hostinterface.vcxproj", "confidence": "High"}, {"depname": "C:\\src\\covise\\src\\tools\\Cyberstick\\SPIUSB\\Hostinterface\\libusb\\lib\\msvc_x64\\libusb", "version": null, "version_op": null, "unified_name": "c:\\src\\covise\\src\\tools\\cyberstick\\spiusb\\hostinterface\\libusb\\lib\\msvc_x64\\libusb", "extractor_type": "ms", "context": "hlrs-vis@@covise/src/tools/Cyberstick/SPIUSB/Hostinterface/Hostinterface/Hostinterface.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "kernel", "version": null, "version_op": null, "unified_name": "kernel", "extractor_type": "cmake", "context": "project(kernel cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "covise", "version": null, "version_op": null, "unified_name": "covise", "extractor_type": "cmake", "context": "find_package(covise)", "confidence": "High"}, {"depname": "xercesc", "version": null, "version_op": null, "unified_name": "xercesc", "extractor_type": "cmake", "context": "find_package(xercesc required)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}, {"depname": "proj4", "version": null, "version_op": null, "unified_name": "proj4", "extractor_type": "cmake", "context": "find_package(proj4)", "confidence": "High"}, {"depname": "oddlot", "version": null, "version_op": null, "unified_name": "oddlot", "extractor_type": "cmake", "context": "project (oddlot)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "nlohmann_json", "version": null, "version_op": null, "unified_name": "nlohmann_json", "extractor_type": "cmake", "context": "find_package(nlohmann_json required)", "confidence": "High"}, {"depname": "configurevscodesettings", "version": null, "version_op": null, "unified_name": "configurevscodesettings", "extractor_type": "cmake", "context": "project(configurevscodesettings)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}