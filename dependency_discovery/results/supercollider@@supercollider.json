{"target": "supercollider@@supercollider", "extractors": [{"deps": [{"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "find_package(pthreads)", "confidence": "High"}, {"depname": "boost", "version": "1.50.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package( boost 1.50.0 components  thread system filesystem program_options regex test_exec_monitor )", "confidence": "High"}, {"depname": "yamlcpp", "version": null, "version_op": null, "unified_name": "yamlcpp", "extractor_type": "cmake", "context": "find_package(yamlcpp)", "confidence": "High"}, {"depname": "supercollider", "version": "${sc_version_major}.${sc_version_minor}.${sc_version_patch}", "version_op": null, "unified_name": "supercollider", "extractor_type": "cmake", "context": "project(supercollider version ${sc_version_major}.${sc_version_minor}.${sc_version_patch})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "supercollider@@supercollider/CMakeLists.txt", "content": "find_program(ccache_program ccache)"}, {"filenames": ["ccache"], "version": "", "fromfile": "supercollider@@supercollider/CMakeLists.txt", "content": "find_program(ccacheexectuable ccache)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(\n    qt5 ${required_qt_version}\n    components\n    ${qt_ide_components}\n    required\n)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["macdeployqt"], "version": "", "fromfile": "supercollider@@supercollider/editors/sc-ide/CMakeLists.txt", "content": "find_program(deploy_prog macdeployqt paths ${cmake_prefix_path} path_suffixes bin)"}, {"filenames": ["windeployqt"], "version": "", "fromfile": "supercollider@@supercollider/editors/sc-ide/CMakeLists.txt", "content": "find_program(deploy_prog windeployqt paths ${cmake_prefix_path})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": "5.7", "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 5.7 components ${qt_components} required)", "confidence": "High"}, {"depname": "qt5macextras", "version": null, "version_op": null, "unified_name": "qt5macextras", "extractor_type": "cmake", "context": "find_package(qt5macextras)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "required_qt", "version": "5.7", "version_op": null, "unified_name": "required_qt", "extractor_type": "cmake", "context": "set(required_qt_version 5.7)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw3f", "version": "3.3", "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "find_package(fftw3f 3.3)", "confidence": "High"}, {"depname": "portaudio", "version": null, "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "find_package(portaudio required)", "confidence": "High"}, {"depname": "sndfile", "version": null, "version_op": null, "unified_name": "sndfile", "extractor_type": "cmake", "context": "find_package(sndfile)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(jack required jack)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dl"], "version": "", "fromfile": "supercollider@@supercollider/server/supernova/CMakeLists.txt", "content": "find_library(dl names dl)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sndfile", "version": null, "version_op": null, "unified_name": "sndfile", "extractor_type": "cmake", "context": "find_package(sndfile)", "confidence": "High"}, {"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai required)", "confidence": "High"}, {"depname": "bela", "version": null, "version_op": null, "unified_name": "bela", "extractor_type": "cmake", "context": "find_package(bela required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw3f", "version": "3.3", "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "find_package(fftw3f 3.3)", "confidence": "High"}, {"depname": "portaudio", "version": null, "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "find_package(portaudio)", "confidence": "High"}, {"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "find_package(xenomai required)", "confidence": "High"}, {"depname": "bela", "version": null, "version_op": null, "unified_name": "bela", "extractor_type": "cmake", "context": "find_package(bela required)", "confidence": "High"}, {"depname": "avahi", "version": null, "version_op": null, "unified_name": "avahi", "extractor_type": "cmake", "context": "find_package(avahi)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(jack required jack)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dl"], "version": "", "fromfile": "supercollider@@supercollider/server/scsynth/CMakeLists.txt", "content": "find_library(dl names dl)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindFFTW3f.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fftw3f", "fftw3f-3", "libfftw3f", "libfftw3f-3"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindFFTW3f.cmake", "content": "find_library(\n    fftw3f_library\n    names fftw3f fftw3f-3 libfftw3f libfftw3f-3\n    hints $env{fftw3_dir}/lib\n      \"${cmake_source_dir}/../${cmake_library_architecture}/fftw\"\n      \"$env{programw6432}/fftw\"\n      \"$env{programfiles}/fftw\"\n    paths /usr/local/lib\n          /usr/lib\n)"}]}, {"deps": [{"depname": "xenomai", "version": null, "version_op": null, "unified_name": "xenomai", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindXenomai.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xeno-config"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindXenomai.cmake", "content": "find_program(xenomai_xeno_config\n        names\n            xeno-config\n        paths\n            ${_xenomai_includedir}\n            /usr/xenomai/bin\n            /usr/local/bin\n            /usr/bin\n    )"}]}, {"deps": [{"depname": "yamlcpp", "version": null, "version_op": null, "unified_name": "yamlcpp", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindYamlCpp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libyaml-cpp.a", "yaml-cpp"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindYamlCpp.cmake", "content": "find_library(yamlcpp_library\n             names libyaml-cpp.a yaml-cpp\n             path_suffixes lib64 lib\n             paths ~/library/frameworks\n                    /library/frameworks\n                    /usr/local\n                    /usr\n                    /sw\n                    /opt/local\n                    /opt/csw\n                    /opt\n                    ${yamlcpp_dir}/lib)"}]}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindReadline.cmake", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "    set(readline_version \"${readline_major_version}.${readline_minor_version}\")", "confidence": "Low"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "    set(readline_version \"(unknown)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["readline"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindReadline.cmake", "content": "find_library(readline_library names readline)"}, {"filenames": ["readline6", "readline5", "readline", "libreadline6", "libreadline5", "libreadline"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindReadline.cmake", "content": "find_library(readline_library\n        names readline6 readline5 readline libreadline6 libreadline5 libreadline\n        hints \"${cmake_source_dir}/../${cmake_library_architecture}/readline/lib\"\n          \"${cmake_source_dir}/../${cmake_library_architecture}/readline/bin\"\n          \"$env{programw6432}/gnuwin32/lib\"\n          \"$env{programw6432}/gnuwin32/bin\"\n          \"$env{programfiles}/gnuwin32/lib\"\n          \"$env{programfiles}/gnuwin32/bin\"\n    )"}]}, {"deps": [{"depname": "avahi", "version": null, "version_op": null, "unified_name": "avahi", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindAvahi.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["avahi-client"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindAvahi.cmake", "content": "find_library(avahi_library-client names avahi-client)"}]}, {"deps": [{"depname": "portaudio", "version": null, "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindPortaudio.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "portaudio", "version": "18", "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "    set(portaudio_version 18)", "confidence": "Low"}, {"depname": "portaudio", "version": "2.0", "version_op": "=", "unified_name": "portaudio", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(portaudio portaudio-2.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["portaudio"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindPortaudio.cmake", "content": "find_library(portaudio_library\n      names\n        portaudio\n      paths\n        /usr/lib\n        /usr/local/lib\n        /opt/local/lib\n        /sw/lib\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "icu", "version": null, "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindICU.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "icu_major", "version": "1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "        set(icu_major_version \"1\")", "confidence": "Low"}, {"depname": "icu_minor", "version": "1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "        set(icu_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "icu_patch", "version": "0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "        set(icu_patch_version \"0\")", "confidence": "Low"}, {"depname": "icu_major", "version": "1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "        set(icu_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "icu_full", "version": "1", "version_op": null, "unified_name": "icu_full", "extractor_type": "cmake", "context": "        set(_icu_full_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "icu_major", "version": "1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "icu_minor", "version": "2", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_minor_version \"${cmake_match_2}\")", "confidence": "Low"}, {"depname": "icu_patch", "version": "0", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_patch_version \"0\")", "confidence": "Low"}, {"depname": "icu_major", "version": "1", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "icu_minor", "version": "2", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_minor_version \"${cmake_match_2}\")", "confidence": "Low"}, {"depname": "icu_patch", "version": "3", "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "            set(icu_patch_version \"${cmake_match_3}\")", "confidence": "Low"}, {"depname": "icu", "version": null, "version_op": null, "unified_name": "icu", "extractor_type": "cmake", "context": "    set(icu_version \"${icu_major_version}.${icu_minor_version}.${icu_patch_version}\")", "confidence": "Low"}, {"depname": "\"icu-${_icu_component}\"", "version": null, "version_op": null, "unified_name": "\"icu-${_icu_component}\"", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_icu_private_var_ns \"icu-${_icu_component}\" quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_icu_possible_release_names}"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindICU.cmake", "content": "find_library(\n            _icu_lib_release_${_icu_component}\n            names ${_icu_possible_release_names}\n            hints ${_icu_root}\n            path_suffixes ${_icu_lib_suffixes}\n            doc \"release libraries for icu\"\n        )"}, {"filenames": ["${_icu_possible_debug_names}"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindICU.cmake", "content": "find_library(\n            _icu_lib_debug_${_icu_component}\n            names ${_icu_possible_debug_names}\n            hints ${_icu_root}\n            path_suffixes ${_icu_lib_suffixes}\n            doc \"debug libraries for icu\"\n        )"}, {"filenames": ["icu-config"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindICU.cmake", "content": "find_program(icu_config_executable icu-config hints ${_icu_root})"}]}, {"deps": [{"depname": "sndfile", "version": null, "version_op": null, "unified_name": "sndfile", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindSndfile.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libsndfile.dylib", "libsndfile.a"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindSndfile.cmake", "content": "find_library(sndfile_library names libsndfile.dylib libsndfile.a\n    hints /usr/local/opt/libsndfile/lib\n  )"}, {"filenames": ["sndfile", "sndfile-1", "libsndfile", "libsndfile-1"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindSndfile.cmake", "content": "find_library(sndfile_library\n    names sndfile sndfile-1 libsndfile libsndfile-1\n    hints\n      \"${cmake_source_dir}/../${cmake_library_architecture}/libsndfile/lib\"\n      \"${cmake_source_dir}/../${cmake_library_architecture}/libsndfile/bin\"\n      \"$env{programw6432}/mega-nerd/libsndfile/lib\"\n      \"$env{programw6432}/mega-nerd/libsndfile/bin\"\n      \"$env{programfiles}/mega-nerd/libsndfile/lib\"\n      \"$env{programfiles}/mega-nerd/libsndfile/bin\"\n      \"$env{programfiles\\(x86\\)}/libsndfile/lib\"\n      \"$env{programfiles\\(x86\\)}/libsndfile/bin\"\n      \"$env{programfiles}/libsndfile/lib\"\n      \"$env{programfiles}/libsndfile/bin\"\n    paths /usr/local/\n      /usr/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "bela", "version": null, "version_op": null, "unified_name": "bela", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindBela.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bela-config"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindBela.cmake", "content": "find_program(bela_config\n        names\n        bela-config\n        paths\n        /root/bela/resources/bin\n        $env{bela_root}/resources/bin\n        /usr/local/bin\n        /usr/bin\n        )"}]}, {"deps": [{"depname": "pthreads", "version": null, "version_op": null, "unified_name": "pthreads", "extractor_type": "cmake", "context": "supercollider@@supercollider/cmake_modules/FindPthreads.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pthread"], "version": "", "fromfile": "supercollider@@supercollider/cmake_modules/FindPthreads.cmake", "content": "find_library(pthreads_library names pthread\n    doc \"the portable threads library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "find_package(alsa)", "confidence": "High"}, {"depname": "readline", "version": "5.0", "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "find_package(readline 5.0)", "confidence": "High"}, {"depname": "sndfile", "version": null, "version_op": null, "unified_name": "sndfile", "extractor_type": "cmake", "context": "find_package(sndfile)", "confidence": "High"}, {"depname": "portaudio", "version": null, "version_op": null, "unified_name": "portaudio", "extractor_type": "cmake", "context": "find_package(portaudio)", "confidence": "High"}, {"depname": "abletonlink", "version": null, "version_op": null, "unified_name": "abletonlink", "extractor_type": "cmake", "context": "find_package(abletonlink names abletonlink ableton-link link required)", "confidence": "High"}, {"depname": "curses", "version": null, "version_op": null, "unified_name": "curses", "extractor_type": "cmake", "context": "find_package(curses required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["makensis"], "version": "", "fromfile": "supercollider@@supercollider/platform/windows/package.cmake", "content": "find_program(nsis_program makensis)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "testoscpack", "version": null, "version_op": null, "unified_name": "testoscpack", "extractor_type": "cmake", "context": "project(testoscpack)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}]}