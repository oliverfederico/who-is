{"target": "rbfx@@rbfx", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "rbfx", "version": null, "version_op": null, "unified_name": "rbfx", "extractor_type": "cmake", "context": "project (rbfx c cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["dotnet"], "version": "", "fromfile": "rbfx@@rbfx/CMakeLists.txt", "content": "find_program(dotnet dotnet)"}, {"filenames": ["clang-tidy"], "version": "", "fromfile": "rbfx@@rbfx/CMakeLists.txt", "content": "find_program(clang_tidy clang-tidy)"}]}, {"deps": [], "type": "ms"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set (cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Toolchains/IOS.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}]}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["x86_64-w64-mingw32-gcc-posix", "x86_64-w64-mingw32-gcc"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Toolchains/MinGW.cmake", "content": "find_program(cmake_c_compiler   names x86_64-w64-mingw32-gcc-posix x86_64-w64-mingw32-gcc)"}, {"filenames": ["x86_64-w64-mingw32-g++-posix", "x86_64-w64-mingw32-g++"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Toolchains/MinGW.cmake", "content": "find_program(cmake_cxx_compiler names x86_64-w64-mingw32-g++-posix x86_64-w64-mingw32-g++)"}]}, {"deps": [{"depname": "cmake_system", "version": "10.9", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 10.9)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set (cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "directx", "version": null, "version_op": null, "unified_name": "directx", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindDirectX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["d3dcompiler"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindDirectX.cmake", "content": "find_library (directx_d3dcompiler names d3dcompiler paths ${directx_lib_search_paths} doc \"directx d3dcompiler library\" cmake_find_root_path_both)"}, {"filenames": ["${name}"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindDirectX.cmake", "content": "find_library (directx_${upcase_name} names ${name} paths ${directx_lib_search_paths} doc \"directx ${base_name} library\" cmake_find_root_path_both)"}]}, {"deps": [{"depname": "videocore", "version": null, "version_op": null, "unified_name": "videocore", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindVideoCore.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bcm_host"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindVideoCore.cmake", "content": "find_library (videocore_libraries bcm_host paths ${videocore_lib_search_path} path_suffixes vc doc \"broadcom videocore bcm_host library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "esound", "version": null, "version_op": null, "unified_name": "esound", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindEsound.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["esd"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindEsound.cmake", "content": "find_library (esound_libraries names esd doc \"esound library\")"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/CCache.cmake", "content": "find_program(ccache ccache)"}]}, {"deps": [{"depname": "sndio", "version": null, "version_op": null, "unified_name": "sndio", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindSNDIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["roaraudio"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindSNDIO.cmake", "content": "find_library (sndio_libraries names roaraudio doc \"roaraudio library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["wayland-client"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_library (wayland_client names wayland-client doc \"wayland client library\")"}, {"filenames": ["wayland-cursor"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_library (wayland_cursor names wayland-cursor doc \"wayland compositor infrastructure - cursor library\")"}, {"filenames": ["wayland-egl"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_library (wayland_egl names wayland-egl doc \"wayland egl library\")"}, {"filenames": ["egl"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_library (egl names egl doc \"egl library\")"}, {"filenames": ["xkbcommon"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_library (xkb names xkbcommon doc \"xkb common library\")"}, {"filenames": ["wayland-scanner"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindWayland.cmake", "content": "find_program (wayland_scanner names wayland-scanner doc \"wayland scanner host tool\")"}]}, {"deps": [{"depname": "arts", "version": null, "version_op": null, "unified_name": "arts", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindaRts.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["artsc"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindaRts.cmake", "content": "find_library (arts_libraries names artsc doc \"arts library\")"}]}, {"deps": [{"depname": "nas", "version": null, "version_op": null, "unified_name": "nas", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindNAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["audio"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindNAS.cmake", "content": "find_library (nas_libraries names audio doc \"networkaudiosystem library\")"}]}, {"deps": [{"depname": "fusionsound", "version": null, "version_op": null, "unified_name": "fusionsound", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindFusionSound.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fusionsound"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindFusionSound.cmake", "content": "find_library (fusionsound_libraries names fusionsound doc \"fusionsound library\")"}]}, {"deps": [{"depname": "directfb", "version": null, "version_op": null, "unified_name": "directfb", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindDirectFB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["directfb"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindDirectFB.cmake", "content": "find_library (directfb_libraries names directfb doc \"directfb library\")"}]}, {"deps": [{"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindReadline.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["readline"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindReadline.cmake", "content": "find_library (readline_libraries names readline hints ${lib_hints} doc \"readline library\")"}]}, {"deps": [{"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindJack.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jack"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindJack.cmake", "content": "find_library (jack_libraries names jack doc \"jack library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pulseaudio", "version": null, "version_op": null, "unified_name": "pulseaudio", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindPulseAudio.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pulse-simple"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindPulseAudio.cmake", "content": "find_library (pulseaudio_libraries names pulse-simple doc \"pulseaudio library\")"}]}, {"deps": [{"depname": "oss", "version": null, "version_op": null, "unified_name": "oss", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindOSS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["osslib", "ossaudio"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindOSS.cmake", "content": "find_library (oss_libraries names osslib ossaudio doc \"oss library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "drm", "version": null, "version_op": null, "unified_name": "drm", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindDRM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["drm"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindDRM.cmake", "content": "find_library (drm_libraries names drm doc \"directrenderingmanager library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gbm", "version": null, "version_op": null, "unified_name": "gbm", "extractor_type": "cmake", "context": "rbfx@@rbfx/CMake/Modules/FindGBM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gbm"], "version": "", "fromfile": "rbfx@@rbfx/CMake/Modules/FindGBM.cmake", "content": "find_library (gbm_libraries names gbm doc \"genericbuffermanagement library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "directx", "version": null, "version_op": null, "unified_name": "directx", "extractor_type": "cmake", "context": "find_package(directx required d3d11)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "project(sdl2 c cxx)", "confidence": ""}, {"depname": "dbus", "version": "1", "version_op": "=", "unified_name": "dbus", "extractor_type": "cmake::pkg", "context": "pkg_search_module(dbus dbus-1 dbus)", "confidence": "High"}, {"depname": "dbus", "version": null, "version_op": null, "unified_name": "dbus", "extractor_type": "cmake::pkg", "context": "pkg_search_module(dbus dbus-1 dbus)", "confidence": "High"}, {"depname": "ibus", "version": "1.0", "version_op": "=", "unified_name": "ibus", "extractor_type": "cmake::pkg", "context": "pkg_search_module(ibus ibus-1.0 ibus)", "confidence": "High"}, {"depname": "ibus", "version": null, "version_op": null, "unified_name": "ibus", "extractor_type": "cmake::pkg", "context": "pkg_search_module(ibus ibus-1.0 ibus)", "confidence": "High"}, {"depname": "libinotify", "version": null, "version_op": null, "unified_name": "inotify", "extractor_type": "cmake::pkg", "context": "pkg_search_module(inotify libinotify)", "confidence": "High"}, {"depname": "libunwind", "version": null, "version_op": null, "unified_name": "unwind", "extractor_type": "cmake::pkg", "context": "pkg_search_module(unwind libunwind)", "confidence": "High"}, {"depname": "libunwind-generic", "version": null, "version_op": null, "unified_name": "unwind-generic", "extractor_type": "cmake::pkg", "context": "pkg_search_module(unwind_generic libunwind-generic)", "confidence": "High"}, {"depname": "m", "version": null, "version_op": null, "unified_name": "m", "extractor_type": "cmake", "context": "check_library_exists(m pow \"\" have_libm)", "confidence": "High"}, {"depname": "iconv", "version": null, "version_op": null, "unified_name": "iconv", "extractor_type": "cmake", "context": "check_library_exists(iconv iconv_open \"\" have_libiconv)", "confidence": "High"}, {"depname": "c", "version": null, "version_op": null, "unified_name": "c", "extractor_type": "cmake", "context": "check_library_exists(c iconv_open \"\" have_builtin_iconv)", "confidence": "High"}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists(rt clock_gettime \"\" found_clock_gettime)", "confidence": "High"}, {"depname": "c", "version": null, "version_op": null, "unified_name": "c", "extractor_type": "cmake", "context": "check_library_exists(c clock_gettime \"\" found_clock_gettime)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gamecontroller"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/CMakeLists.txt", "content": "find_library(gamecontroller gamecontroller)"}, {"filenames": ["corehaptics"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/CMakeLists.txt", "content": "find_library(corehaptics corehaptics)"}, {"filenames": ["windres"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/CMakeLists.txt", "content": "find_program(windres windres)"}]}, {"deps": [{"depname": "samplerate", "version": null, "version_op": null, "unified_name": "samplerate", "extractor_type": "cmake", "context": "find_package(samplerate quiet)", "confidence": "High"}, {"depname": "libpipewire-0.3", "version": "0.3.20", "version_op": ">=", "unified_name": "pipewire", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_pipewire libpipewire-0.3>=0.3.20)", "confidence": "High"}, {"depname": "libpulse-simple", "version": null, "version_op": null, "unified_name": "pulse-simple", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_pulseaudio libpulse-simple)", "confidence": "High"}, {"depname": "jack", "version": null, "version_op": null, "unified_name": "jack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_jack jack)", "confidence": "High"}, {"depname": "esound", "version": null, "version_op": null, "unified_name": "esound", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_esd esound)", "confidence": "High"}, {"depname": "fusionsound", "version": "1.0.0", "version_op": ">=", "unified_name": "fusionsound", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_fusionsound fusionsound>=1.0.0)", "confidence": "High"}, {"depname": "\"wayland-client", "version": "1.18\"", "version_op": ">=", "unified_name": "\"wayland-client", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland \"wayland-client>=1.18\" wayland-egl wayland-cursor egl \"xkbcommon>=0.5.0\")", "confidence": "High"}, {"depname": "wayland-egl", "version": null, "version_op": null, "unified_name": "wayland-egl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland \"wayland-client>=1.18\" wayland-egl wayland-cursor egl \"xkbcommon>=0.5.0\")", "confidence": "High"}, {"depname": "wayland-cursor", "version": null, "version_op": null, "unified_name": "wayland-cursor", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland \"wayland-client>=1.18\" wayland-egl wayland-cursor egl \"xkbcommon>=0.5.0\")", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland \"wayland-client>=1.18\" wayland-egl wayland-cursor egl \"xkbcommon>=0.5.0\")", "confidence": "High"}, {"depname": "\"xkbcommon", "version": "0.5.0\"", "version_op": ">=", "unified_name": "\"xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland \"wayland-client>=1.18\" wayland-egl wayland-cursor egl \"xkbcommon>=0.5.0\")", "confidence": "High"}, {"depname": "libdecor", "version": "0", "version_op": "=", "unified_name": "decor", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libdecor libdecor-0)", "confidence": "High"}, {"depname": "directfb", "version": "1.0.0", "version_op": ">=", "unified_name": "directfb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_directfb directfb>=1.0.0)", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(egl egl)", "confidence": "High"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libusb libusb-1.0)", "confidence": "High"}, {"depname": "bcm_host", "version": null, "version_op": null, "unified_name": "bcm_host", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(video_rpi bcm_host brcmegl)", "confidence": "High"}, {"depname": "brcmegl", "version": null, "version_op": null, "unified_name": "brcmegl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(video_rpi bcm_host brcmegl)", "confidence": "High"}, {"depname": "libdrm", "version": null, "version_op": null, "unified_name": "drm", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(kmsdrm libdrm gbm egl)", "confidence": "High"}, {"depname": "gbm", "version": null, "version_op": null, "unified_name": "gbm", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(kmsdrm libdrm gbm egl)", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(kmsdrm libdrm gbm egl)", "confidence": "High"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists(dl dlopen \"\" dlopen_lib)", "confidence": "High"}, {"depname": "asound", "version": null, "version_op": null, "unified_name": "asound", "extractor_type": "cmake", "context": "check_library_exists(asound snd_pcm_recover \"\" have_libasound)", "confidence": "High"}, {"depname": "ipc", "version": null, "version_op": null, "unified_name": "ipc", "extractor_type": "cmake", "context": "check_library_exists(ipc shmat \"\" have_shmat)", "confidence": "High"}, {"depname": "usbhid", "version": null, "version_op": null, "unified_name": "usbhid", "extractor_type": "cmake", "context": "check_library_exists(usbhid hid_init \"\" libusbhid)", "confidence": "High"}, {"depname": "usb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "cmake", "context": "check_library_exists(usb hid_init \"\" libusb)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_lib}"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_library(${_lname}_lib ${_lib})"}, {"filenames": ["audio"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_library(d_nas_lib audio)"}, {"filenames": ["sndio"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_library(d_sndio_lib sndio)"}, {"filenames": ["vdk"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_library(vivante_vdk_library vdk required)"}, {"filenames": ["arts-config"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_program(arts_config arts-config)"}, {"filenames": ["wayland-scanner"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SDL/cmake/sdlchecks.cmake", "content": "find_program(wayland_scanner names wayland-scanner required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required config components sdl2)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required config components sdl2main)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required config components sdl2-static)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required config components sdl2main)", "confidence": "High"}, {"depname": "sdl_test", "version": null, "version_op": null, "unified_name": "sdl_test", "extractor_type": "cmake", "context": "project(sdl_test languages c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "hidapi", "version": "VERSION_STRING", "version_op": null, "unified_name": "hidapi", "extractor_type": "autoconf", "context": "AC_INIT([hidapi],[VERSION_STRING],[alan@signal11.us])", "confidence": ""}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/SDL/src/hidapi/configure.ac", "confidence": "High"}, {"depname": "usb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/SDL/src/hidapi/configure.ac", "confidence": "High"}, {"depname": "iconv", "version": null, "version_op": null, "unified_name": "iconv", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/SDL/src/hidapi/configure.ac", "confidence": "High"}, {"depname": "usb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/SDL/src/hidapi/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "enkits", "version": null, "version_op": null, "unified_name": "enkits", "extractor_type": "cmake", "context": "project(enkits)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "embree3", "version": null, "version_op": null, "unified_name": "embree3", "extractor_type": "cmake", "context": "project(embree3)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "package", "version": null, "version_op": null, "unified_name": "package", "extractor_type": "cmake", "context": "\nset(package_version @embree_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ispc", "version": "1", "version_op": null, "unified_name": "ispc", "extractor_type": "cmake", "context": "set(ispc_version ${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["ispc"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/ispc.cmake", "content": "find_program(embree_ispc_executable ispc paths ${ispc_dir_hint} doc \"path to the ispc executable.\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindOpenImageIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openimageio"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindOpenImageIO.cmake", "content": "find_library(openimageio_library openimageio ${openimageio_hints} ${openimageio_paths})"}]}, {"deps": [{"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindPNG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["png"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindPNG.cmake", "content": "find_library( png_libraries names png )"}]}, {"deps": [{"depname": "embree_config", "version": null, "version_op": null, "unified_name": "embree_config", "extractor_type": "cmake", "context": "  set(embree_config_version ${embree_version})", "confidence": "Low"}, {"depname": "embree_config", "version": null, "version_op": null, "unified_name": "embree_config", "extractor_type": "cmake", "context": "  set(embree_config_version ${embree_version_major})", "confidence": "Low"}, {"depname": "cpack_osx_package", "version": "10.7", "version_op": null, "unified_name": "cpack_osx_package", "extractor_type": "cmake", "context": "    set(cpack_osx_package_version 10.7)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["valgrind"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/test.cmake", "content": "find_program( embree_memorycheck_command valgrind )"}]}, {"deps": [{"depname": "embree", "version": null, "version_op": null, "unified_name": "embree", "extractor_type": "cmake", "context": "\nset(embree_version @embree_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindTBB.cmake", "confidence": "High"}, {"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "  set(tbb_version \"${cmake_match_1}.${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${component_name}"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindTBB.cmake", "content": "find_library(${component_name}_library_${build_config}\n    names ${component_name}\n    paths ${lib_paths}\n    no_default_path)"}, {"filenames": ["release"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindTBB.cmake", "content": "find_library(\"${component_name}\" release)"}, {"filenames": ["debug"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/embree/common/cmake/FindTBB.cmake", "content": "find_library(\"${component_name}\" debug)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb required tbb)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "bison", "version": null, "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package(bison)", "confidence": "High"}, {"depname": "swig", "version": null, "version_op": null, "unified_name": "swig", "extractor_type": "cmake", "context": "project(swig)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "PCRE", "version": "pcre_major.pcre_minor[]pcre_prerelease", "version_op": null, "unified_name": "pcre", "extractor_type": "autoconf", "context": "AC_INIT(PCRE, pcre_major.pcre_minor[]pcre_prerelease, , pcre)", "confidence": ""}, {"depname": "z", "version": null, "version_op": null, "unified_name": "z", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "bz2", "version": null, "version_op": null, "unified_name": "bz2", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "readline", "version": null, "version_op": null, "unified_name": "readline", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}, {"depname": "edit", "version": null, "version_op": null, "unified_name": "edit", "extractor_type": "autoconf", "context": "rbfx@@rbfx/Source/ThirdParty/swig/pcre/configure.ac", "confidence": "High"}], "type": "autoconf"}, {"deps": [{"depname": "pcre", "version": null, "version_op": null, "unified_name": "pcre", "extractor_type": "cmake", "context": "project(pcre c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "rmlui", "version": "3.3", "version_op": null, "unified_name": "rmlui", "extractor_type": "cmake", "context": "project(rmlui languages c cxx version 3.3)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}, {"depname": "glslang", "version": null, "version_op": null, "unified_name": "glslang", "extractor_type": "cmake", "context": "project(glslang languages cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/glslang/CMakeLists.txt", "content": "find_program(ccache_found ccache)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tbb", "version": null, "version_op": null, "unified_name": "tbb", "extractor_type": "cmake", "context": "find_package(tbb quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "capstone", "version": null, "version_op": null, "unified_name": "capstone", "extractor_type": "cmake", "context": "project(capstone)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}, {"depname": "spirv", "version": null, "version_op": null, "unified_name": "spirv", "extractor_type": "cmake", "context": "project(spirv-tools)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SPIRV-Tools/source/CMakeLists.txt", "content": "find_library(librt rt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "c", "version": null, "version_op": null, "unified_name": "c", "extractor_type": "cmake", "context": "check_library_exists (c clock_gettime \"\" found_clock_gettime_in_c)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}, {"depname": "spirv", "version": null, "version_op": null, "unified_name": "spirv", "extractor_type": "cmake", "context": "project(spirv-cross languages cxx c)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["glslangvalidator"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SPIRV-Cross/CMakeLists.txt", "content": "find_program(spirv-cross-glslang names glslangvalidator\n\t\t\t\tpaths ${cmake_current_source_dir}/external/glslang-build/output/bin\n\t\t\t\tno_default_path)"}, {"filenames": ["spirv-as"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SPIRV-Cross/CMakeLists.txt", "content": "find_program(spirv-cross-spirv-as names spirv-as\n\t\t\t\tpaths ${cmake_current_source_dir}/external/spirv-tools-build/output/bin\n\t\t\t\tno_default_path)"}, {"filenames": ["spirv-val"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SPIRV-Cross/CMakeLists.txt", "content": "find_program(spirv-cross-spirv-val names spirv-val\n\t\t\t\tpaths ${cmake_current_source_dir}/external/spirv-tools-build/output/bin\n\t\t\t\tno_default_path)"}, {"filenames": ["spirv-opt"], "version": "", "fromfile": "rbfx@@rbfx/Source/ThirdParty/SPIRV-Cross/CMakeLists.txt", "content": "find_program(spirv-cross-spirv-opt names spirv-opt\n\t\t\t\tpaths ${cmake_current_source_dir}/external/spirv-tools-build/output/bin\n\t\t\t\tno_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "eastl", "version": null, "version_op": null, "unified_name": "eastl", "extractor_type": "cmake", "context": "project(eastl)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "spirv", "version": "1.5.5", "version_op": null, "unified_name": "spirv", "extractor_type": "cmake", "context": "project(spirv-headers languages cxx version 1.5.5)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "buildspvheaders", "version": null, "version_op": null, "unified_name": "buildspvheaders", "extractor_type": "cmake", "context": "project(buildspvheaders)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "test_pkgconfig", "version": null, "version_op": null, "unified_name": "test_pkgconfig", "extractor_type": "cmake", "context": "project(test_pkgconfig languages cxx)", "confidence": ""}, {"depname": "spirv-headers", "version": null, "version_op": null, "unified_name": "spirv-headers", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(spirv_headers required imported_target spirv-headers)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "spirv-headers", "version": null, "version_op": null, "unified_name": "spirv-headers", "extractor_type": "cmake", "context": "find_package(spirv-headers required config)", "confidence": "High"}, {"depname": "test_find_package", "version": null, "version_op": null, "unified_name": "test_find_package", "extractor_type": "cmake", "context": "project(test_find_package languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xatlas", "version": null, "version_op": null, "unified_name": "xatlas", "extractor_type": "cmake", "context": "project(xatlas)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}