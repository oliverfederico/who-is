{"target": "paullouisageneau@@libjuice", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "find_package(nettle required)", "confidence": "High"}, {"depname": "libjuice", "version": "1.2.3", "version_op": null, "unified_name": "juice", "extractor_type": "cmake", "context": "project (libjuice \tversion 1.2.3 \tlanguages c)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "paullouisageneau@@libjuice/cmake/Modules/FindNettle.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "    set(nettle_version \"${nettle_major_version}.${nettle_minor_version}\")", "confidence": "Low"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "      set(nettle_version ${pc_nettle_version})", "confidence": "Low"}, {"depname": "nettle", "version": "1.0", "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "      set(nettle_version \"1.0\")", "confidence": "Low"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_nettle quiet nettle)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nettle"], "version": "", "fromfile": "paullouisageneau@@libjuice/cmake/Modules/FindNettle.cmake", "content": "find_library(nettle_library\n  names nettle\n  paths ${pc_nettle_library_dirs}\n)"}]}]}