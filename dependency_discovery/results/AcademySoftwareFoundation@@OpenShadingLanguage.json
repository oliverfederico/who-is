{"target": "AcademySoftwareFoundation@@OpenShadingLanguage", "extractors": [{"deps": [], "type": "make"}, {"deps": [{"depname": "osl", "version": "${osl_version}", "version_op": null, "unified_name": "osl", "extractor_type": "cmake", "context": "project (osl version ${osl_version}          languages cxx c          homepage_url \"https://github.com/academysoftwarefoundation/openshadinglanguage\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osl", "version": null, "version_op": null, "unified_name": "osl", "extractor_type": "cmake", "context": "find_package (osl required)", "confidence": "High"}, {"depname": "oslbatcheddeformer", "version": null, "version_op": null, "unified_name": "oslbatcheddeformer", "extractor_type": "cmake", "context": "project (oslbatcheddeformer\n         languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "osl", "version": null, "version_op": null, "unified_name": "osl", "extractor_type": "cmake", "context": "find_package(osl required)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda required)", "confidence": "High"}, {"depname": "llvm", "version": "7.0", "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package(llvm 7.0 required)", "confidence": "High"}, {"depname": "openexr", "version": "2.0", "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr 2.0 required)", "confidence": "High"}, {"depname": "openimageio", "version": "2.2", "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "find_package(openimageio 2.2 required)", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "find_package(optix required)", "confidence": "High"}, {"depname": "examplecuda", "version": null, "version_op": null, "unified_name": "examplecuda", "extractor_type": "cmake", "context": "project(examplecuda languages cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["nvrtc"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/testsuite/example-cuda/CMakeLists.txt", "content": "find_library(cuda_nvrtc_library nvrtc hints ${cuda_toolkit_root_dir} path_suffixes lib lib64)"}, {"filenames": ["cuda"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/testsuite/example-cuda/CMakeLists.txt", "content": "find_library(cuda_cuda_library cuda hints ${cuda_toolkit_root_dir} path_suffixes lib/stubs lib64/stubs)"}]}, {"deps": [{"depname": "osl", "version": null, "version_op": null, "unified_name": "osl", "extractor_type": "cmake", "context": "find_package (osl required)", "confidence": "High"}, {"depname": "osldeformer", "version": null, "version_op": null, "unified_name": "osldeformer", "extractor_type": "cmake", "context": "project (osldeformer\n         languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package (boost required\n                       version_min 1.55\n                       components ${boost_components}\n                       recommend_min 1.66\n                       recommend_min_reason \"boost 1.66 is the oldest version our ci tests against\"\n                       print boost_include_dirs boost_libraries\n                      )", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package (zlib required)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package (openexr required\n                      version_min 2.3\n                      recommend_min 2.4\n                      recommend_min_reason\n                        \"even extremely critical patches are no longer supplied to < 2.4\"\n                      print imath_includes\n                     )", "confidence": "High"}, {"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "find_package (openimageio required\n                      version_min 2.3.17\n                      definitions -doiio_hide_format=1)", "confidence": "High"}, {"depname": "pugixml", "version": null, "version_op": null, "unified_name": "pugixml", "extractor_type": "cmake", "context": "find_package (pugixml required\n                      version_min 1.8)", "confidence": "High"}, {"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "find_package (llvm required\n                      version_min 9.0\n                      version_max 15.9\n                      print llvm_system_libraries clang_libraries)", "confidence": "High"}, {"depname": "partio", "version": null, "version_op": null, "unified_name": "partio", "extractor_type": "cmake", "context": "find_package (partio)", "confidence": "High"}, {"depname": "qt6", "version": null, "version_op": null, "unified_name": "qt6", "extractor_type": "cmake", "context": "find_package (qt6 components core gui widgets openglwidgets)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package (qt5 components core gui widgets opengl)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package (cuda required\n                            version_min 8.0\n                            print cuda_includes)", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "find_package (optix required\n                              version_min 7.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cudart"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/externalpackages.cmake", "content": "find_library(cuda_lib names cudart\n                    paths \"${cuda_toolkit_root_dir}/lib64\" \"${cuda_toolkit_root_dir}/x64\" \"${cuda_toolkit_root_dir}/lib/x64\"\n                    required)"}, {"filenames": ["nvrtc"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/externalpackages.cmake", "content": "find_library(nvrtc_lib names nvrtc\n                        paths \"${cuda_toolkit_root_dir}/lib64\" \"${cuda_toolkit_root_dir}/x64\" \"${cuda_toolkit_root_dir}/lib/x64\"\n                        required)"}]}, {"deps": [{"depname": "gcc", "version": "0", "version_op": null, "unified_name": "gcc", "extractor_type": "cmake", "context": "    set (gcc_version 0)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/compiler.cmake", "content": "find_program (ccache_found ccache)"}, {"filenames": ["\"clang-tidy\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/compiler.cmake", "content": "find_program(clang_tidy_exe names \"clang-tidy\"\n                 doc \"path to clang-tidy executable\")"}, {"filenames": ["clang-format", "bin/clang-format"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/compiler.cmake", "content": "find_program (clang_format_exe\n                  names clang-format bin/clang-format\n                  hints ${clang_format_exe_hint} env clang_format_exe_hint\n                        env llvm_directory\n                  no_default_path\n                  doc \"path to clang-format executable\")"}, {"filenames": ["clang-format", "bin/clang-format"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/compiler.cmake", "content": "find_program (clang_format_exe names clang-format bin/clang-format)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "bison", "version": "2.7", "version_op": null, "unified_name": "bison", "extractor_type": "cmake", "context": "find_package (bison 2.7 required\n                      print bison_executable)", "confidence": "High"}, {"depname": "flex", "version": "2.3.35", "version_op": null, "unified_name": "flex", "extractor_type": "cmake", "context": "find_package (flex 2.3.35 required\n                      print flex_executable)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["/usr/local/opt/bison/bin/bison"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/flexbison.cmake", "content": "find_program(bison_executable names /usr/local/opt/bison/bin/bison\n                 doc \"path to the bison executable\")"}]}, {"deps": [{"depname": "${pkgname}", "version": null, "version_op": null, "unified_name": "${pkgname}", "extractor_type": "cmake", "context": "find_package (${pkgname} config ${_pkg_unparsed_arguments})", "confidence": "High"}, {"depname": "${pkgname}", "version": null, "version_op": null, "unified_name": "${pkgname}", "extractor_type": "cmake", "context": "find_package (${pkgname} ${_pkg_unparsed_arguments})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"clang++\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/llvm_macros.cmake", "content": "find_program (llvm_bc_generator names \"clang++\"\n                        paths \"${llvm_directory}/bin\" \"${llvm_directory}/tools/llvm\"\n                        no_cmake_path no_default_path no_cmake_system_path\n                        no_system_environment_path no_cmake_environment_path)"}, {"filenames": ["\"llvm-as\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/llvm_macros.cmake", "content": "find_program (llvm_as_tool names \"llvm-as\"\n                        paths \"${llvm_directory}/bin\" \"${llvm_directory}/tools/llvm\"\n                        no_cmake_path no_default_path no_cmake_system_path\n                        no_system_environment_path no_cmake_environment_path)"}, {"filenames": ["\"llvm-link\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/llvm_macros.cmake", "content": "find_program (llvm_link_tool names \"llvm-link\"\n                    paths \"${llvm_directory}/bin\" \"${llvm_directory}/tools/llvm\"\n                    no_cmake_path no_default_path no_cmake_system_path\n                    no_system_environment_path no_cmake_environment_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "python", "version": null, "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "find_package (python ${python_version}\n                          required\n                          components interpreter development\n                          print python_development_found python_version\n                                python_executable python_libraries\n                                python_development_found python_interpreter_found)", "confidence": "High"}, {"depname": "pythoninterp_find", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "    set (pythoninterp_find_version python_version_found)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["\"clang++\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/cuda_macros.cmake", "content": "find_program(llvm_bc_generator names \"clang++\" paths \"${llvm_directory}/bin\" no_default_path no_cmake_system_path no_system_environment_path no_cmake_environment_path no_cmake_path)"}, {"filenames": ["clang++", "llvm-g++"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/cuda_macros.cmake", "content": "find_program(llvm_bc_generator names clang++ llvm-g++)"}, {"filenames": ["\"llvm-as\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/cuda_macros.cmake", "content": "find_program (llvm_as_tool names \"llvm-as\"\n                paths \"${llvm_directory}/bin\" \"${llvm_directory}/tools/llvm\"\n                no_cmake_path no_default_path no_cmake_system_path\n                no_system_environment_path no_cmake_environment_path)"}, {"filenames": ["\"llvm-link\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/cuda_macros.cmake", "content": "find_program (llvm_link_tool names \"llvm-link\"\n                paths \"${llvm_directory}/bin\" \"${llvm_directory}/tools/llvm\"\n                no_cmake_path no_default_path no_cmake_system_path\n                no_system_environment_path no_cmake_environment_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "llvm", "version": null, "version_op": null, "unified_name": "llvm", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["llvm-${llvm_version}", "llvm"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_library ( llvm_library\n               names llvm-${llvm_version} llvm\n               paths ${llvm_lib_dir})"}, {"filenames": ["llvmmcjit"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_library ( llvm_mcjit_library\n               names llvmmcjit\n               paths ${llvm_lib_dir})"}, {"filenames": ["\"clang-cpp\""], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_library ( _clang_cpp_library\n\t\t  names \"clang-cpp\"\n\t\t  paths ${llvm_lib_dir})"}, {"filenames": ["${component}"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_library ( _clang_${component}_library\n                  names ${component}\n                  paths ${llvm_lib_dir})"}, {"filenames": ["llvm-config-${llvm_version}", "llvm-config", "llvm-config-64-${llvm_version}", "llvm-config-64"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_program (llvm_config\n              names llvm-config-${llvm_version} llvm-config\n                    llvm-config-64-${llvm_version} llvm-config-64\n              hints ${llvm_config_path_hints} no_default_path)"}, {"filenames": ["llvm-config-${llvm_version}", "llvm-config", "llvm-config-64-${llvm_version}", "llvm-config-64"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindLLVM.cmake", "content": "find_program (llvm_config\n              names llvm-config-${llvm_version} llvm-config\n                    llvm-config-64-${llvm_version} llvm-config-64\n              hints ${llvm_config_path_hints})"}]}, {"deps": [{"depname": "partio", "version": null, "version_op": null, "unified_name": "partio", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/Findpartio.cmake", "confidence": "High"}, {"depname": "partio", "version": null, "version_op": null, "unified_name": "partio", "extractor_type": "cmake", "context": "find_package(partio config)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["partio"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/Findpartio.cmake", "content": "find_library (partio_library names partio)"}]}, {"deps": [{"depname": "pugixml", "version": null, "version_op": null, "unified_name": "pugixml", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/Findpugixml.cmake", "confidence": "High"}, {"depname": "pugixml", "version": null, "version_op": null, "unified_name": "pugixml", "extractor_type": "cmake", "context": "find_package (pugixml config)", "confidence": "High"}, {"depname": "pugixml", "version": null, "version_op": null, "unified_name": "pugixml", "extractor_type": "cmake", "context": "        set (pugixml_version ${pugixml_version_major}.${pugixml_version_minor})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["pugixml"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/Findpugixml.cmake", "content": "find_library (pugixml_library\n                  names pugixml\n                  path_suffixes pugixml-1.8 pugixml-1.9 pugixml-1.10)"}]}, {"deps": [{"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindOptiX.cmake", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "    set(optix_version \"${optix_version_major}.${optix_version_minor}.${optix_version_micro}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${name}.${version}", "${name}"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindOptiX.cmake", "content": "find_library(${name}_library\n        names ${name}.${version} ${name}\n        paths \"$env{optix_install_dir}/lib64\"\n        no_default_path\n        )"}, {"filenames": ["${name}.${version}", "${name}"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindOptiX.cmake", "content": "find_library(${name}_library\n        names ${name}.${version} ${name}\n        )"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindOpenEXR.cmake", "confidence": "High"}, {"depname": "imath", "version": null, "version_op": null, "unified_name": "imath", "extractor_type": "cmake", "context": "find_package(imath config)", "confidence": "High"}, {"depname": "ilmbase", "version": null, "version_op": null, "unified_name": "ilmbase", "extractor_type": "cmake", "context": "find_package(ilmbase config)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr config)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package (zlib required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package (threads)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "openexr", "version": "1.6.1", "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "    set (openexr_version 1.6.1)", "confidence": "Low"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "    set (openexr_version \"${_openexr_version}\")", "confidence": "Low"}, {"depname": "openexr", "version": "1.6.1", "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "    set (openexr_version 1.6.1)", "confidence": "Low"}, {"depname": "openexr", "version": "1.6.1", "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "    set (openexr_version 1.6.1)", "confidence": "Low"}, {"depname": "ilmbase", "version": "2.0.0", "version_op": ">=", "unified_name": "ilmbase", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_ilmbase quiet ilmbase>=2.0.0)", "confidence": "High"}, {"depname": "openexr", "version": "2.0.0", "version_op": ">=", "unified_name": "openexr", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_openexr quiet openexr>=2.0.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${component}-${openexr_version_major}_${openexr_version_minor}", "${component}", "${component}-${openexr_version_major}_${openexr_version_minor}_d", "${component}_d"], "version": "", "fromfile": "AcademySoftwareFoundation@@OpenShadingLanguage/src/cmake/modules/FindOpenEXR.cmake", "content": "find_library (openexr_${uppercomponent}_library\n                  names ${component}-${openexr_version_major}_${openexr_version_minor}\n                        ${component}\n                        ${component}-${openexr_version_major}_${openexr_version_minor}_d\n                        ${component}_d\n                  hints ${openexr_library_dir} $env{openexr_library_dir}\n                        ${generic_library_paths} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": "2.4.2", "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package (pybind11 2.4.2 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}]}