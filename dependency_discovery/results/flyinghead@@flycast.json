{"target": "flyinghead@@flycast", "extractors": [{"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "alsa", "version": null, "version_op": null, "unified_name": "alsa", "extractor_type": "cmake", "context": "find_package(alsa)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "lua", "version": null, "version_op": null, "unified_name": "lua", "extractor_type": "cmake", "context": "find_package(lua)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "miniupnpc", "version": null, "version_op": null, "unified_name": "miniupnpc", "extractor_type": "cmake", "context": "find_package(miniupnpc)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "cmake_swift_language", "version": "5.0", "version_op": null, "unified_name": "cmake_swift_language", "extractor_type": "cmake", "context": "\tset(cmake_swift_language_version 5.0)", "confidence": "Low"}, {"depname": "ao", "version": null, "version_op": null, "unified_name": "ao", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(ao imported_target ao)", "confidence": "High"}, {"depname": "libevdev", "version": null, "version_op": null, "unified_name": "evdev", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libevdev imported_target libevdev)", "confidence": "High"}, {"depname": "libudev", "version": null, "version_op": null, "unified_name": "udev", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libudev imported_target libudev)", "confidence": "High"}, {"depname": "libpulse", "version": null, "version_op": null, "unified_name": "pulse", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libpulse imported_target libpulse)", "confidence": "High"}, {"depname": "libzip", "version": null, "version_op": null, "unified_name": "zip", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libzip imported_target libzip)", "confidence": "High"}, {"depname": "glesv2", "version": null, "version_op": null, "unified_name": "glesv2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(glesv2 imported_target glesv2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["foundation"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(foundation foundation)"}, {"filenames": ["glesv3", "glesv2"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(gles3_libraries names glesv3 glesv2 no_cache required)"}, {"filenames": ["opengles"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(opengles opengles)"}, {"filenames": ["glkit"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(glkit glkit)"}, {"filenames": ["glesv3", "glesv2"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(gles3_libraries names glesv3 glesv2 no_cache required)"}, {"filenames": ["rt"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(librt rt)"}, {"filenames": ["uikit"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(uikit uikit)"}, {"filenames": ["foundation"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(foundation foundation)"}, {"filenames": ["opengles"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(opengles opengles)"}, {"filenames": ["glkit"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(glkit glkit)"}, {"filenames": ["gamecontroller"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(gamecontroller gamecontroller)"}, {"filenames": ["audiotoolbox"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(audiotoolbox audiotoolbox)"}, {"filenames": ["avfoundation"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(avfoundation avfoundation)"}, {"filenames": ["audiounit"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(audio_unit_library audiounit)"}, {"filenames": ["foundation"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(foundation_library foundation)"}, {"filenames": ["audiotoolbox"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(audio_toolbox_library audiotoolbox)"}, {"filenames": ["opengl"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(opengl_library opengl)"}, {"filenames": ["iosurface"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(iosurface_library iosurface)"}, {"filenames": ["multitouchsupport"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_library(multitouch_support_library multitouchsupport /system/library/privateframeworks)"}, {"filenames": ["ccache"], "version": "", "fromfile": "flyinghead@@flycast/CMakeLists.txt", "content": "find_program(ccache_program ccache)"}]}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "vcpkg", "context": "flyinghead@@flycast/vcpkg.json", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "vcpkg", "context": "flyinghead@@flycast/vcpkg.json", "confidence": "High"}], "type": "vcpkg"}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "flycastfonts", "version": null, "version_op": null, "unified_name": "flycastfonts", "extractor_type": "cmake", "context": "project(flycastfonts)", "confidence": ""}, {"depname": "freetype2", "version": null, "version_op": null, "unified_name": "freetype2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(freetype2 imported_target freetype2)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "altkit", "version": null, "version_op": null, "unified_name": "altkit", "extractor_type": "cmake", "context": "project(altkit languages c swift)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["install_name_tool"], "version": "", "fromfile": "flyinghead@@flycast/shell/apple/emulator-ios/OpenMP/ios.toolchain.cmake", "content": "find_program(cmake_install_name_tool install_name_tool)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "miniupnpc", "version": null, "version_op": null, "unified_name": "miniupnpc", "extractor_type": "cmake", "context": "flyinghead@@flycast/shell/cmake/FindMiniUPnPc.cmake", "confidence": "High"}, {"depname": "miniupnpc_api", "version": "1", "version_op": null, "unified_name": "miniupnpc_api", "extractor_type": "cmake", "context": "    set(miniupnpc_api_version \"${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["miniupnpc"], "version": "", "fromfile": "flyinghead@@flycast/shell/cmake/FindMiniUPnPc.cmake", "content": "find_library(miniupnp_library miniupnpc\n  hints $env{miniupnp_library}\n)"}, {"filenames": ["libminiupnpc.a"], "version": "", "fromfile": "flyinghead@@flycast/shell/cmake/FindMiniUPnPc.cmake", "content": "find_library(miniupnp_static_library libminiupnpc.a\n  hints $env{miniupnp_static_library}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "ms"}, {"deps": [{"depname": "socket", "version": null, "version_op": null, "unified_name": "socket", "extractor_type": "make", "context": "flyinghead@@flycast/core/deps/miniupnpc/Makefile:LDLIBS=-lsocket -lnsl -lresolv", "confidence": "High"}, {"depname": "nsl", "version": null, "version_op": null, "unified_name": "nsl", "extractor_type": "make", "context": "flyinghead@@flycast/core/deps/miniupnpc/Makefile:LDLIBS=-lsocket -lnsl -lresolv", "confidence": "High"}, {"depname": "resolv", "version": null, "version_op": null, "unified_name": "resolv", "extractor_type": "make", "context": "flyinghead@@flycast/core/deps/miniupnpc/Makefile:LDLIBS=-lsocket -lnsl -lresolv", "confidence": "High"}], "type": "make"}, {"deps": [{"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "make", "context": "flyinghead@@flycast/core/deps/miniupnpc/Makefile.mingw:LDLIBS = -lws2_32 -liphlpapi", "confidence": "High"}, {"depname": "iphlpapi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "make", "context": "flyinghead@@flycast/core/deps/miniupnpc/Makefile.mingw:LDLIBS = -lws2_32 -liphlpapi", "confidence": "High"}], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "miniupnpc", "version": "2.2.5", "version_op": null, "unified_name": "miniupnpc", "extractor_type": "cmake", "context": "project (miniupnpc          version 2.2.5          description \"upnp igd client lightweight library\"          homepage_url https://miniupnp.tuxfamily.org/          languages c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["socket"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (socket_library names socket)"}, {"filenames": ["nsl"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (nsl_library names nsl)"}, {"filenames": ["resolv"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (resolv_library names resolv)"}, {"filenames": ["network"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (socket_library names network)"}, {"filenames": ["network"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (nsl_library names network)"}, {"filenames": ["network"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/miniupnpc/CMakeLists.txt", "content": "find_library (resolv_library names network)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "$(AdditionalDependencies)", "version": null, "version_op": null, "unified_name": "$(additionaldependencies)", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc_vs2010.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc_vs2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc_vs2010.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/miniupnpc_vs2010.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "IPHlpApi", "version": null, "version_op": null, "unified_name": "iphlpapi", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "ws2_32", "version": null, "version_op": null, "unified_name": "ws2_32", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}, {"depname": "$(Configuration)\\miniupnpc", "version": null, "version_op": null, "unified_name": "$(configuration)\\miniupnpc", "extractor_type": "ms", "context": "flyinghead@@flycast/core/deps/miniupnpc/msvc/upnpc-static_vs2010.vcxproj", "confidence": "High"}], "type": "ms"}, {"deps": [{"depname": "nettle", "version": "3.0", "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "find_package(nettle 3.0)", "confidence": "High"}, {"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake", "context": "find_package(gnutls)", "confidence": "High"}, {"depname": "mbedtls", "version": "1.0", "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "find_package(mbedtls 1.0)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl)", "confidence": "High"}, {"depname": "zlib", "version": "1.1.2", "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib 1.1.2 required)", "confidence": "High"}, {"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "find_package(bzip2)", "confidence": "High"}, {"depname": "liblzma", "version": "5.2", "version_op": null, "unified_name": "lzma", "extractor_type": "cmake", "context": "find_package(liblzma 5.2)", "confidence": "High"}, {"depname": "zstd", "version": null, "version_op": null, "unified_name": "zstd", "extractor_type": "cmake", "context": "find_package(zstd)", "confidence": "High"}, {"depname": "libzip", "version": "1.7.3.1", "version_op": null, "unified_name": "zip", "extractor_type": "cmake", "context": "project(libzip   version 1.7.3.1   languages c)", "confidence": "High"}, {"depname": "fts", "version": null, "version_op": null, "unified_name": "fts", "extractor_type": "cmake", "context": "check_library_exists(fts fts_open \"\" have_lib_fts)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mandoc", "groff"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/CMakeLists.txt", "content": "find_program(mdoctool names mandoc groff)"}, {"filenames": ["nroff"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/CMakeLists.txt", "content": "find_program(mantool names nroff)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake/FindNettle.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "    set(nettle_version \"${nettle_major_version}.${nettle_minor_version}\")", "confidence": "Low"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "      set(nettle_version ${pc_nettle_version})", "confidence": "Low"}, {"depname": "nettle", "version": "1.0", "version_op": null, "unified_name": "nettle", "extractor_type": "cmake", "context": "      set(nettle_version \"1.0\")", "confidence": "Low"}, {"depname": "nettle", "version": null, "version_op": null, "unified_name": "nettle", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_nettle quiet nettle)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nettle"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake/FindNettle.cmake", "content": "find_library(nettle_library\n  names nettle\n  paths ${pc_nettle_library_dirs}\n)"}]}, {"deps": [{"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake/FindMbedTLS.cmake", "confidence": "High"}, {"depname": "mbedtls", "version": null, "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "      set(mbedtls_version ${pc_mbedtls_version})", "confidence": "Low"}, {"depname": "mbedtls", "version": "0.0", "version_op": null, "unified_name": "mbedtls", "extractor_type": "cmake", "context": "      set(mbedtls_version \"0.0\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["mbedcrypto"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake/FindMbedTLS.cmake", "content": "find_library(mbedtls_library\n  names mbedcrypto\n\n)"}]}, {"deps": [{"depname": "zstd", "version": null, "version_op": null, "unified_name": "zstd", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake/FindZstd.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "zstd", "version": null, "version_op": null, "unified_name": "zstd", "extractor_type": "cmake", "context": "  set(zstd_version \"${zstd_major_version}.${zstd_minor_version}.${zstd_release_version}\")", "confidence": "Low"}, {"depname": "zstd", "version": null, "version_op": null, "unified_name": "zstd", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_zstd quiet zstd)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["zstd"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake/FindZstd.cmake", "content": "find_library(zstd_library\n  names zstd\n  paths ${pc_zstd_library_dirs}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "library", "version": null, "version_op": null, "unified_name": "rary", "extractor_type": "cmake", "context": "check_library_exists(library function location variable)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindGnuTLS.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake", "context": "  set(gnutls_version ${pc_gnutls_version})", "confidence": "Low"}, {"depname": "gnutls", "version": null, "version_op": null, "unified_name": "gnutls", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_gnutls quiet gnutls)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gnutls", "libgnutls"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindGnuTLS.cmake", "content": "find_library(gnutls_library names gnutls libgnutls\n  hints\n    ${pc_gnutls_libdir}\n    ${pc_gnutls_library_dirs}\n  )"}]}, {"deps": [{"depname": "liblzma", "version": null, "version_op": null, "unified_name": "lzma", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindLibLZMA.cmake", "confidence": "High"}, {"depname": "${liblzma_library_debug}", "version": null, "version_op": null, "unified_name": "${liblzma_library_debug}", "extractor_type": "cmake", "context": "check_library_exists(${liblzma_library_debug} lzma_auto_decoder \"\" liblzma_has_auto_decoder)", "confidence": "High"}, {"depname": "${liblzma_library_debug}", "version": null, "version_op": null, "unified_name": "${liblzma_library_debug}", "extractor_type": "cmake", "context": "check_library_exists(${liblzma_library_debug} lzma_easy_encoder \"\" liblzma_has_easy_encoder)", "confidence": "High"}, {"depname": "${liblzma_library_debug}", "version": null, "version_op": null, "unified_name": "${liblzma_library_debug}", "extractor_type": "cmake", "context": "check_library_exists(${liblzma_library_debug} lzma_lzma_preset \"\" liblzma_has_lzma_preset)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lzma", "liblzma"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindLibLZMA.cmake", "content": "find_library(liblzma_library_release names lzma liblzma path_suffixes lib)"}, {"filenames": ["lzmad", "liblzmad"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindLibLZMA.cmake", "content": "find_library(liblzma_library_debug names lzmad liblzmad path_suffixes lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindPackageHandleStandardArgs.cmake", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename>)", "confidence": "High"}, {"depname": "<packagename>", "version": null, "version_op": null, "unified_name": "<packagename>", "extractor_type": "cmake", "context": "find_package(<packagename> no_module)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 quiet no_module hints /opt/automoc4)", "confidence": "High"}, {"depname": "automoc4", "version": null, "version_op": null, "unified_name": "automoc4", "extractor_type": "cmake", "context": "find_package(automoc4 no_module)", "confidence": "High"}, {"depname": "found", "version": null, "version_op": null, "unified_name": "found", "extractor_type": "cmake", "context": "      set(_found_version ${${_name}_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "packagemessage", "version": null, "version_op": null, "unified_name": "packagemessage", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindPackageMessage.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "bzip2", "version": null, "version_op": null, "unified_name": "bzip2", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindBZip2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bz2", "bzip2", "libbz2", "libbzip2", "${_bzip2_paths}"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindBZip2.cmake", "content": "find_library(bzip2_library_release names bz2 bzip2 libbz2 libbzip2 ${_bzip2_paths} path_suffixes lib)"}, {"filenames": ["bz2d", "bzip2d", "libbz2d", "libbzip2d", "${_bzip2_paths}"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libzip/cmake-compat/FindBZip2.cmake", "content": "find_library(bzip2_library_debug names bz2d bzip2d libbz2d libbzip2d ${_bzip2_paths} path_suffixes lib)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "grpc", "version": null, "version_op": null, "unified_name": "grpc", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf config required hints ${grpc_install_path})", "confidence": "High"}, {"depname": "grpc", "version": null, "version_op": null, "unified_name": "grpc", "extractor_type": "cmake", "context": "find_package(grpc config required hints ${grpc_install_path})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["grpc++"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_library(grpc_library grpc++  required)"}, {"filenames": ["grpc++_reflection"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_library(grpc_reflection_library grpc++_reflection  required)"}, {"filenames": ["protobuf"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_library(protobuf_library protobuf  required)"}, {"filenames": ["grpc_cpp_plugin"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_program(grpc_cpp_plugin grpc_cpp_plugin)"}, {"filenames": ["protoc"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_program(protoc protoc)"}, {"filenames": ["brew"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindGRPC.cmake", "content": "find_program(homebrew brew)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libedit", "version": null, "version_op": null, "unified_name": "edit", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindLibEdit.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "libedit", "version": null, "version_op": null, "unified_name": "edit", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libedit quiet libedit)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["edit"], "version": "", "fromfile": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindLibEdit.cmake", "content": "find_library(libedit_libraries names edit hints ${pc_libedit_library_dirs})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "prefixfromconfig", "version": null, "version_op": null, "unified_name": "prefixfromconfig", "extractor_type": "cmake", "context": "flyinghead@@flycast/core/deps/libunwind/cmake/Modules/FindPrefixFromConfig.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "find_package(sphinx required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "c", "version": null, "version_op": null, "unified_name": "c", "extractor_type": "cmake", "context": "check_library_exists(c fopen \"\" libunwind_has_c_lib)", "confidence": "High"}, {"depname": "gcc", "version": null, "version_op": null, "unified_name": "gcc", "extractor_type": "cmake", "context": "check_library_exists(gcc __gcc_personality_v0 \"\" libunwind_has_gcc_lib)", "confidence": "High"}, {"depname": "gcc_s", "version": null, "version_op": null, "unified_name": "gcc_s", "extractor_type": "cmake", "context": "check_library_exists(gcc_s __gcc_personality_v0 \"\" libunwind_has_gcc_s_lib)", "confidence": "High"}, {"depname": "gcc", "version": null, "version_op": null, "unified_name": "gcc", "extractor_type": "cmake", "context": "check_library_exists(gcc __absvdi2 \"\" libunwind_has_gcc_lib)", "confidence": "High"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists(dl dladdr \"\" libunwind_has_dl_lib)", "confidence": "High"}, {"depname": "pthread", "version": null, "version_op": null, "unified_name": "pthread", "extractor_type": "cmake", "context": "check_library_exists(pthread pthread_once \"\" libunwind_has_pthread_lib)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "nowide", "version": "11.3.0", "version_op": null, "unified_name": "nowide", "extractor_type": "cmake", "context": "project(nowide version 11.3.0 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nowide", "version": "11", "version_op": null, "unified_name": "nowide", "extractor_type": "cmake", "context": "find_package(nowide 11 required)", "confidence": "High"}, {"depname": "cmake_subdir_test", "version": null, "version_op": null, "unified_name": "cmake_subdir_test", "extractor_type": "cmake", "context": "project(cmake_subdir_test languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xxhash", "version": null, "version_op": null, "unified_name": "xxhash", "extractor_type": "cmake", "context": "    project(xxhash c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "glm", "version": "0.9.9", "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "project(glm version 0.9.9 languages cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libelf", "version": null, "version_op": null, "unified_name": "elf", "extractor_type": "cmake", "context": "project(libelf c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "xbyak", "version": null, "version_op": null, "unified_name": "xbyak", "extractor_type": "cmake", "context": "project(xbyak cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "make"}]}