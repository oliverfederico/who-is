{"target": "LuminanceHDR@@LuminanceHDR", "extractors": [{"deps": [{"depname": "qt5core", "version": null, "version_op": null, "unified_name": "qt5core", "extractor_type": "cmake", "context": "find_package(qt5core             required)", "confidence": "High"}, {"depname": "qt5concurrent", "version": null, "version_op": null, "unified_name": "qt5concurrent", "extractor_type": "cmake", "context": "find_package(qt5concurrent       required)", "confidence": "High"}, {"depname": "qt5widgets", "version": null, "version_op": null, "unified_name": "qt5widgets", "extractor_type": "cmake", "context": "find_package(qt5widgets          required)", "confidence": "High"}, {"depname": "qt5gui", "version": null, "version_op": null, "unified_name": "qt5gui", "extractor_type": "cmake", "context": "find_package(qt5gui              required)", "confidence": "High"}, {"depname": "qt5webenginecore", "version": null, "version_op": null, "unified_name": "qt5webenginecore", "extractor_type": "cmake", "context": "find_package(qt5webenginecore    quiet)", "confidence": "High"}, {"depname": "qt5webenginewidgets", "version": null, "version_op": null, "unified_name": "qt5webenginewidgets", "extractor_type": "cmake", "context": "find_package(qt5webenginewidgets required)", "confidence": "High"}, {"depname": "qt5webkit", "version": null, "version_op": null, "unified_name": "qt5webkit", "extractor_type": "cmake", "context": "find_package(qt5webkit           required)", "confidence": "High"}, {"depname": "qt5webkitwidgets", "version": null, "version_op": null, "unified_name": "qt5webkitwidgets", "extractor_type": "cmake", "context": "find_package(qt5webkitwidgets    required)", "confidence": "High"}, {"depname": "qt5xml", "version": null, "version_op": null, "unified_name": "qt5xml", "extractor_type": "cmake", "context": "find_package(qt5xml              required)", "confidence": "High"}, {"depname": "qt5sql", "version": null, "version_op": null, "unified_name": "qt5sql", "extractor_type": "cmake", "context": "find_package(qt5sql              required)", "confidence": "High"}, {"depname": "qt5svg", "version": null, "version_op": null, "unified_name": "qt5svg", "extractor_type": "cmake", "context": "find_package(qt5svg              required)", "confidence": "High"}, {"depname": "qt5network", "version": null, "version_op": null, "unified_name": "qt5network", "extractor_type": "cmake", "context": "find_package(qt5network          required)", "confidence": "High"}, {"depname": "qt5linguisttools", "version": null, "version_op": null, "unified_name": "qt5linguisttools", "extractor_type": "cmake", "context": "find_package(qt5linguisttools    required)", "confidence": "High"}, {"depname": "qt5printsupport", "version": null, "version_op": null, "unified_name": "qt5printsupport", "extractor_type": "cmake", "context": "find_package(qt5printsupport     required)", "confidence": "High"}, {"depname": "qt5winextras", "version": null, "version_op": null, "unified_name": "qt5winextras", "extractor_type": "cmake", "context": "find_package(qt5winextras)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "libraw", "version": null, "version_op": null, "unified_name": "raw", "extractor_type": "cmake", "context": "find_package(libraw required)", "confidence": "High"}, {"depname": "fftwf", "version": null, "version_op": null, "unified_name": "fftwf", "extractor_type": "cmake", "context": "find_package(fftwf required)", "confidence": "High"}, {"depname": "lcms2", "version": null, "version_op": null, "unified_name": "lcms2", "extractor_type": "cmake", "context": "find_package(lcms2 required)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components program_options thread chrono system date_time atomic)", "confidence": "High"}, {"depname": "exiv2", "version": null, "version_op": null, "unified_name": "exiv2", "extractor_type": "cmake", "context": "find_package(exiv2 required)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff required)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png required)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr required)", "confidence": "High"}, {"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "find_package(gsl required)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg required)", "confidence": "High"}, {"depname": "cfitsio", "version": null, "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "find_package(cfitsio)", "confidence": "High"}, {"depname": "macosx_bundle_bundle", "version": null, "version_op": null, "unified_name": "macosx_bundle_bundle", "extractor_type": "cmake", "context": "    set(macosx_bundle_bundle_version       \"${lhdr_name} ${lhdr_version}\")", "confidence": "Low"}, {"depname": "macosx_bundle", "version": null, "version_op": null, "unified_name": "macosx_bundle", "extractor_type": "cmake", "context": "    set(macosx_bundle_version              \"${lhdr_version}\")", "confidence": "Low"}, {"depname": "fftw3f", "version": null, "version_op": null, "unified_name": "fftw3f", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(fftw3f required fftw3f)", "confidence": "High"}, {"depname": "lcms2", "version": "2.6", "version_op": ">=", "unified_name": "lcms2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(lcms required lcms2>=2.6)", "confidence": "High"}, {"depname": "libraw", "version": null, "version_op": null, "unified_name": "raw", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libraw required libraw)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["align_image_stack.exe"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/CMakeLists.txt", "content": "find_program(align_image_stack align_image_stack.exe hints \"${hugin_base_path}\" env path env programfiles env programfiles(x86) path_suffixes hugin/bin bin)"}]}, {"deps": [{"depname": "nsis", "version": null, "version_op": null, "unified_name": "nsis", "extractor_type": "cmake", "context": "find_package(nsis)", "confidence": "High"}, {"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "set(cpack_package_version ${project_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "nsis", "version": null, "version_op": null, "unified_name": "nsis", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/librtprocess/cmake/Modules/FindNSIS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["makensis"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/librtprocess/cmake/Modules/FindNSIS.cmake", "content": "find_program(nsis_make\n    names\n        makensis\n    paths\n        ${nsis_root_path}\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required components cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "set(cpack_package_version       \"${lhdr_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["git.exe"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/platforms/msys2/UpdateInfo.cmake", "content": "find_program(git_cmd git.exe hints env path path_suffixes ../)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lhdr", "version": "2.6.1", "version_op": null, "unified_name": "lhdr", "extractor_type": "cmake", "context": "\nset(lhdr_version \"2.6.1_git-${head_hash}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "exiv2", "version": null, "version_op": null, "unified_name": "exiv2", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findexiv2.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "exiv2_find", "version": "2", "version_op": null, "unified_name": "exiv2", "extractor_type": "cmake", "context": "  set(exiv2_find_version \"${exiv2_min_version}\")", "confidence": "Low"}, {"depname": "exiv2_find", "version": "0.21", "version_op": null, "unified_name": "exiv2", "extractor_type": "cmake", "context": "  set(exiv2_find_version \"0.21\")", "confidence": "Low"}, {"depname": "exiv2", "version": null, "version_op": null, "unified_name": "exiv2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_exiv2 exiv2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["exiv2", "libexiv2"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findexiv2.cmake", "content": "find_library(exiv2_library names exiv2 libexiv2\n             hints\n             ${pc_exiv2_libdir}\n             ${pc_exiv2_library_dirs}\n            )"}]}, {"deps": [{"depname": "libraw", "version": null, "version_op": null, "unified_name": "raw", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindLibRAW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libraw_names}"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindLibRAW.cmake", "content": "find_library(libraw_library names ${libraw_names} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fftwf", "version": null, "version_op": null, "unified_name": "fftwf", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findfftwf.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fftw3f"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findfftwf.cmake", "content": "find_library(fftwf_library fftw3f ${fftwf_library_dirs})"}, {"filenames": ["fftw3f_threads"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findfftwf.cmake", "content": "find_library(fftwf_threads_library fftw3f_threads ${fftwf_library_dirs})"}, {"filenames": ["fftw3f"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findfftwf.cmake", "content": "find_library(fftwf_libraries fftw3f ${trial_library_paths})"}, {"filenames": ["fftw3f_threads"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findfftwf.cmake", "content": "find_library(fftwf_threads_libraries fftw3f_threads ${trial_library_paths})"}]}, {"deps": [{"depname": "cfitsio", "version": null, "version_op": null, "unified_name": "cfitsio", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindCFITSIO.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cfitsio"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindCFITSIO.cmake", "content": "find_library(cfitsio_libraries names cfitsio\n    paths\n    $env{cfitsio}\n    ${_oblinkdir}\n    ${gnuwin32_dir}/lib\n    /opt/local/lib\n)"}]}, {"deps": [{"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindGSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gsl"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindGSL.cmake", "content": "find_library(gsl_library names gsl)"}, {"filenames": ["gslcblas"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindGSL.cmake", "content": "find_library(gsl_cblas_library names gslcblas)"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${component}-${_openexr_libs_ver}", "${component}"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindOpenEXR.cmake", "content": "find_library(openexr_${uppercomponent}_library\n    names\n      ${component}-${_openexr_libs_ver} ${component}\n    names_per_dir\n    hints\n      ${_openexr_search_dirs}\n    path_suffixes\n      lib64 lib\n    )"}, {"filenames": ["imath-${_imath_libs_ver}", "imath"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/FindOpenEXR.cmake", "content": "find_library(imath_library\n    names\n      imath-${_imath_libs_ver} imath\n    names_per_dir\n    hints\n      ${_openexr_search_dirs}\n    path_suffixes\n      lib64 lib\n    )"}]}, {"deps": [{"depname": "lcms2", "version": null, "version_op": null, "unified_name": "lcms2", "extractor_type": "cmake", "context": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findlcms2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lcms2_names}"], "version": "", "fromfile": "LuminanceHDR@@LuminanceHDR/build_files/Modules/Findlcms2.cmake", "content": "find_library(lcms2_library names ${lcms2_names} )"}]}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}]}