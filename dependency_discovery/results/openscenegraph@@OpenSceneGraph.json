{"target": "openscenegraph@@OpenSceneGraph", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "find_package(egl)", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "find_package(egl)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11)", "confidence": "High"}, {"depname": "glcore", "version": null, "version_op": null, "unified_name": "glcore", "extractor_type": "cmake", "context": "find_package(glcore required)", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype)", "confidence": "High"}, {"depname": "ilmbase", "version": null, "version_op": null, "unified_name": "ilmbase", "extractor_type": "cmake", "context": "find_package(ilmbase)", "confidence": "High"}, {"depname": "inventor", "version": null, "version_op": null, "unified_name": "inventor", "extractor_type": "cmake", "context": "find_package(inventor)", "confidence": "High"}, {"depname": "jasper", "version": null, "version_op": null, "unified_name": "jasper", "extractor_type": "cmake", "context": "find_package(jasper)", "confidence": "High"}, {"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package(openexr)", "confidence": "High"}, {"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "find_package(opencascade)", "confidence": "High"}, {"depname": "collada", "version": null, "version_op": null, "unified_name": "collada", "extractor_type": "cmake", "context": "find_package(collada)", "confidence": "High"}, {"depname": "fbx", "version": null, "version_op": null, "unified_name": "fbx", "extractor_type": "cmake", "context": "find_package(fbx)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}, {"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "find_package(gdal)", "confidence": "High"}, {"depname": "gta", "version": null, "version_op": null, "unified_name": "gta", "extractor_type": "cmake", "context": "find_package(gta)", "confidence": "High"}, {"depname": "curl", "version": null, "version_op": null, "unified_name": "curl", "extractor_type": "cmake", "context": "find_package(curl)", "confidence": "High"}, {"depname": "libvncserver", "version": null, "version_op": null, "unified_name": "vncserver", "extractor_type": "cmake", "context": "find_package(libvncserver)", "confidence": "High"}, {"depname": "dcmtk", "version": null, "version_op": null, "unified_name": "dcmtk", "extractor_type": "cmake", "context": "find_package(dcmtk)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg)", "confidence": "High"}, {"depname": "gstreamer", "version": null, "version_op": null, "unified_name": "gstreamer", "extractor_type": "cmake", "context": "find_package(gstreamer components app pbutils)", "confidence": "High"}, {"depname": "glib", "version": null, "version_op": null, "unified_name": "glib", "extractor_type": "cmake", "context": "find_package(glib components gobject)", "confidence": "High"}, {"depname": "directshow", "version": null, "version_op": null, "unified_name": "directshow", "extractor_type": "cmake", "context": "find_package(directshow)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2)", "confidence": "High"}, {"depname": "sdl", "version": null, "version_op": null, "unified_name": "sdl", "extractor_type": "cmake", "context": "find_package(sdl)", "confidence": "High"}, {"depname": "poppler-glib", "version": null, "version_op": null, "unified_name": "poppler-glib", "extractor_type": "cmake", "context": "find_package(poppler-glib)", "confidence": "High"}, {"depname": "rsvg", "version": null, "version_op": null, "unified_name": "rsvg", "extractor_type": "cmake", "context": "find_package(rsvg)", "confidence": "High"}, {"depname": "gtkgl", "version": null, "version_op": null, "unified_name": "gtkgl", "extractor_type": "cmake", "context": "find_package(gtkgl)", "confidence": "High"}, {"depname": "directinput", "version": null, "version_op": null, "unified_name": "directinput", "extractor_type": "cmake", "context": "find_package(directinput)", "confidence": "High"}, {"depname": "nvtt", "version": null, "version_op": null, "unified_name": "nvtt", "extractor_type": "cmake", "context": "find_package(nvtt)", "confidence": "High"}, {"depname": "asio", "version": null, "version_op": null, "unified_name": "asio", "extractor_type": "cmake", "context": "find_package(asio)", "confidence": "High"}, {"depname": "zeroconf", "version": null, "version_op": null, "unified_name": "zeroconf", "extractor_type": "cmake", "context": "find_package(zeroconf)", "confidence": "High"}, {"depname": "liblas", "version": null, "version_op": null, "unified_name": "las", "extractor_type": "cmake", "context": "find_package(liblas)", "confidence": "High"}, {"depname": "lua52", "version": null, "version_op": null, "unified_name": "lua52", "extractor_type": "cmake", "context": "find_package(lua52)", "confidence": "High"}, {"depname": "lua51", "version": null, "version_op": null, "unified_name": "lua51", "extractor_type": "cmake", "context": "find_package(lua51)", "confidence": "High"}, {"depname": "fltk", "version": null, "version_op": null, "unified_name": "fltk", "extractor_type": "cmake", "context": "find_package(fltk)", "confidence": "High"}, {"depname": "fox", "version": null, "version_op": null, "unified_name": "fox", "extractor_type": "cmake", "context": "find_package(fox)", "confidence": "High"}, {"depname": "wxwidgets", "version": null, "version_op": null, "unified_name": "wxwidgets", "extractor_type": "cmake", "context": "find_package(wxwidgets components base core gl net)", "confidence": "High"}, {"depname": "giflib", "version": null, "version_op": null, "unified_name": "giflib", "extractor_type": "cmake", "context": "find_package(giflib)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}, {"depname": "png", "version": null, "version_op": null, "unified_name": "png", "extractor_type": "cmake", "context": "find_package(png)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff)", "confidence": "High"}, {"depname": "quicktime", "version": null, "version_op": null, "unified_name": "quicktime", "extractor_type": "cmake", "context": "find_package(quicktime)", "confidence": "High"}, {"depname": "tiff", "version": null, "version_op": null, "unified_name": "tiff", "extractor_type": "cmake", "context": "find_package(tiff)", "confidence": "High"}, {"depname": "quicktime", "version": null, "version_op": null, "unified_name": "quicktime", "extractor_type": "cmake", "context": "find_package(quicktime)", "confidence": "High"}, {"depname": "qtkit", "version": null, "version_op": null, "unified_name": "qtkit", "extractor_type": "cmake", "context": "find_package(qtkit)", "confidence": "High"}, {"depname": "corevideo", "version": null, "version_op": null, "unified_name": "corevideo", "extractor_type": "cmake", "context": "find_package(corevideo)", "confidence": "High"}, {"depname": "coremedia", "version": null, "version_op": null, "unified_name": "coremedia", "extractor_type": "cmake", "context": "find_package(coremedia)", "confidence": "High"}, {"depname": "quartzcore", "version": null, "version_op": null, "unified_name": "quartzcore", "extractor_type": "cmake", "context": "find_package(quartzcore)", "confidence": "High"}, {"depname": "avfoundation", "version": null, "version_op": null, "unified_name": "avfoundation", "extractor_type": "cmake", "context": "find_package(avfoundation)", "confidence": "High"}, {"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "project(openscenegraph)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(cocoa_library cocoa)"}, {"filenames": ["gl"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(opengl_gl_library gl paths ${x11libdir} doc \"opengl lib for osx\" no_default_path)"}, {"filenames": ["carbon"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(carbon_library carbon)"}, {"filenames": ["agl"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(agl_library agl)"}, {"filenames": ["\"libglesv2.dll\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(opengl_gl_library \"libglesv2.dll\")"}, {"filenames": ["m"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(math_library m)"}, {"filenames": ["dl"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(dl_library dl)"}, {"filenames": ["rt"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library( rt_library rt )"}, {"filenames": ["glesv1_cm"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(opengl_gl_library  glesv1_cm\n                 paths\n                     ${android_sysroot}/usr/lib)"}, {"filenames": ["glesv2"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(opengl_gl_library  glesv2\n                 paths\n                     ${android_sysroot}/usr/lib)"}, {"filenames": ["glesv3"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeLists.txt", "content": "find_library(opengl_gl_library  glesv3\n                 paths\n                     ${android_sysroot}/usr/lib)"}]}, {"deps": [{"depname": "openvrml", "version": null, "version_op": null, "unified_name": "openvrml", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenVRML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openvrml"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenVRML.cmake", "content": "find_library(openvrml_library \n    names openvrml\n    paths\n    $env{openvrml_dir}/lib\n    $env{openvrml_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}, {"filenames": ["openvrmld"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenVRML.cmake", "content": "find_library(openvrml_library_debug \n    names openvrmld\n    paths\n    $env{openvrml_dir}/lib\n    $env{openvrml_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}]}, {"deps": [{"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFreetype.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["freetype", "libfreetype", "freetype219", "${freetype_find_args}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFreetype.cmake", "content": "find_library(freetype_library_release\n    names\n      freetype\n      libfreetype\n      freetype219\n    ${freetype_find_args}\n    path_suffixes\n      lib\n  )"}, {"filenames": ["freetyped", "libfreetyped", "freetype219d", "${freetype_find_args}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFreetype.cmake", "content": "find_library(freetype_library_debug\n    names\n      freetyped\n      libfreetyped\n      freetype219d\n    ${freetype_find_args}\n    path_suffixes\n      lib\n  )"}]}, {"deps": [{"depname": "glcore", "version": null, "version_op": null, "unified_name": "glcore", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLCORE.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFFmpeg.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${shortname}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFFmpeg.cmake", "content": "find_library(ffmpeg_${varname}_libraries\n        names ${shortname}\n        paths\n        ${ffmpeg_root}/lib\n        $env{ffmpeg_dir}/lib\n        ${ffmpeg_root}/lib${shortname}\n        $env{ffmpeg_dir}/lib${shortname}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/local/lib64\n        /usr/lib\n        /usr/lib64\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n        doc \"location of ffmpeg libraries\"\n    )"}]}, {"deps": [{"depname": "androidndk", "version": null, "version_op": null, "unified_name": "androidndk", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindAndroidNDK.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "quicktime", "version": null, "version_op": null, "unified_name": "quicktime", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuickTime.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["quicktime"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime)"}, {"filenames": ["quicktime"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime\n    $env{quicktime_dir}/lib\n    $env{quicktime_dir}\n    no_default_path\n  )"}, {"filenames": ["quicktime"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime\n    paths ${cmake_prefix_path} \n    no_default_path\n    path_suffixes lib64 lib\n  )"}, {"filenames": ["quicktime"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuickTime.cmake", "content": "find_library(quicktime_library quicktime)"}]}, {"deps": [{"depname": "fox", "version": null, "version_op": null, "unified_name": "fox", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFOX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${mylibraryname}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFOX.cmake", "content": "find_library(${mylibrary}\n        names ${mylibraryname}\n        paths\n        $env{fox_dir}/lib\n        $env{fox_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [{"depname": "corevideo", "version": null, "version_op": null, "unified_name": "corevideo", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCoreVideo.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["corevideo"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCoreVideo.cmake", "content": "find_library(corevideo_library corevideo)"}]}, {"deps": [{"depname": "giflib", "version": null, "version_op": null, "unified_name": "giflib", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGIFLIB.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gif", "ungif", "libgif", "libungif"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGIFLIB.cmake", "content": "find_library(giflib_library \n  names gif ungif libgif libungif\n  paths\n  $env{giflib_dir}\n  no_default_path\n  path_suffixes lib64 lib\n)"}, {"filenames": ["gif", "ungif", "libgif", "libungif"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGIFLIB.cmake", "content": "find_library(giflib_library \n  names gif ungif libgif libungif\n  paths ${cmake_prefix_path} \n  no_default_path\n  path_suffixes lib64 lib\n)"}, {"filenames": ["gif", "ungif", "libgif", "libungif"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGIFLIB.cmake", "content": "find_library(giflib_library \n  names gif ungif libgif libungif\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /usr/local\n  /usr\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n  /usr/freeware\n  path_suffixes lib64 lib\n)"}]}, {"deps": [{"depname": "fbx", "version": null, "version_op": null, "unified_name": "fbx", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fbxsdk-2013.3-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library fbxsdk-2013.3-md\n    paths ${fbx_search_paths}\n    path_suffixes \"lib/vs2017/release\" \"lib/vs2017\")"}, {"filenames": ["fbxsdk-2013.3-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library_debug fbxsdk-2013.3-md\n    paths ${fbx_search_paths}\n    path_suffixes \"lib/vs2017/debug\")"}, {"filenames": ["fbxsdk-2013.3-mdd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library_debug fbxsdk-2013.3-mdd\n    paths ${fbx_search_paths}\n    path_suffixes \"lib/vs2017\")"}, {"filenames": ["libxml2-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_xml2_library libxml2-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017/release\" \"lib/vs2017\")"}, {"filenames": ["zlib-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_zlib_library zlib-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017/release\" \"lib/vs2017\")"}, {"filenames": ["libxml2-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_xml2_library_debug libxml2-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017/debug\")"}, {"filenames": ["zlib-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_zlib_library_debug zlib-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017/debug\")"}, {"filenames": ["fbxsdk-2013.3-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library fbxsdk-2013.3-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017\")"}, {"filenames": ["fbxsdk-2013.3-mdd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library_debug fbxsdk-2013.3-mdd\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017\")"}, {"filenames": ["fbxsdk-2013.3-md"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library fbxsdk-2013.3-md\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017\")"}, {"filenames": ["fbxsdk-2013.3-mdd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFBX.cmake", "content": "find_library( fbx_library_debug fbxsdk-2013.3-mdd\n        paths ${fbx_search_paths}\n        path_suffixes \"lib/vs2017\")"}]}, {"deps": [{"depname": "osg", "version": null, "version_op": null, "unified_name": "osg", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOSG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"${mylibraryname}${cmake_debug_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOSG.cmake", "content": "find_library(\"${mylibrary}_debug\"\n        names \"${mylibraryname}${cmake_debug_postfix}\"\n        paths\n        ${osg_dir}/lib/debug\n        ${osg_dir}/lib64/debug\n        ${osg_dir}/lib\n        ${osg_dir}/lib64\n        $env{osg_dir}/lib/debug\n        $env{osg_dir}/lib64/debug\n        $env{osg_dir}/lib\n        $env{osg_dir}/lib64\n        $env{osg_dir}\n        $env{osgdir}/lib\n        $env{osgdir}/lib64\n        $env{osgdir}\n        $env{osg_root}/lib\n        $env{osg_root}/lib64\n        no_default_path\n    )"}, {"filenames": ["\"${mylibraryname}${cmake_debug_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOSG.cmake", "content": "find_library(\"${mylibrary}_debug\"\n        names \"${mylibraryname}${cmake_debug_postfix}\"\n        paths\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/local/lib64\n        /usr/lib\n        /usr/lib64\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;osg_root]/lib\n        /usr/freeware/lib64\n    )"}, {"filenames": ["\"${mylibraryname}${cmake_release_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOSG.cmake", "content": "find_library(${mylibrary}\n        names \"${mylibraryname}${cmake_release_postfix}\"\n        paths\n        ${osg_dir}/lib/release\n        ${osg_dir}/lib64/release\n        ${osg_dir}/lib\n        ${osg_dir}/lib64\n        $env{osg_dir}/lib/release\n        $env{osg_dir}/lib64/release\n        $env{osg_dir}/lib\n        $env{osg_dir}/lib64\n        $env{osg_dir}\n        $env{osgdir}/lib\n        $env{osgdir}/lib64\n        $env{osgdir}\n        $env{osg_root}/lib\n        $env{osg_root}/lib64\n        no_default_path\n    )"}, {"filenames": ["\"${mylibraryname}${cmake_release_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOSG.cmake", "content": "find_library(${mylibrary}\n        names \"${mylibraryname}${cmake_release_postfix}\"\n        paths\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/local/lib64\n        /usr/lib\n        /usr/lib64\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;osg_root]/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gtkgl", "version": null, "version_op": null, "unified_name": "gtkgl", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGtkGl.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "gtk+", "version": "2.0", "version_op": "=", "unified_name": "gtk+", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gtk gtk+-2.0)", "confidence": "High"}, {"depname": "gtkglext-win32", "version": "1.0", "version_op": "=", "unified_name": "gtkglext-win32", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gtkgl gtkglext-win32-1.0)", "confidence": "High"}, {"depname": "gtkglext-x11", "version": "1.0", "version_op": "=", "unified_name": "gtkglext-x11", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gtkgl gtkglext-x11-1.0)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qtkit", "version": null, "version_op": null, "unified_name": "qtkit", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQTKit.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["qtkit"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQTKit.cmake", "content": "find_library(qtkit_library qtkit)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "rsvg", "version": null, "version_op": null, "unified_name": "rsvg", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindRSVG.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "librsvg-2.0", "version": "2.35", "version_op": ">=", "unified_name": "rsvg", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(rsvg librsvg-2.0>=2.35)", "confidence": "High"}, {"depname": "cairo", "version": null, "version_op": null, "unified_name": "cairo", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(cairo cairo)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindSDL2.cmake", "content": "find_library(sdl2_library_temp\n  names sdl2\n  hints\n    env sdl2dir\n  path_suffixes lib\n)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindSDL2.cmake", "content": "find_library(sdl2main_library\n      names sdl2main\n      hints\n        env sdl2dir\n      path_suffixes lib\n      paths\n      /sw\n      /opt/local\n      /opt/csw\n      /opt\n    )"}]}, {"deps": [{"depname": "gta", "version": null, "version_op": null, "unified_name": "gta", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGTA.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "gta", "version": null, "version_op": null, "unified_name": "gta", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gta gta)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gta", "libgta"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGTA.cmake", "content": "find_library(gta_libraries\n        names gta libgta\n        paths\n        $env{gta_dir}/lib\n        $env{gta_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [{"depname": "poppler-glib", "version": null, "version_op": null, "unified_name": "poppler-glib", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindPoppler-glib.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "cairo", "version": null, "version_op": null, "unified_name": "cairo", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(cairo cairo)", "confidence": "High"}, {"depname": "poppler-glib", "version": null, "version_op": null, "unified_name": "poppler-glib", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(poppler poppler-glib)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "directshow", "version": null, "version_op": null, "unified_name": "directshow", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectShow.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["strmbase"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectShow.cmake", "content": "find_library(directshow_strmbase_library_release strmbase\n    paths\n    ${directshow_sample_root}/baseclasses/release_mbcs/ \n    $env{directshow_sample_root}/baseclasses/release_mbcs/  \n    ${directshow_sample_root}/baseclasses/release/  \n    $env{directshow_sample_root}/baseclasses/release/ \n    doc \"location of directshow base library on the windows devkit\"\n    )"}, {"filenames": ["strmbasd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectShow.cmake", "content": "find_library(directshow_strmbase_library_debug strmbasd\n    paths\n    ${directshow_sample_root}/baseclasses/debug_mbcs/  \n    $env{directshow_sample_root}/baseclasses/debug_mbcs/  \n    ${directshow_sample_root}/baseclasses/debug/  \n    $env{directshow_sample_root}/baseclasses/debug/  \n    doc \"location of directshow base library on the windows devkit\"\n    )"}]}, {"deps": [{"depname": "openthreads", "version": null, "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openthreads", "openthreadswin32"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library \n    names openthreads openthreadswin32 \n    paths\n    $env{openthreads_library_dir}\n    $env{openthreads_dir}/lib64\n    $env{openthreads_dir}/lib\n    $env{openthreads_dir}\n    $env{osg_library_dir}\n    $env{osg_dir}/lib64\n    $env{osg_dir}/lib\n    $env{osg_dir}\n    $env{osgdir}/lib64\n    $env{osgdir}/lib\n    $env{osgdir}\n    no_default_path\n)"}, {"filenames": ["openthreads", "openthreadswin32"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library \n    names openthreads openthreadswin32 \n  paths ${cmake_prefix_path} \n    no_default_path\n    path_suffixes lib64 lib\n)"}, {"filenames": ["openthreads", "openthreadswin32"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library \n    names openthreads openthreadswin32 \n    paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib64\n    /usr/local/lib\n    /usr/lib64\n    /usr/lib\n    /sw/lib64\n    /sw/lib\n    /opt/local/lib64\n    /opt/local/lib\n    /opt/csw/lib64\n    /opt/csw/lib\n    /opt/lib64\n    /opt/lib\n    [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;openthreads_root]/lib\n    [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;osg_root]/lib\n)"}, {"filenames": ["openthreadsd", "openthreadswin32d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library_debug \n    names openthreadsd openthreadswin32d\n    paths\n    $env{openthreads_debug_library_dir}\n    $env{openthreads_library_dir}\n    $env{openthreads_dir}/lib64\n    $env{openthreads_dir}/lib\n    $env{openthreads_dir}\n    $env{osg_library_dir}\n    $env{osg_dir}/lib64\n    $env{osg_dir}/lib\n    $env{osg_dir}\n    $env{osgdir}/lib64\n    $env{osgdir}/lib\n    $env{osgdir}\n    no_default_path\n)"}, {"filenames": ["openthreadsd", "openthreadswin32d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library_debug \n    names openthreadsd openthreadswin32d\n    paths ${cmake_prefix_path} \n    no_default_path\n    path_suffixes lib64 lib\n)"}, {"filenames": ["openthreadsd", "openthreadswin32d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenThreads.cmake", "content": "find_library(openthreads_library_debug \n    names openthreadsd openthreadswin32d\n    paths\n    /usr/local/lib64\n    /usr/local/lib\n    /usr/lib64\n    /usr/lib\n    /sw/lib64\n    /sw/lib\n    /opt/local/lib64\n    /opt/local/lib\n    /opt/csw/lib64\n    /opt/csw/lib\n    /opt/lib64\n    /opt/lib\n    [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;openthreads_root]/lib\n    [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;osg_root]/lib\n)"}]}, {"deps": [{"depname": "v8", "version": null, "version_op": null, "unified_name": "v8", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindV8.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["v8", "libv8"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindV8.cmake", "content": "find_library(v8_library\n    names v8 libv8\n    paths\n    $env{v8_dir}/lib\n    $env{v8_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}]}, {"deps": [{"depname": "inventor", "version": null, "version_op": null, "unified_name": "inventor", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coin5", "coin4", "coin3", "coin2", "coin1", "coin"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_library_release\n    names coin5 coin4 coin3 coin2 coin1 coin\n    paths ${coin_prefix}/lib\n          $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["coin5", "coin4", "coin3", "coin2", "coin1", "coin"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_library_release\n    names coin5 coin4 coin3 coin2 coin1 coin\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["inventor"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_library_release\n    names inventor\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["coin5d", "coin4d", "coin3d", "coin2d", "coin1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_library_debug\n    names coin5d coin4d coin3d coin2d coin1d\n    paths ${coin_prefix}/lib\n          $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["coin5d", "coin4d", "coin3d", "coin2d", "coin1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_library_debug\n    names coin5d coin4d coin3d coin2d coin1d\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["sowin1"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_sowin_library\n    names sowin1\n    paths $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["sowin1"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_sowin_library\n    names sowin1\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["sowin1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_sowin_library_debug\n    names sowin1d\n    paths $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["sowin1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_sowin_library_debug\n    names sowin1d\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["soxt1", "soxt"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_soxt_library\n    names soxt1 soxt\n    paths ${soxt_prefix}/lib\n          $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["soxt1", "soxt"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_soxt_library\n    names soxt1 soxt\n    paths ${inventor_lib_search_path}\n)"}, {"filenames": ["soxt1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_soxt_library_debug\n    names soxt1d\n    paths ${soxt_prefix}/lib\n          $env{coindir}/lib\n    no_default_path\n)"}, {"filenames": ["soxt1d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindInventor.cmake", "content": "find_library(inventor_soxt_library_debug\n    names soxt1d\n    paths ${inventor_lib_search_path}\n)"}]}, {"deps": [{"depname": "coremedia", "version": null, "version_op": null, "unified_name": "coremedia", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCoreMedia.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["coremedia"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCoreMedia.cmake", "content": "find_library(coremedia_library coremedia)"}]}, {"deps": [{"depname": "collada", "version": null, "version_op": null, "unified_name": "collada", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "confidence": "High"}, {"depname": "libxml2", "version": null, "version_op": null, "unified_name": "xml2", "extractor_type": "cmake", "context": "find_package(libxml2)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["collada_dom", "collada14dom", "collada14dom", "libcollada14dom21", "libcollada14dom22", "collada-dom2.5-dp", "collada-dom2.5-dp-linux-mt", "collada-dom2.4-dp", "collada-dom2.4-dp-linux-mt"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_dynamic_library\n    names collada_dom collada14dom collada14dom libcollada14dom21 libcollada14dom22 collada-dom2.5-dp collada-dom2.5-dp-linux-mt collada-dom2.4-dp collada-dom2.4-dp-linux-mt\n    paths\n    ${collada_dom_root}/build/linux-1.4\n    ${collada_dom_root}\n    $env{collada_dir}/build/linux-1.4\n    $env{collada_dir}/lib\n    $env{collada_dir}/lib-dbg\n    $env{collada_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /opt/local/library/frameworks \n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n    ${actual_3dparty_dir}/lib\n)"}, {"filenames": ["collada_dom-d", "collada14dom-d", "collada14dom-d", "libcollada14dom21-d", "libcollada14dom22-d", "collada-dom2.5-dp-d", "collada-dom2.5-dp-linux-mt-d", "collada-dom2.4-dp-d", "collada-dom2.4-dp-linux-mt-d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_dynamic_library_debug\n    names collada_dom-d collada14dom-d collada14dom-d libcollada14dom21-d libcollada14dom22-d  collada-dom2.5-dp-d collada-dom2.5-dp-linux-mt-d collada-dom2.4-dp-d collada-dom2.4-dp-linux-mt-d\n    paths\n    ${collada_dom_root}/build/linux-1.4-d\n    ${collada_dom_root}\n    $env{collada_dir}/build/linux-1.4-d\n    $env{collada_dir}/lib\n    $env{collada_dir}/lib-dbg\n    $env{collada_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /opt/local/library/frameworks \n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n    ${actual_3dparty_dir}/lib\n)"}, {"filenames": ["libcollada14dom21-s", "libcollada14dom22-s", "libcollada14dom.a"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_static_library\n    names libcollada14dom21-s  libcollada14dom22-s libcollada14dom.a\n    paths\n    ${collada_dom_root}/build/linux-1.4\n    $env{collada_dir}/build/linux-1.4\n    $env{collada_dir}/lib\n    $env{collada_dir}/lib-dbg\n    $env{collada_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /opt/local/library/frameworks \n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n    ${actual_3dparty_dir}/lib\n)"}, {"filenames": ["collada_dom-sd", "collada14dom-sd", "libcollada14dom21-sd", "libcollada14dom22-sd", "libcollada14dom-d.a"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_static_library_debug\n    names collada_dom-sd collada14dom-sd libcollada14dom21-sd libcollada14dom22-sd libcollada14dom-d.a\n    paths\n    ${collada_dom_root}/build/linux-1.4-d\n    $env{collada_dir}/build/linux-1.4-d\n    $env{collada_dir}/lib\n    $env{collada_dir}/lib-dbg\n    $env{collada_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /opt/local/library/frameworks \n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n    ${actual_3dparty_dir}/lib\n)"}, {"filenames": ["libxml2"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_libxml_library\n                names libxml2\n                paths\n                ${collada_dom_root}/external-libs/libxml2/win32/lib\n                ${collada_dom_root}/external-libs/libxml2/mingw/lib\n                ${actual_3dparty_dir}/lib\n            )"}, {"filenames": ["zlib"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_zlib_library\n                names zlib\n                paths\n                ${collada_dom_root}/external-libs/libxml2/win32/lib\n                ${collada_dom_root}/external-libs/libxml2/mingw/lib\n                ${actual_3dparty_dir}/lib\n            )"}, {"filenames": ["pcrecpp"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_pcrecpp_library\n        names pcrecpp\n        paths\n        ${collada_dom_root}/external-libs/pcre/lib/linux\n        ${collada_dom_root}/external-libs/pcre/lib/mac\n        ${collada_dom_root}/external-libs/pcre/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["pcrecpp-d", "pcrecppd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_pcrecpp_library_debug\n        names pcrecpp-d pcrecppd\n        paths\n        ${collada_dom_root}/external-libs/pcre/lib/linux\n        ${collada_dom_root}/external-libs/pcre/lib/mac\n        ${collada_dom_root}/external-libs/pcre/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["pcre"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_pcre_library\n        names pcre\n        paths\n        ${collada_dom_root}/external-libs/pcre/lib/linux\n        ${collada_dom_root}/external-libs/pcre/lib/mac\n        ${collada_dom_root}/external-libs/pcre/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["pcre-d", "pcred"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_pcre_library_debug\n        names pcre-d pcred\n        paths\n        ${collada_dom_root}/external-libs/pcre/lib/linux\n        ${collada_dom_root}/external-libs/pcre/lib/mac\n        ${collada_dom_root}/external-libs/pcre/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["minizip"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_minizip_library\n        names minizip\n        paths\n        ${collada_dom_root}/external-libs/minizip/win32/lib\n        ${collada_dom_root}/external-libs/minizip/mac\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["minizip-d", "minizipd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_minizip_library_debug\n        names minizip-d minizipd\n        paths\n        ${collada_dom_root}/external-libs/minizip/win32/lib\n        ${collada_dom_root}/external-libs/minizip/mac\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["libboost_filesystem", "boost_filesystem", "boost_filesystem-mt", "libboost_filesystem-linux-mt", "libboost_filesystem-linux-mt-1_54", "libboost_filesystem-linux-mt-1_55", "libboost_filesystem-linux-mt-1_58", "boost_filesystem-linux-mt-1_62", "boost_filesystem-linux-mt-1_63"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_boost_filesystem_library\n        names libboost_filesystem boost_filesystem boost_filesystem-mt libboost_filesystem-linux-mt libboost_filesystem-linux-mt-1_54 libboost_filesystem-linux-mt-1_55 libboost_filesystem-linux-mt-1_58 boost_filesystem-linux-mt-1_62 boost_filesystem-linux-mt-1_63\n        paths\n        ${collada_dom_root}/external-libs/boost/lib/linux\n        ${collada_dom_root}/external-libs/boost/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["libboost_filesystem-d", "boost_filesystem-d", "boost_filesystem-mt-d", "libboost_filesystem-linux-mt-gd", "libboost_filesystem-linux-mt-gd-1_54", "libboost_filesystem-linux-mt-gd-1_55", "libboost_filesystem-linux-mt-gd-1_58", "boost_filesystem-linux-mt-gd-1_62", "boost_filesystem-linux-mt-gd-1_63"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_boost_filesystem_library_debug\n        names libboost_filesystem-d boost_filesystem-d boost_filesystem-mt-d libboost_filesystem-linux-mt-gd libboost_filesystem-linux-mt-gd-1_54 libboost_filesystem-linux-mt-gd-1_55 libboost_filesystem-linux-mt-gd-1_58 boost_filesystem-linux-mt-gd-1_62 boost_filesystem-linux-mt-gd-1_63\n        paths\n        ${collada_dom_root}/external-libs/boost/lib/linux\n        ${collada_dom_root}/external-libs/boost/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["libboost_system", "boost_system", "boost_system-mt", "libboost_system-linux-mt", "libboost_system-linux-mt-1_54", "libboost_system-linux-mt-1_55", "libboost_system-linux-mt-1_58", "boost_system-linux-mt-1_62", "boost_system-linux-mt-1_63"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_boost_system_library\n        names libboost_system boost_system boost_system-mt libboost_system-linux-mt libboost_system-linux-mt-1_54 libboost_system-linux-mt-1_55  libboost_system-linux-mt-1_58 boost_system-linux-mt-1_62 boost_system-linux-mt-1_63\n        paths\n        ${collada_dom_root}/external-libs/boost/lib/linux\n        ${collada_dom_root}/external-libs/boost/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}, {"filenames": ["libboost_system-d", "boost_system-d", "boost_system-mt-d", "libboost_system-linux-mt-gd", "libboost_system-linux-mt-gd-1_54", "libboost_system-linux-mt-gd-1_55", "libboost_system-linux-mt-gd-1_58", "boost_system-linux-mt-gd-1_62", "boost_system-linux-mt-gd-1_63"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindCOLLADA.cmake", "content": "find_library(collada_boost_system_library_debug\n        names libboost_system-d boost_system-d boost_system-mt-d libboost_system-linux-mt-gd libboost_system-linux-mt-gd-1_54 libboost_system-linux-mt-gd-1_55 libboost_system-linux-mt-gd-1_58 boost_system-linux-mt-gd-1_62 boost_system-linux-mt-gd-1_63\n        paths\n        ${collada_dom_root}/external-libs/boost/lib/linux\n        ${collada_dom_root}/external-libs/boost/lib/mingw\n        ${actual_3dparty_dir}/lib\n    )"}]}, {"deps": [{"depname": "xine", "version": null, "version_op": null, "unified_name": "xine", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindXine.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xine"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindXine.cmake", "content": "find_library(xine_library \n    names xine\n    paths\n    $env{xine_dir}/lib\n    $env{xine_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}]}, {"deps": [{"depname": "asio", "version": null, "version_op": null, "unified_name": "asio", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindAsio.cmake", "confidence": "High"}, {"depname": "boost", "version": "1.37", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package( boost 1.37 )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "lua52", "version": null, "version_op": null, "unified_name": "lua52", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLua52.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["lua52", "lua5.2", "lua-5.2", "lua"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLua52.cmake", "content": "find_library(lua_library\n  names lua52 lua5.2 lua-5.2 lua\n  hints\n    env lua_dir\n  path_suffixes lib\n  paths\n  ~/library/frameworks\n  /library/frameworks\n  /sw\n  /opt/local\n  /opt/csw\n  /opt\n)"}, {"filenames": ["m"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLua52.cmake", "content": "find_library(lua_math_library m)"}]}, {"deps": [{"depname": "opencascade", "version": null, "version_op": null, "unified_name": "opencascade", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenCascade.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"${mylibraryname}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenCascade.cmake", "content": "find_library(\"${mylibrary}\"\n        names \"${mylibraryname}\"\n        paths\n        $env{opencascade_dir}/lib}\n        $env{opencascade_lib}\n        ${opencascade_dir}/lib\n        $env{opencascade_dir}/lib\n        ${opencascade_dir}/lib/\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n        )"}]}, {"deps": [{"depname": "performer", "version": null, "version_op": null, "unified_name": "performer", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindPerformer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libpf"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindPerformer.cmake", "content": "find_library(performer_library \n        names libpf\n        paths\n        $env{pfroot}/lib\n        $env{pfroot}\n        $env{performer_dir}/lib\n        $env{performer_dir}\n        $env{osgdir}/lib\n        $env{osgdir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}, {"filenames": ["pf"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindPerformer.cmake", "content": "find_library(performer_library \n        names pf\n        paths\n        $env{pfroot}/lib\n        $env{pfroot}\n        $env{performer_dir}/lib\n        $env{performer_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [{"depname": "directinput", "version": null, "version_op": null, "unified_name": "directinput", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectInput.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dinput7.lib"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectInput.cmake", "content": "find_library( directinput_library dinput7.lib dinput8.lib\n                  paths\n                  ${directinput_root_dir}/lib/x86\n    )"}, {"filenames": ["dxguid.lib"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectInput.cmake", "content": "find_library( directinput_guid_library dxguid.lib\n                  paths\n                  ${directinput_root_dir}/lib/x86\n    )"}, {"filenames": ["dxerr.lib"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindDirectInput.cmake", "content": "find_library( directinput_err_library dxerr.lib\n                  paths\n                  ${directinput_root_dir}/lib/x86\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glib", "version": null, "version_op": null, "unified_name": "glib", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libg", "version": null, "version_op": null, "unified_name": "g", "extractor_type": "cmake", "context": "    set(glib_version \"${cmake_match_1}.${cmake_match_1}.${cmake_match_1}\")", "confidence": "Low"}, {"depname": "glib", "version": "2.0", "version_op": "=", "unified_name": "glib", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_glib quiet glib-2.0)", "confidence": "High"}, {"depname": "gio-unix", "version": "2.0", "version_op": "=", "unified_name": "gio-unix", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(gio_unix quiet gio-unix-2.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glib-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_libraries\n        names glib-2.0\n        paths c:/gstreamer/1.0/x86_64/lib\n    )"}, {"filenames": ["glib-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_libraries\n        names glib-2.0\n        hints ${pc_glib_libdir}\n              ${pc_glib_library_dirs}\n    )"}, {"filenames": ["gio-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_gio_libraries names gio-2.0 hints ${_glib_library_dir})"}, {"filenames": ["gobject-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_gobject_libraries names gobject-2.0 hints ${_glib_library_dir})"}, {"filenames": ["gmodule-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_gmodule_libraries names gmodule-2.0 hints ${_glib_library_dir})"}, {"filenames": ["gthread-2.0"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGLIB.cmake", "content": "find_library(glib_gthread_libraries names gthread-2.0 hints ${_glib_library_dir})"}]}, {"deps": [{"depname": "fontconfig", "version": null, "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFontconfig.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "fontconfig", "version": null, "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake", "context": "set(fontconfig_version ${pkg_fontconfig_version})", "confidence": "Low"}, {"depname": "fontconfig", "version": "1", "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake", "context": "          set(fontconfig_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "fontconfig", "version": null, "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkg_fontconfig quiet fontconfig)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["fontconfig"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFontconfig.cmake", "content": "find_library( fontconfig_library\n  names\n    fontconfig\n  paths\n    ${pkg_fontconfig_library_dirs}\n)"}]}, {"deps": [{"depname": "jasper", "version": null, "version_op": null, "unified_name": "jasper", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindJasper.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jasper", "libjasper"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindJasper.cmake", "content": "find_library(jasper_library \n    names jasper libjasper\n    paths\n    $env{jasper_dir}/lib\n    $env{jasper_dir}/src/libjasper/lib\n    $env{jasper_dir}/src/msvc/win32_release\n    $env{jasper_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}, {"filenames": ["jasper", "libjasper", "jasperd", "libjasperd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindJasper.cmake", "content": "find_library(jasper_library_debug\n    names jasper libjasper jasperd libjasperd\n    paths\n    $env{jasper_dir}/lib\n    $env{jasper_dir}/src/libjasper/lib\n    $env{jasper_dir}/src/msvc/win32_debug\n    $env{jasper_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}]}, {"deps": [{"depname": "zeroconf", "version": null, "version_op": null, "unified_name": "zeroconf", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindZeroConf.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dnssd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindZeroConf.cmake", "content": "find_library(zeroconf_library dnssd\n      paths ${cmake_prefix_path} \n      no_default_path\n      path_suffixes lib64 lib\n    )"}, {"filenames": ["dnssd"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindZeroConf.cmake", "content": "find_library(zeroconf_library dnssd)"}]}, {"deps": [{"depname": "avfoundation", "version": null, "version_op": null, "unified_name": "avfoundation", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindAVFoundation.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["avfoundation"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindAVFoundation.cmake", "content": "find_library(av_foundation_library avfoundation)"}]}, {"deps": [{"depname": "3rdpartydependencies", "version": null, "version_op": null, "unified_name": "3rdpartydependencies", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/Find3rdPartyDependencies.cmake", "confidence": "High"}, {"depname": "nvtt", "version": null, "version_op": null, "unified_name": "nvtt", "extractor_type": "cmake", "context": "find_package(nvtt)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": [], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/Find3rdPartyDependencies.cmake", "content": "find_library(\"${depname}_library\"\n        names \n      paths \n      no_default_path\n    )"}, {"filenames": [], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/Find3rdPartyDependencies.cmake", "content": "find_library(\"${depname}_library_debug\"\n        names \n      paths \n      no_default_path\n    )"}]}, {"deps": [{"depname": "libvncserver", "version": null, "version_op": null, "unified_name": "vncserver", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLibVNCServer.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vncclient"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLibVNCServer.cmake", "content": "find_library(libvncclient_library \n    names vncclient\n    paths\n    $env{libvncserver_dir}/lib\n    $env{libvncserver_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}, {"filenames": ["vncserver"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLibVNCServer.cmake", "content": "find_library(libvncserver_library \n    names vncserver\n    paths\n    $env{libvncserver_dir}/lib\n    $env{libvncserver_dir}\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/lib\n    /sw/lib\n    /opt/local/lib\n    /opt/csw/lib\n    /opt/lib\n    /usr/freeware/lib64\n)"}]}, {"deps": [{"depname": "fltk", "version": null, "version_op": null, "unified_name": "fltk", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFLTK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${mylibraryname}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindFLTK.cmake", "content": "find_library(${mylibrary}\n        names ${mylibraryname}\n        paths\n        $env{fltk_dir}/lib\n        $env{fltk_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["${library}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/UtilityMacros.cmake", "content": "find_library(\"${depname}_library\" \n        names ${library}\n        paths \n        )"}]}, {"deps": [{"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindEGL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["egl", "libegl.dll.lib"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindEGL.cmake", "content": "find_library(egl_library\n    names egl libegl.dll.lib\n    paths env egl_dir\n)"}]}, {"deps": [{"depname": "liblas", "version": null, "version_op": null, "unified_name": "las", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLIBLAS.cmake", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"${mylibraryname}${cmake_debug_postfix}\"", "\"lib${mylibraryname}${cmake_debug_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLIBLAS.cmake", "content": "find_library(\n     \"${mylibrary}_debug\"\n     names \"${mylibraryname}${cmake_debug_postfix}\" \"lib${mylibraryname}${cmake_debug_postfix}\"\n     paths\n     ${liblas_dir}/lib/debug\n     ${liblas_dir}/lib64/debug\n     ${liblas_dir}/lib\n     ${liblas_dir}/lib64\n     $env{liblas_dir}/lib/debug\n     $env{liblas_dir}/lib64/debug\n     no_default_path\n   )"}, {"filenames": ["\"${mylibraryname}${cmake_debug_postfix}\"", "\"lib${mylibraryname}${cmake_debug_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLIBLAS.cmake", "content": "find_library(\n     \"${mylibrary}_debug\"\n     names \"${mylibraryname}${cmake_debug_postfix}\" \"lib${mylibraryname}${cmake_debug_postfix}\"\n     paths\n     ~/library/frameworks\n     /library/frameworks\n     /usr/local/lib\n     /usr/local/lib64\n     /usr/lib\n     /usr/lib64\n     /sw/lib\n     /opt/local/lib\n     /opt/csw/lib\n     /opt/lib\n     [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;liblas_root]/lib\n     /usr/freeware/lib64\n   )"}, {"filenames": ["\"${mylibraryname}${cmake_release_postfix}\"", "\"lib${mylibraryname}${cmake_release_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLIBLAS.cmake", "content": "find_library(\n     ${mylibrary}\n     names \"${mylibraryname}${cmake_release_postfix}\" \"lib${mylibraryname}${cmake_release_postfix}\"\n     paths\n     ${liblas_dir}/lib/release\n     ${liblas_dir}/lib64/release\n     ${liblas_dir}/lib\n     ${liblas_dir}/lib64\n     $env{liblas_dir}/lib/release\n     $env{liblas_dir}/lib64/release\n     $env{liblas_dir}/lib\n     $env{liblas_dir}/lib64\n     $env{liblas_dir}\n     $env{liblasdir}/lib\n     $env{liblasdir}/lib64\n     $env{liblasdir}\n     $env{liblas_root}/lib\n     $env{liblas_root}/lib64\n     no_default_path\n   )"}, {"filenames": ["\"${mylibraryname}${cmake_release_postfix}\"", "\"lib${mylibraryname}${cmake_release_postfix}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindLIBLAS.cmake", "content": "find_library(\n     ${mylibrary}\n     names \"${mylibraryname}${cmake_release_postfix}\" \"lib${mylibraryname}${cmake_release_postfix}\"\n     paths\n     ~/library/frameworks\n     /library/frameworks\n     /usr/local/lib\n     /usr/local/lib64\n     /usr/lib\n     /usr/lib64\n     /sw/lib\n     /opt/local/lib\n     /opt/csw/lib\n     /opt/lib\n     [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;liblas_root]/lib\n     /usr/freeware/lib64\n   )"}]}, {"deps": [{"depname": "ilmbase", "version": null, "version_op": null, "unified_name": "ilmbase", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/Findilmbase.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libname}", "${libname}-2_1", "${libname}-2_2"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/Findilmbase.cmake", "content": "find_library( ${varname}\n        names ${libname} ${libname}-2_1 ${libname}-2_2\n        paths\n        $env{ilmbase_dir}/lib\n        $env{ilmbase_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gstreamer", "version": null, "version_op": null, "unified_name": "gstreamer", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGStreamer.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "gstreamer", "version": null, "version_op": null, "unified_name": "gstreamer", "extractor_type": "cmake", "context": "\n        set(gstreamer_version \"${cmake_match_1}.${cmake_match_1}.${cmake_match_1}\")", "confidence": "Low"}, {"depname": "${_pkgconfig_name}", "version": null, "version_op": null, "unified_name": "${_pkgconfig_name}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(${_component_prefix} quiet ${_pkgconfig_name})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGStreamer.cmake", "content": "find_library(${_component_prefix}_libraries\n            names ${_library}\n            paths c:/gstreamer/1.0/x86_64/lib\n        )"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libname}", "${libname}-2_1", "${libname}-2_2"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindOpenEXR.cmake", "content": "find_library( ${varname}\n        names ${libname} ${libname}-2_1 ${libname}-2_2\n        paths\n        $env{openexr_dir}/lib\n        $env{openexr_dir}\n        ~/library/frameworks\n        /library/frameworks\n        /usr/local/lib\n        /usr/lib\n        /sw/lib\n        /opt/local/lib\n        /opt/csw/lib\n        /opt/lib\n        /usr/freeware/lib64\n    )"}]}, {"deps": [{"depname": "quartzcore", "version": null, "version_op": null, "unified_name": "quartzcore", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuartzCore.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["quartzcore"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindQuartzCore.cmake", "content": "find_library(quartzcore_library quartzcore)"}]}, {"deps": [{"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "set(valid_builder_version off)", "confidence": "Low"}, {"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "    set(valid_builder_version off)", "confidence": "Low"}, {"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "        set(valid_builder_version on)", "confidence": "Low"}, {"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "            set(valid_builder_version on)", "confidence": "Low"}, {"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "                set(valid_builder_version on)", "confidence": "Low"}, {"depname": "valid_builder", "version": null, "version_op": null, "unified_name": "valid_builder", "extractor_type": "cmake", "context": "\nset(valid_builder_version off)", "confidence": "Low"}, {"depname": "macosx_bundle_bundle", "version": null, "version_op": null, "unified_name": "macosx_bundle_bundle", "extractor_type": "cmake", "context": "            set(macosx_bundle_bundle_version \"${openscenegraph_major_version}.${openscenegraph_minor_version}.${openscenegraph_patch_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "nvtt", "version": null, "version_op": null, "unified_name": "nvtt", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvtt"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvtt_library_release\n  names nvtt\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvtt_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvtt_library_debug\n  names nvtt_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvimage"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvimage_library_release\n  names nvimage\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvimage_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvimage_library_debug\n  names nvimage_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvmath"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvmath_library_release\n  names nvmath\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvmath_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvmath_library_debug\n  names nvmath_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvcore"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvcore_library_release\n  names nvcore\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvcore_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvcore_library_debug\n  names nvcore_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvthread"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvthread_library_release\n  names nvthread\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["nvthread_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvthread_library_debug\n  names nvthread_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["squish"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvsquish_library_release\n  names squish\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["squish_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvsquish_library_debug\n  names squish_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["bc6h"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvbc6h_library_release\n  names bc6h\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["bc6h_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvbc6h_library_debug\n  names bc6h_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["bc7"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvbc7_library_release\n  names bc7\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}, {"filenames": ["bc7_d"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindNVTT.cmake", "content": "find_library(nvbc7_library_debug\n  names bc7_d\n  paths\n  /usr/local\n  /usr\n  $env{nvtt_dir}\n  ${3rdpartyroot}\n  path_suffixes lib64 lib lib/shared lib/static lib64/static\n)"}]}, {"deps": [{"depname": "gdal", "version": null, "version_op": null, "unified_name": "gdal", "extractor_type": "cmake", "context": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGDAL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gdal", "gdal_i", "gdal1.7.0", "gdal1.6.0", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGDAL.cmake", "content": "find_library(gdal_library \n  names gdal gdal_i gdal1.7.0 gdal1.6.0 gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  paths\n  $env{gdal_dir}\n  no_default_path\n  path_suffixes lib64 lib\n)"}, {"filenames": ["gdal", "gdal_i", "gdal1.7.0", "gdal1.6.0", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGDAL.cmake", "content": "find_library(gdal_library \n  names gdal gdal_i gdal1.7.0 gdal1.6.0 gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  paths ${cmake_prefix_path} \n    no_default_path\n    path_suffixes lib64 lib\n)"}, {"filenames": ["gdal", "gdal_i", "gdal1.7.0", "gdal1.6.0", "gdal1.5.0", "gdal1.4.0", "gdal1.3.2", "gdal"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/CMakeModules/FindGDAL.cmake", "content": "find_library(gdal_library \n  names gdal gdal_i gdal1.7.0 gdal1.6.0 gdal1.5.0 gdal1.4.0 gdal1.3.2 gdal\n  paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local\n    /usr\n    /sw\n    /opt/local\n    /opt/csw\n    /opt\n    /usr/freeware\n    [hkey_local_machine\\\\system\\\\currentcontrolset\\\\control\\\\session\\ manager\\\\environment;gdal_root]/lib\n  path_suffixes lib64 lib\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openthreads", "version": null, "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "find_package(openthreads)", "confidence": "High"}, {"depname": "osg", "version": null, "version_op": null, "unified_name": "osg", "extractor_type": "cmake", "context": "find_package(osg)", "confidence": "High"}, {"depname": "osgdb", "version": null, "version_op": null, "unified_name": "osgdb", "extractor_type": "cmake", "context": "find_package(osgdb)", "confidence": "High"}, {"depname": "osgutil", "version": null, "version_op": null, "unified_name": "osgutil", "extractor_type": "cmake", "context": "find_package(osgutil)", "confidence": "High"}, {"depname": "osgga", "version": null, "version_op": null, "unified_name": "osgga", "extractor_type": "cmake", "context": "find_package(osgga)", "confidence": "High"}, {"depname": "osgviewer", "version": null, "version_op": null, "unified_name": "osgviewer", "extractor_type": "cmake", "context": "find_package(osgviewer)", "confidence": "High"}, {"depname": "osgcmakeexample", "version": null, "version_op": null, "unified_name": "osgcmakeexample", "extractor_type": "cmake", "context": "project(osgcmakeexample)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openscenegraph", "version": null, "version_op": null, "unified_name": "openscenegraph", "extractor_type": "cmake", "context": "find_package (openscenegraph required components osgutil osgdb osgtext osgga osgfx osgsim osgviewer config)", "confidence": "High"}, {"depname": "osgcmakeexamplemodern", "version": null, "version_op": null, "unified_name": "osgcmakeexamplemodern", "extractor_type": "cmake", "context": "project(osgcmakeexamplemodern)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "\"nsl\"", "version": null, "version_op": null, "unified_name": "\"nsl\"", "extractor_type": "cmake", "context": "check_library_exists(\"nsl\" \"gethostbyname\" \"\" lib_nsl_has_gethostbyname)", "confidence": "High"}, {"depname": "\"socket\"", "version": null, "version_op": null, "unified_name": "\"socket\"", "extractor_type": "cmake", "context": "check_library_exists(\"socket\" \"socket\" \"\" lib_socket_has_socket)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osg_plugins_master", "version": null, "version_op": null, "unified_name": "osg_plugins_master", "extractor_type": "cmake", "context": "project(osg_plugins_master)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osg_plugins_master", "version": null, "version_op": null, "unified_name": "osg_plugins_master", "extractor_type": "cmake", "context": "project(osg_plugins_master)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "xrandr", "version": null, "version_op": null, "unified_name": "xrandr", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(xrandr xrandr)", "confidence": "High"}, {"depname": "xinerama", "version": null, "version_op": null, "unified_name": "xinerama", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(xinerama xinerama)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "openthreads_major", "version": "3", "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "\nset(openthreads_major_version 3)", "confidence": "Low"}, {"depname": "openthreads_minor", "version": "3", "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "set(openthreads_minor_version 3)", "confidence": "Low"}, {"depname": "openthreads_patch", "version": "1", "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "set(openthreads_patch_version 1)", "confidence": "Low"}, {"depname": "openthreads", "version": "3.3.1", "version_op": null, "unified_name": "openthreads", "extractor_type": "cmake", "context": "\nset(openthreads_version 3.3.1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists(rt sched_yield \"\" have_sched_yield)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fontconfig", "version": null, "version_op": null, "unified_name": "fontconfig", "extractor_type": "cmake", "context": "find_package(fontconfig module)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "osg_plugins_master", "version": null, "version_op": null, "unified_name": "osg_plugins_master", "extractor_type": "cmake", "context": "project(osg_plugins_master)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["systemconfiguration"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/src/osgPlugins/fbx/CMakeLists.txt", "content": "find_library(sys_config_library systemconfiguration )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package( ${argn} )", "confidence": "High"}, {"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set( cmake_system_version 1 )", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["\"${_ndk_ccache}\""], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/PlatformSpecifics/Android/android.toolchain.cmake", "content": "find_program( ndk_ccache \"${_ndk_ccache}\" doc \"the path to ccache binary\")"}, {"filenames": ["install_name_tool"], "version": "", "fromfile": "openscenegraph@@OpenSceneGraph/PlatformSpecifics/Android/android.toolchain.cmake", "content": "find_program( cmake_install_name_tool names install_name_tool )"}]}, {"deps": [{"depname": "osgcore", "version": null, "version_op": null, "unified_name": "osgcore", "extractor_type": "cmake", "context": "find_package(osgcore)", "confidence": "High"}, {"depname": "osg_applications", "version": null, "version_op": null, "unified_name": "osg_applications", "extractor_type": "cmake", "context": "project(osg_applications)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "\"nsl\"", "version": null, "version_op": null, "unified_name": "\"nsl\"", "extractor_type": "cmake", "context": "check_library_exists(\"nsl\" \"gethostbyname\" \"\" lib_nsl_has_gethostbyname)", "confidence": "High"}, {"depname": "\"socket\"", "version": null, "version_op": null, "unified_name": "\"socket\"", "extractor_type": "cmake", "context": "check_library_exists(\"socket\" \"socket\" \"\" lib_socket_has_socket)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}