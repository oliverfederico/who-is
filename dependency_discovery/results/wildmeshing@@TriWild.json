{"target": "wildmeshing@@TriWild", "extractors": [{"deps": [{"depname": "libigl", "version": null, "version_op": null, "unified_name": "igl", "extractor_type": "cmake", "context": "find_package(libigl required quiet)", "confidence": "High"}, {"depname": "gmptriwild", "version": null, "version_op": null, "unified_name": "gmptriwild", "extractor_type": "cmake", "context": "find_package(gmptriwild)", "confidence": "High"}, {"depname": "triwild", "version": null, "version_op": null, "unified_name": "triwild", "extractor_type": "cmake", "context": "project(triwild)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libigl", "version": null, "version_op": null, "unified_name": "igl", "extractor_type": "cmake", "context": "wildmeshing@@TriWild/cmake/FindLIBIGL.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmptriwild", "version": null, "version_op": null, "unified_name": "gmptriwild", "extractor_type": "cmake", "context": "wildmeshing@@TriWild/cmake/FindGMPTriWild.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gmp", "libgmp"], "version": "", "fromfile": "wildmeshing@@TriWild/cmake/FindGMPTriWild.cmake", "content": "find_library(gmp_libraries names gmp libgmp paths $env{gmp_lib} ${gmp_windows_path})"}, {"filenames": ["gmpxx", "libgmpxx"], "version": "", "fromfile": "wildmeshing@@TriWild/cmake/FindGMPTriWild.cmake", "content": "find_library(gmpxx_libraries names gmpxx libgmpxx paths $env{gmp_lib} ${gmp_windows_path})"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}]}