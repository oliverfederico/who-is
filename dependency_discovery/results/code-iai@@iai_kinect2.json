{"target": "code-iai@@iai_kinect2", "extractors": [{"deps": [{"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required)", "confidence": "High"}, {"depname": "iai_kinect2", "version": null, "version_op": null, "unified_name": "iai_kinect2", "extractor_type": "cmake", "context": "project(iai_kinect2)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required components roscpp rostime std_msgs sensor_msgs message_filters cv_bridge image_transport compressed_image_transport compressed_depth_image_transport kinect2_bridge)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "kinect2_calibration", "version": null, "version_op": null, "unified_name": "kinect2_calibration", "extractor_type": "cmake", "context": "project(kinect2_calibration cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required components roscpp rostime std_msgs sensor_msgs message_filters cv_bridge image_transport compressed_image_transport compressed_depth_image_transport kinect2_bridge)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "pcl", "version": null, "version_op": null, "unified_name": "pcl", "extractor_type": "cmake", "context": "find_package(pcl required)", "confidence": "High"}, {"depname": "kinect2_viewer", "version": null, "version_op": null, "unified_name": "kinect2_viewer", "extractor_type": "cmake", "context": "project(kinect2_viewer cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required components roscpp)", "confidence": "High"}, {"depname": "cmake_modules", "version": null, "version_op": null, "unified_name": "cmake_modules", "extractor_type": "cmake", "context": "find_package(cmake_modules quiet)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3)", "confidence": "High"}, {"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl)", "confidence": "High"}, {"depname": "kinect2_registration", "version": null, "version_op": null, "unified_name": "kinect2_registration", "extractor_type": "cmake", "context": "project(kinect2_registration cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "code-iai@@iai_kinect2/kinect2_registration/cmake/FindOpenCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opencl"], "version": "", "fromfile": "code-iai@@iai_kinect2/kinect2_registration/cmake/FindOpenCL.cmake", "content": "find_library(opencl_library\n      names opencl\n      paths\n        env \"programfiles(x86)\"\n        env amdappsdkroot\n        env inteloclsdkroot\n        env cuda_path\n        env nvsdkcompute_root\n        env atistreamsdkroot\n      path_suffixes\n        \"amd app/lib/x86\"\n        lib/x86\n        lib/win32\n        opencl/common/lib/win32)"}, {"filenames": ["opencl"], "version": "", "fromfile": "code-iai@@iai_kinect2/kinect2_registration/cmake/FindOpenCL.cmake", "content": "find_library(opencl_library\n      names opencl\n      paths\n        env \"programfiles(x86)\"\n        env amdappsdkroot\n        env inteloclsdkroot\n        env cuda_path\n        env nvsdkcompute_root\n        env atistreamsdkroot\n      path_suffixes\n        \"amd app/lib/x86_64\"\n        lib/x86_64\n        lib/x64\n        opencl/common/lib/x64)"}, {"filenames": ["opencl"], "version": "", "fromfile": "code-iai@@iai_kinect2/kinect2_registration/cmake/FindOpenCL.cmake", "content": "find_library(opencl_library\n    names opencl)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "freenect2", "version": null, "version_op": null, "unified_name": "freenect2", "extractor_type": "cmake", "context": "find_package(freenect2 required hints \"$env{home}/freenect2\")", "confidence": "High"}, {"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required components roscpp rostime tf std_msgs sensor_msgs nodelet cv_bridge compressed_depth_image_transport kinect2_registration)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "kinect2_bridge", "version": null, "version_op": null, "unified_name": "kinect2_bridge", "extractor_type": "cmake", "context": "project(kinect2_bridge cxx)", "confidence": ""}], "type": "cmake", "libs": []}]}