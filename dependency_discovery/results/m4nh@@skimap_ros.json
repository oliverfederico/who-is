{"target": "m4nh@@skimap_ros", "extractors": [{"deps": [{"depname": "catkin", "version": null, "version_op": null, "unified_name": "catkin", "extractor_type": "cmake", "context": "find_package(catkin required \n    cv_bridge\n    image_transport\n    pcl_ros\n    nav_msgs\n    std_msgs\n    geometry_msgs\n    message_generation\n    tf\n    tf_conversions\n    )", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "find_package(eigen3 required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required components core imgproc)", "confidence": "High"}, {"depname": "boost", "version": "1.50.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.50.0 required components random timer system)", "confidence": "High"}, {"depname": "skimap_ros", "version": null, "version_op": null, "unified_name": "skimap_ros", "extractor_type": "cmake", "context": "project(skimap_ros)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "g2o", "version": null, "version_op": null, "unified_name": "g2o", "extractor_type": "cmake", "context": "m4nh@@skimap_ros/cmake/Modules/FindG2O.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"g2o_${mylibraryname}_d\""], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindG2O.cmake", "content": "find_library(\"${mylibrary}_debug\"\n    names \"g2o_${mylibraryname}_d\"\n    paths\n    ${g2o_root}/lib/debug\n    ${g2o_root}/lib\n    $env{g2o_root}/lib/debug\n    $env{g2o_root}/lib\n    ${g2o_root}/bin/debug\n    ${g2o_root}/bin\n    $env{g2o_root}/bin/debug\n    $env{g2o_root}/bin\n    no_default_path\n    )"}, {"filenames": ["\"g2o_${mylibraryname}_d\""], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindG2O.cmake", "content": "find_library(\"${mylibrary}_debug\"\n    names \"g2o_${mylibraryname}_d\"\n    paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /opt/local/lib\n    /sw/local/lib\n    /sw/lib\n    )"}, {"filenames": ["\"g2o_${mylibraryname}\""], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindG2O.cmake", "content": "find_library(\"${mylibrary}_release\"\n    names \"g2o_${mylibraryname}\"\n    paths\n    ${g2o_root}/lib/release\n    ${g2o_root}/lib\n    $env{g2o_root}/lib/release\n    $env{g2o_root}/lib\n    ${g2o_root}/bin/release\n    ${g2o_root}/bin\n    $env{g2o_root}/bin/release\n    $env{g2o_root}/bin\n    no_default_path\n    )"}, {"filenames": ["\"g2o_${mylibraryname}\""], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindG2O.cmake", "content": "find_library(\"${mylibrary}_release\"\n    names \"g2o_${mylibraryname}\"\n    paths\n    ~/library/frameworks\n    /library/frameworks\n    /usr/local/lib\n    /usr/local/lib64\n    /usr/lib\n    /usr/lib64\n    /opt/local/lib\n    /sw/local/lib\n    /sw/lib\n    )"}]}, {"deps": [{"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "m4nh@@skimap_ros/cmake/Modules/FindEigen3.cmake", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "flann", "version": null, "version_op": null, "unified_name": "flann", "extractor_type": "cmake", "context": "m4nh@@skimap_ros/cmake/Modules/FindFLANN.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "flann", "version": "${flann_find_version}", "version_op": ">=", "unified_name": "flann", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_flann flann>=${flann_find_version})", "confidence": "High"}, {"depname": "flann", "version": null, "version_op": null, "unified_name": "flann", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_flann flann)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["flann_cpp"], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindFLANN.cmake", "content": "find_library(flann_library_release\n             names flann_cpp\n             hints ${pc_flann_libdir} ${pc_flann_library_dirs} \"${flann_root}\" \"$env{flann_root}\"\n             paths \"$env{programfiles}/flann\" \"$env{programw6432}/flann\" ${flann_root}/build/lib\n             path_suffixes lib)"}, {"filenames": ["flann_cpp-gd", "flann_cpp"], "version": "", "fromfile": "m4nh@@skimap_ros/cmake/Modules/FindFLANN.cmake", "content": "find_library(flann_library_debug\n             names flann_cpp-gd flann_cpp\n             hints ${pc_flann_libdir} ${pc_flann_library_dirs} \"${flann_root}\" \"$env{flann_root}\"\n             paths \"$env{programfiles}/flann\" \"$env{programw6432}/flann\" ${flann_root}/build/lib\n             path_suffixes lib)"}]}]}