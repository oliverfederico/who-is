{"target": "SWI-Prolog@@swipl", "extractors": [{"deps": [], "type": "gitsubmod"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "swi", "version": null, "version_op": null, "unified_name": "swi", "extractor_type": "cmake", "context": "project(swi-prolog)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["llvm-profdata"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/PGO.cmake", "content": "find_program(llvm_profdata names llvm-profdata\n             hints ${cmake_c_compiler_dir})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "libtcmalloc", "version": null, "version_op": null, "unified_name": "tcmalloc", "extractor_type": "cmake", "context": "SWI-Prolog@@swipl/cmake/FindLibTCMalloc.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libtcmalloc_minimal", "version": null, "version_op": null, "unified_name": "tcmalloc_minimal", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libtcmalloc_minimal quiet libtcmalloc_minimal)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcmalloc_minimal"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/FindLibTCMalloc.cmake", "content": "find_library(libtcmalloc_library names tcmalloc_minimal\n             hints ${pc_libtcmalloc_minimal_libdir}\n\t\t   ${pc_libtcmalloc_minimal_library_dirs} )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/GitVersion.cmake", "content": "find_program(git git)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "\nset(cpack_package_version ${swipl_version_string})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["apt"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/Pack.cmake", "content": "find_program(apt apt)"}, {"filenames": ["dnf"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/Pack.cmake", "content": "find_program(dnf dnf)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "SWI-Prolog@@swipl/cmake/FindGMP.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mpir", "mpird"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/FindGMP.cmake", "content": "find_library(gmp_libraries names mpir mpird\n                paths\n\t\t\t$env{gmp_root}\n\t\t\t$env{gmp_root}/lib\n\t\t\t${gmp_root}\n\t\t\t${gmp_root}/lib\n\t\t\t${cmake_source_dir}/../tools/mpir/lib\n\t\t\t${cmake_source_dir}/../tools/mpird/lib\n\t\t\t${cmake_source_dir}/../mpir/lib\n\t\t\t${cmake_source_dir}/../mpird/lib\n\n\t\t\t\t$env{programfiles}/mpir/lib\n\t\t\t$env{programfiles}/mpird/lib\n\t\t\t$env{home}/mpir/lib\n\t\t\t$env{home}/mpird/lib\n\t\t\t${cmake_install_prefix}/lib\n\t\t\tdoc \"try first the mpir dll when in an windows environment\"\n\t  )"}, {"filenames": ["gmp", "libgmp"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/FindGMP.cmake", "content": "find_library(gmp_libraries\n\t  names gmp\tlibgmp\n                hints\n                .\n\t\t\t$env{gmp_root}\n\t\t\t$env{gmp_root}/lib\n\t\t\t${gmp_root}\n\t\t\t\t\t\t${gmp_root}/lib\n\t\t\t/usr/local/opt/gmp/lib\n\t\t\t/opt/lib\n\t\t\t/usr/local/lib\n\t\t\t$env{home}/lib\n\t\t\t${cmake_install_prefix}/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "swipl", "version": null, "version_op": null, "unified_name": "swipl", "extractor_type": "cmake", "context": "  set(swipl_version    $env{swipl_version})", "confidence": "Low"}, {"depname": "swipl", "version": null, "version_op": null, "unified_name": "swipl", "extractor_type": "cmake", "context": "  set(swipl_version    $env{swiplversion})", "confidence": "Low"}, {"depname": "swipl", "version": null, "version_op": null, "unified_name": "swipl", "extractor_type": "cmake", "context": "  set(swipl_version    ${plversion})", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["swipl"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/swipl.cmake", "content": "find_library(swipl_libs\n    names swipl\n    paths \"${swipl_build_dir}/src\"\n    no_cmake_environment_path\n    no_cmake_find_root_path\n    no_cmake_path\n    no_cmake_system_path\n    no_default_path\n    no_package_root_path\n    no_system_environment_path)"}, {"filenames": ["swipl"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/swipl.cmake", "content": "find_program(swipl swipl required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "atomic", "version": null, "version_op": null, "unified_name": "atomic", "extractor_type": "cmake", "context": "check_library_exists(atomic __atomic_add_fetch_4 \"\" have_libatomic)", "confidence": "High"}, {"depname": "dl", "version": null, "version_op": null, "unified_name": "dl", "extractor_type": "cmake", "context": "check_library_exists(dl\tdlopen\t      \"\" have_libdl)", "confidence": "High"}, {"depname": "m", "version": null, "version_op": null, "unified_name": "m", "extractor_type": "cmake", "context": "check_library_exists(m\tsin\t      \"\" have_libm)", "confidence": "High"}, {"depname": "rt", "version": null, "version_op": null, "unified_name": "rt", "extractor_type": "cmake", "context": "check_library_exists(rt\tclock_gettime \"\" have_librt)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmp", "version": null, "version_op": null, "unified_name": "gmp", "extractor_type": "cmake", "context": "find_package(gmp)", "confidence": "High"}, {"depname": "curses", "version": null, "version_op": null, "unified_name": "curses", "extractor_type": "cmake", "context": "find_package(curses)", "confidence": "High"}, {"depname": "libtcmalloc", "version": null, "version_op": null, "unified_name": "tcmalloc", "extractor_type": "cmake", "context": "find_package(libtcmalloc)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 components widgets required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["macdeployqt"], "version": "", "fromfile": "SWI-Prolog@@swipl/cmake/port/Darwin.cmake", "content": "find_program(macos_deployqt names macdeployqt)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "socket", "version": null, "version_op": null, "unified_name": "socket", "extractor_type": "cmake", "context": "check_library_exists(socket    socket      \"\" have_libsocket)", "confidence": "High"}, {"depname": "nsl", "version": null, "version_op": null, "unified_name": "nsl", "extractor_type": "cmake", "context": "check_library_exists(nsl       gethostent  \"\" have_libnsl)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "swipl", "version": null, "version_op": null, "unified_name": "swipl", "extractor_type": "cmake", "context": "project(swipl)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "minizip", "version": "1.2.11", "version_op": null, "unified_name": "minizip", "extractor_type": "autoconf", "context": "AC_INIT([minizip], [1.2.11], [bugzilla.redhat.com])", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "swipl", "version": null, "version_op": null, "unified_name": "swipl", "extractor_type": "cmake", "context": "project(swipl-doc-core)", "confidence": ""}], "type": "cmake", "libs": []}]}