{"target": "OpenKinect@@libfreenect2", "extractors": [{"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libusb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "cmake", "context": "find_package(libusb required)", "confidence": "High"}, {"depname": "jpeg", "version": null, "version_op": null, "unified_name": "jpeg", "extractor_type": "cmake", "context": "find_package(jpeg)", "confidence": "High"}, {"depname": "tegrajpeg", "version": null, "version_op": null, "unified_name": "tegrajpeg", "extractor_type": "cmake", "context": "find_package(tegrajpeg)", "confidence": "High"}, {"depname": "turbojpeg", "version": null, "version_op": null, "unified_name": "turbojpeg", "extractor_type": "cmake", "context": "find_package(turbojpeg)", "confidence": "High"}, {"depname": "turbojpeg", "version": null, "version_op": null, "unified_name": "turbojpeg", "extractor_type": "cmake", "context": "find_package(turbojpeg required)", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "find_package(opencl)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "openni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake", "context": "find_package(openni2)", "confidence": "High"}, {"depname": "libfreenect2", "version": null, "version_op": null, "unified_name": "freenect2", "extractor_type": "cmake", "context": "project(libfreenect2)", "confidence": ""}, {"depname": "libva", "version": null, "version_op": null, "unified_name": "va", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(vaapi libva libva-drm)", "confidence": "High"}, {"depname": "libva-drm", "version": null, "version_op": null, "unified_name": "va-drm", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(vaapi libva libva-drm)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["videotoolbox"], "version": "", "fromfile": "OpenKinect@@libfreenect2/CMakeLists.txt", "content": "find_library(videotoolbox_library videotoolbox)"}, {"filenames": ["corefoundation"], "version": "", "fromfile": "OpenKinect@@libfreenect2/CMakeLists.txt", "content": "find_library(corefoundation_library corefoundation required)"}, {"filenames": ["coremedia"], "version": "", "fromfile": "OpenKinect@@libfreenect2/CMakeLists.txt", "content": "find_library(coremedia_library coremedia required)"}, {"filenames": ["corevideo"], "version": "", "fromfile": "OpenKinect@@libfreenect2/CMakeLists.txt", "content": "find_library(corevideo_library corevideo required)"}]}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "freenect2", "version": null, "version_op": null, "unified_name": "freenect2", "extractor_type": "cmake", "context": "find_package(freenect2 required)", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "libfreenect2_examples", "version": null, "version_op": null, "unified_name": "freenect2_examples", "extractor_type": "cmake", "context": "project(libfreenect2_examples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "freenect2", "version": null, "version_op": null, "unified_name": "freenect2", "extractor_type": "cmake", "context": "find_package(freenect2 required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "find_package(glfw3)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "libfreenect2_tools_sr", "version": null, "version_op": null, "unified_name": "freenect2_tools_sr", "extractor_type": "cmake", "context": "project(libfreenect2_tools_sr)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libusb", "version": null, "version_op": null, "unified_name": "usb", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindLibUSB.cmake", "confidence": "High"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(libusb required libusb-1.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${libusb_library}"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindLibUSB.cmake", "content": "find_library(libusb_library\n    names ${libusb_library}\n    hints ${libusb_library_dirs}\n  )"}, {"filenames": ["libusb-1.0"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindLibUSB.cmake", "content": "find_library(libusb_libraries\n  names libusb-1.0\n  paths\n    \"${depends_dir}/libusb\"\n    \"${depends_dir}/libusbx\"\n    env libusb_root\n  path_suffixes\n    x64/release/dll\n    x64/debug/dll\n    win32/release/dll\n    win32/debug/dll\n    ms64\n    ms64/dll\n)"}]}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindOpenCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opencl"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindOpenCL.cmake", "content": "find_library(opencl_library\n      names opencl\n      paths\n        env \"programfiles(x86)\"\n        env amdappsdkroot\n        env inteloclsdkroot\n        env cuda_path\n        env nvsdkcompute_root\n        env atistreamsdkroot\n      path_suffixes\n        \"amd app/lib/x86\"\n        lib/x86\n        lib/win32\n        opencl/common/lib/win32)"}, {"filenames": ["opencl"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindOpenCL.cmake", "content": "find_library(opencl_library\n      names opencl\n      paths\n        env \"programfiles(x86)\"\n        env amdappsdkroot\n        env inteloclsdkroot\n        env cuda_path\n        env nvsdkcompute_root\n        env atistreamsdkroot\n      path_suffixes\n        \"amd app/lib/x86_64\"\n        lib/x86_64\n        lib/x64\n        opencl/common/lib/x64)"}, {"filenames": ["opencl"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindOpenCL.cmake", "content": "find_library(opencl_library\n    names opencl)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindOpenNI2.cmake", "confidence": "High"}, {"depname": "libopenni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(openni2 libopenni2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openni2", "${openni2_libraries}"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindOpenNI2.cmake", "content": "find_library(openni2_library\n  names openni2 ${openni2_libraries}\n  paths\n   \"/opt/lib\"\n    \"/opt/local/lib\"\n    \"/usr/lib\"\n    \"/usr/local/lib\"\n    \"/usr/local/lib/ni2\"\n    env openni2_redist\n    env programfiles\n    env programw6432\n  hints ${openni2_library_dirs}\n  path_suffixes\n    ni2/openni2/drivers\n    openni2/drivers/lib\n    openni2/lib\n)"}]}, {"deps": [{"depname": "turbojpeg", "version": null, "version_op": null, "unified_name": "turbojpeg", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindTurboJPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libturbojpeg.so.1", "libturbojpeg.so.0", "turbojpeg"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindTurboJPEG.cmake", "content": "find_library(turbojpeg_libraries\n  names libturbojpeg.so.1 libturbojpeg.so.0 turbojpeg\n  doc \"found turbojpeg library path\"\n  paths\n    \"${depends_dir}/libjpeg_turbo\"\n    \"${depends_dir}/libjpeg-turbo64\"\n    \"/usr/local/opt/jpeg-turbo\" \n    \"/opt/local\" \n    \"c:/libjpeg-turbo64\"\n    \"/opt/libjpeg-turbo\"\n    env turbojpeg_root\n  path_suffixes\n    lib\n    lib64\n)"}]}, {"deps": [{"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindGLFW3.cmake", "confidence": "High"}, {"depname": "glfw3", "version": null, "version_op": null, "unified_name": "glfw3", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(glfw3 glfw3)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${glfw3_library}"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindGLFW3.cmake", "content": "find_library(glfw3_library\n    names ${glfw3_library}\n    hints ${glfw3_library_dirs}\n  )"}, {"filenames": ["glfw3dll", "glfw3"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindGLFW3.cmake", "content": "find_library(glfw3_libraries\n  names glfw3dll glfw3\n  paths\n    \"${depends_dir}/glfw\"\n    \"$env{programw6432}/glfw\"\n    env glfw_root\n  path_suffixes\n    lib\n    lib-vc2012\n)"}]}, {"deps": [{"depname": "tegrajpeg", "version": null, "version_op": null, "unified_name": "tegrajpeg", "extractor_type": "cmake", "context": "OpenKinect@@libfreenect2/cmake_modules/FindTegraJPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvjpeg"], "version": "", "fromfile": "OpenKinect@@libfreenect2/cmake_modules/FindTegraJPEG.cmake", "content": "find_library(tegrajpeg_libraries\n  names nvjpeg\n  doc \"found tegrajpeg library (libnvjpeg.so)\"\n  path_suffixes tegra\n)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}