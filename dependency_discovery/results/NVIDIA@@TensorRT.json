{"target": "NVIDIA@@TensorRT", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda ${cuda_version} required)", "confidence": "High"}, {"depname": "tensorrt", "version": "${trt_version}", "version_op": null, "unified_name": "tensorrt", "extractor_type": "cmake", "context": "project(tensorrt         languages cxx cuda         version ${trt_version}         description \"tensorrt is a c++ library that facilitates high-performance inference on nvidia gpus and deep learning accelerators.\"         homepage_url \"https://github.com/nvidia/tensorrt\")", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cudnn"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_library(cudnn_lib cudnn hints\n    ${cuda_toolkit_root_dir} ${cudnn_root_dir} path_suffixes lib64 lib/x64 lib)"}, {"filenames": ["cublas"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_library(cublas_lib cublas hints\n    ${cuda_toolkit_root_dir} path_suffixes lib64 lib lib/x64 lib/stubs)"}, {"filenames": ["cublaslt"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_library(cublaslt_lib cublaslt hints\n    ${cuda_toolkit_root_dir} path_suffixes lib64 lib lib/x64 lib/stubs)"}, {"filenames": ["cudart_static"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_library(cudart_lib cudart_static hints ${cuda_toolkit_root_dir} path_suffixes lib lib/x64 lib64)"}, {"filenames": ["rt"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_library(rt_lib rt)"}, {"filenames": ["$env{cxx}", "g++"], "version": "", "fromfile": "NVIDIA@@TensorRT/CMakeLists.txt", "content": "find_program(cmake_cxx_compiler names $env{cxx} g++)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "_library_create_target", "version": null, "version_op": null, "unified_name": "_library_create_target", "extractor_type": "cmake", "context": "NVIDIA@@TensorRT/cmake/modules/find_library_create_target.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}${trt_debug_postfix}"], "version": "", "fromfile": "NVIDIA@@TensorRT/cmake/modules/find_library_create_target.cmake", "content": "find_library(${lib}_lib_path ${lib}${trt_debug_postfix} hints ${hints} no_default_path)"}, {"filenames": ["${lib}"], "version": "", "fromfile": "NVIDIA@@TensorRT/cmake/modules/find_library_create_target.cmake", "content": "find_library(${lib}_lib_path ${lib} hints ${hints} no_default_path)"}, {"filenames": ["${lib}"], "version": "", "fromfile": "NVIDIA@@TensorRT/cmake/modules/find_library_create_target.cmake", "content": "find_library(${lib}_lib_path ${lib})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "infer_c", "version": null, "version_op": null, "unified_name": "infer_c", "extractor_type": "cmake", "context": "project(infer_c languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "customhardmax", "version": null, "version_op": null, "unified_name": "customhardmax", "extractor_type": "cmake", "context": "project(customhardmax languages cxx cuda)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["nvinfer"], "version": "", "fromfile": "NVIDIA@@TensorRT/samples/python/onnx_custom_plugin/CMakeLists.txt", "content": "find_library(_nvinfer_lib nvinfer hints ${trt_lib} path_suffixes lib lib64)"}, {"filenames": ["cudart"], "version": "", "fromfile": "NVIDIA@@TensorRT/samples/python/onnx_custom_plugin/CMakeLists.txt", "content": "find_library(_cudart_lib cudart hints ${cuda_lib_dir} path_suffixes lib lib64)"}, {"filenames": ["cublas"], "version": "", "fromfile": "NVIDIA@@TensorRT/samples/python/onnx_custom_plugin/CMakeLists.txt", "content": "find_library(_cublas_lib cublas hints ${cuda_lib_dir} path_suffixes lib lib64)"}, {"filenames": ["cuda"], "version": "", "fromfile": "NVIDIA@@TensorRT/samples/python/onnx_custom_plugin/CMakeLists.txt", "content": "find_library(_cuda_lib cuda hints ${cuda_lib_dir} path_suffixes lib/stubs lib64/stubs)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pytensorrt", "version": null, "version_op": null, "unified_name": "pytensorrt", "extractor_type": "cmake", "context": "project(pytensorrt languages cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}