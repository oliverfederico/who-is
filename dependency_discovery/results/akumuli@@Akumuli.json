{"target": "akumuli@@Akumuli", "extractors": [{"deps": [{"depname": "boost", "version": "1.50.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.50.0\n    components\n    unit_test_framework\n    program_options\n    system\n    thread\n    filesystem\n    regex\n    date_time\n    required\n)", "confidence": "High"}, {"depname": "log4cxx", "version": null, "version_op": null, "unified_name": "log4cxx", "extractor_type": "cmake", "context": "find_package(log4cxx required)", "confidence": "High"}, {"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "find_package(sqlite3 required)", "confidence": "High"}, {"depname": "apr", "version": null, "version_op": null, "unified_name": "apr", "extractor_type": "cmake", "context": "find_package(apr required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "libmicrohttpd", "version": null, "version_op": null, "unified_name": "microhttpd", "extractor_type": "cmake", "context": "find_package(libmicrohttpd required)", "confidence": "High"}, {"depname": "muparser", "version": null, "version_op": null, "unified_name": "muparser", "extractor_type": "cmake", "context": "find_package(muparser required)", "confidence": "High"}, {"depname": "akumuli", "version": null, "version_op": null, "unified_name": "akumuli", "extractor_type": "cmake", "context": "project(akumuli)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/Findcppcheck.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cppcheck", "cli"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable\n\t\tnames\n\t\tcppcheck\n\t\tcli\n\t\tpaths\n\t\t\"${cppcheck_root_dir}\"\n\t\tpath_suffixes\n\t\tcli\n\t\tno_default_path)"}, {"filenames": ["cppcheck"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/Findcppcheck.cmake", "content": "find_program(cppcheck_executable names cppcheck)"}]}, {"deps": [{"depname": "muparser", "version": null, "version_op": null, "unified_name": "muparser", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/Findmuparser.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "muparser", "version": null, "version_op": null, "unified_name": "muparser", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_muparser quiet muparser)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["muparser", "libmuparser"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/Findmuparser.cmake", "content": "find_library(muparser_libraries names muparser libmuparser\n             hints ${pc_muparser_libdir} ${pc_muparser_library_dirs} )"}]}, {"deps": [{"depname": "log4cxx", "version": null, "version_op": null, "unified_name": "log4cxx", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/FindLog4Cxx.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["log4cxx", "log4cxxd"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/FindLog4Cxx.cmake", "content": "find_library(log4cxx_libraries names log4cxx log4cxxd paths /lib /usr/lib /usr/local/lib )"}]}, {"deps": [{"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/FindJeMalloc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jemalloc"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/FindJeMalloc.cmake", "content": "find_library(jemalloc_libraries\n    names jemalloc\n    hints ${jemalloc_root_dir}/lib\n)"}]}, {"deps": [{"depname": "libmicrohttpd", "version": null, "version_op": null, "unified_name": "microhttpd", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/Findlibmicrohttpd.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libmicrohttpd", "version": null, "version_op": null, "unified_name": "microhttpd", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_libmicrohttpd libmicrohttpd)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["microhttpd"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/Findlibmicrohttpd.cmake", "content": "find_library(libmicrohttpd_library\n    names\n      microhttpd\n    paths\n      ${_libmicrohttpd_libdir}\n      /usr/lib\n      /usr/local/lib\n      /usr/pkg/lib\n      /opt/local/lib\n      /sw/lib\n  )"}]}, {"deps": [{"depname": "apr", "version": null, "version_op": null, "unified_name": "apr", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/FindAPR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${apr_names}"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/FindAPR.cmake", "content": "find_library(apr_library\n  names ${apr_names}\n  hints\n    /usr/local/opt/apr/libexec/lib\n    /opt/homebrew/opt/apr/lib\n  paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/apr/lib\n  )"}, {"filenames": ["${aprutil_names}"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/FindAPR.cmake", "content": "find_library(aprutil_library\n  names ${aprutil_names}\n  hints\n    /usr/local/opt/apr-util/libexec/lib\n    /opt/homebrew/opt/apr-util/lib\n  paths\n    /usr/lib\n    /usr/local/lib\n    /usr/local/apr/lib\n  )"}]}, {"deps": [{"depname": "cppcheck", "version": null, "version_op": null, "unified_name": "cppcheck", "extractor_type": "cmake", "context": "find_package(cppcheck quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "akumuli@@Akumuli/cmake/FindSqlite3.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_sqlite3 sqlite3)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sqlite3"], "version": "", "fromfile": "akumuli@@Akumuli/cmake/FindSqlite3.cmake", "content": "find_library(sqlite3_library\n    names\n      sqlite3\n    paths\n      ${_sqlite3_libdir}\n      /usr/lib\n      /usr/local/lib\n      /opt/local/lib\n      /sw/lib\n  )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "\nset(cpack_package_version \"${app_version}\")", "confidence": "Low"}, {"depname": "cpack_rpm_package", "version": null, "version_op": null, "unified_name": "cpack_rpm_package", "extractor_type": "cmake", "context": "set(cpack_rpm_package_version ${app_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "\nset(cpack_package_version \"${app_version}\")", "confidence": "Low"}, {"depname": "cpack_rpm_package", "version": null, "version_op": null, "unified_name": "cpack_rpm_package", "extractor_type": "cmake", "context": "set(cpack_rpm_package_version ${app_version})", "confidence": "Low"}, {"depname": "cpack_package", "version": null, "version_op": null, "unified_name": "cpack_package", "extractor_type": "cmake", "context": "\nset(cpack_package_version \"${app_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}