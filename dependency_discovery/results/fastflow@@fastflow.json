{"target": "fastflow@@fastflow", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "mc", "version": null, "version_op": null, "unified_name": "mc", "extractor_type": "cmake", "context": "project( mc-fastflow )", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "fastflow@@fastflow/CMakeLists.txt", "content": "find_library(arm_rt_library rt hint /usr/lib doc \"arm rt library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argn}", "version": null, "version_op": null, "unified_name": "${argn}", "extractor_type": "cmake", "context": "find_package(${argn})", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "${pkgname}", "version": null, "version_op": null, "unified_name": "${pkgname}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(${prefix} ${pkgname})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${${prefix}_libnames}"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/LibFindMacros.cmake", "content": "find_library(${prefix}_library\n    names ${${prefix}_libnames}\n    paths ${${prefix}_pkgconf_library_dirs}\n  )"}]}, {"deps": [{"depname": "opencl", "version": null, "version_op": null, "unified_name": "opencl", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/FindOpenCL.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package(packagehandlestandardargs)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opencl"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindOpenCL.cmake", "content": "find_library(opencl_libraries opencl doc \"opencl lib for osx\")"}, {"filenames": ["opencl.lib"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindOpenCL.cmake", "content": "find_library(opencl_libraries opencl.lib paths ${opencl_lib_dir} env opencl_libpath)"}, {"filenames": ["opencl"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindOpenCL.cmake", "content": "find_library(opencl_libraries opencl\n\t\t\tpaths env ld_library_path env opencl_libpath\n\t\t)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/FindOpenCV.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "zeromq", "version": null, "version_op": null, "unified_name": "zeromq", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/FindZeroMQ.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["zmq"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindZeroMQ.cmake", "content": "find_library(zmq_library\n    names\n      zmq\n    paths\n      /usr/lib\n      /usr/local/lib\n      /opt/local/lib\n      /sw/lib\n  )"}]}, {"deps": [{"depname": "gsl", "version": null, "version_op": null, "unified_name": "gsl", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/FindGSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["gsl"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindGSL.cmake", "content": "find_library( gsl_library\n      names gsl\n    )"}, {"filenames": ["gslcblas"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindGSL.cmake", "content": "find_library( gsl_cblas_library\n        names gslcblas\n      )"}, {"filenames": ["gsl-config"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindGSL.cmake", "content": "find_program( gsl_config_executable gsl-config\n\t\t\t/usr/bin/\n\t\t\t/usr/local/bin\n\t\t)"}]}, {"deps": [{"depname": "libnuma", "version": null, "version_op": null, "unified_name": "numa", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/FindLibNuma.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["numa"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/FindLibNuma.cmake", "content": "find_library(libnuma_libraries names numa)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "fastflow@@fastflow/cmake.modules/unused/FindCUDA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/unused/FindCUDA.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths \"${cuda_toolkit_root_dir}\"\n    env cuda_path\n    env cuda_lib_path\n    path_suffixes ${_cuda_64bit_lib_dir} \"lib/win32\" \"lib\"\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/unused/FindCUDA.cmake", "content": "find_library(${_var} names ${_names} doc ${_doc})"}, {"filenames": ["nvcc"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/unused/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}\"\n  env cuda_path\n  env cuda_bin_path\n  path_suffixes bin bin64\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "fastflow@@fastflow/cmake.modules/unused/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}]}