{"target": "begla@@Intrinsic", "extractors": [{"deps": [{"depname": "glslang", "version": null, "version_op": null, "unified_name": "glslang", "extractor_type": "cmake", "context": "find_package(glslang required)", "confidence": "High"}, {"depname": "luajit", "version": null, "version_op": null, "unified_name": "luajit", "extractor_type": "cmake", "context": "find_package(luajit required)", "confidence": "High"}, {"depname": "physx", "version": null, "version_op": null, "unified_name": "physx", "extractor_type": "cmake", "context": "find_package(physx required common cooking characterkinematic extensions pxfoundation)", "confidence": "High"}, {"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required)", "confidence": "High"}, {"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 components widgets required)", "confidence": "High"}, {"depname": "fbx", "version": null, "version_op": null, "unified_name": "fbx", "extractor_type": "cmake", "context": "find_package(fbx required)", "confidence": "High"}, {"depname": "bugsplat", "version": null, "version_op": null, "unified_name": "bugsplat", "extractor_type": "cmake", "context": "find_package(bugsplat required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "intrinsic", "version": null, "version_op": null, "unified_name": "intrinsic", "extractor_type": "cmake", "context": "project(intrinsic)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "bugsplat", "version": null, "version_op": null, "unified_name": "bugsplat", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindBugSplat.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["bugsplat64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindBugSplat.cmake", "content": "find_library(bugsplat_library\n  names bugsplat64\n  path_suffixes lib\n  paths\n  ${cmake_source_dir}/dependencies/bugsplat\n)"}]}, {"deps": [{"depname": "fbx", "version": null, "version_op": null, "unified_name": "fbx", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindFBX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libfbxsdkd", "fbxsdkd"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindFBX.cmake", "content": "find_library(fbx_library_debug \n  names libfbxsdkd fbxsdkd\n  path_suffixes lib64 lib\n  paths\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/fbx\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/fbx_linux\n)"}, {"filenames": ["libfbxsdk", "fbxsdk"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindFBX.cmake", "content": "find_library(fbx_library_release \n  names libfbxsdk fbxsdk\n  path_suffixes lib64 lib\n  paths\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/fbx\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/fbx_linux\n)"}]}, {"deps": [{"depname": "cotire_cmake_module", "version": "1.7.10", "version_op": null, "unified_name": "cotire_cmake_module", "extractor_type": "cmake", "context": "set (cotire_cmake_module_version \"1.7.10\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindSDL2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library \n  names sdl2\n  path_suffixes lib64 lib ${_sdl_lib_suffix}\n  paths\n  ${cmake_source_dir}/dependencies/sdl\n)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library_sdl2main \n  names sdl2main\n  path_suffixes lib64 lib ${_sdl_lib_suffix}\n  paths\n  ${cmake_source_dir}/dependencies/sdl\n)"}]}, {"deps": [{"depname": "luajit", "version": null, "version_op": null, "unified_name": "luajit", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindLuaJIT.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["luajit-51", "luajit-5.1", "luajit51", "luajit", "lua-51", "lua-5.1", "lua51", "lua"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindLuaJIT.cmake", "content": "find_library(luajit_library \n  names luajit-51 luajit-5.1 luajit51 luajit lua-51 lua-5.1 lua51 lua\n  hints\n  $env{luajit_dir}\n  path_suffixes lib64 lib\n  paths\n  ${cmake_source_dir}/dependencies/lua\n)"}, {"filenames": ["m"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindLuaJIT.cmake", "content": "find_library(luajit_math_library m)"}]}, {"deps": [{"depname": "glslang", "version": null, "version_op": null, "unified_name": "glslang", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glslangd"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_debug glslangd glslang\n  path_suffixes lib64 lib debug\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/glslang\n  ${cmake_source_dir}/dependencies/glslang/build_debug/install\n)"}, {"filenames": ["glslang"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_release glslang\n  path_suffixes lib64 lib release\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/glslang\n  ${cmake_source_dir}/dependencies/glslang/build/install\n)"}, {"filenames": ["hlsld"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_hlsl_debug hlsld hlsl\n  path_suffixes lib64 lib debug\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/hlsl\n  ${cmake_source_dir}/dependencies/glslang/build_debug/install\n)"}, {"filenames": ["hlsl"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_hlsl_release hlsl\n  path_suffixes lib64 lib release\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/hlsl\n  ${cmake_source_dir}/dependencies/glslang/build/install\n)"}, {"filenames": ["oglcompilerd"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_ogl_debug oglcompilerd oglcompiler\n  path_suffixes lib64 lib debug\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/oglcompilersdll\n  ${cmake_source_dir}/dependencies/glslang/build_debug/install\n)"}, {"filenames": ["oglcompiler"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_ogl_release oglcompiler\n  path_suffixes lib64 lib release\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/oglcompilersdll\n  ${cmake_source_dir}/dependencies/glslang/build/install\n)"}, {"filenames": ["osdependentd"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_osdep_debug osdependentd osdependent\n  path_suffixes lib64 lib debug\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/glslang/osdependent/windows\n  ${cmake_source_dir}/dependencies/glslang/build_debug/glslang/osdependent/unix\n)"}, {"filenames": ["osdependent"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_osdep_release osdependent\n  path_suffixes lib64 lib release\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/glslang/osdependent/windows\n  ${cmake_source_dir}/dependencies/glslang/build/glslang/osdependent/unix\n)"}, {"filenames": ["spirvd"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_spirv_debug spirvd spirv\n  path_suffixes lib64 lib debug\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/spirv\n  ${cmake_source_dir}/dependencies/glslang/build_debug/install\n)"}, {"filenames": ["spirv"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindGLSLang.cmake", "content": "find_library(glslang_library_spirv_release spirv\n  path_suffixes lib64 lib release\n  paths\n  ${cmake_source_dir}/dependencies/glslang/build/spirv\n  ${cmake_source_dir}/dependencies/glslang/build/install\n)"}]}, {"deps": [{"depname": "physx", "version": null, "version_op": null, "unified_name": "physx", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindPhysX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["physx3_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_release physx3_x64\n  path_suffixes lib64 lib lib/32\n  paths\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n)"}, {"filenames": ["physx3profile_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_profile physx3profile_x64\n  path_suffixes lib lib64 lib/32\n  paths\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n)"}, {"filenames": ["physx3debug_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_debug physx3debug_x64\n  path_suffixes lib lib64 lib/32\n  paths\n  ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n)"}, {"filenames": ["physx3${component}debug_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_component_${component}_debug physx3${component}debug_x64 physx3${component}debug physx${component}debug ${component}debug ${component}debug_x64 \n    path_suffixes lib lib64 lib/32\n    paths\n    ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n  )"}, {"filenames": ["physx3${component}profile_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_component_${component}_profile physx3${component}profile_x64 physx3${component}profile physx${component}profile ${component}profile ${component}profile_x64 \n    path_suffixes lib lib64 lib/32\n    paths\n    ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n  )"}, {"filenames": ["physx3${component}_x64"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindPhysX.cmake", "content": "find_library(physx_library_component_${component}_release physx3${component}_x64 physx3${component} physx${component} ${component} ${component}_x64\n    path_suffixes lib lib64 lib/32\n    paths\n    ${cmake_source_dir}/../intrinsic_dependencies/dependencies/physx3.4/\n  )"}]}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "begla@@Intrinsic/cmake/FindVulkan.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vulkan-1", "vulkan"], "version": "", "fromfile": "begla@@Intrinsic/cmake/FindVulkan.cmake", "content": "find_library(vulkan_library\n  names vulkan-1 vulkan\n  path_suffixes lib64 lib bin\n  paths\n    ${vk_sdk_path}\n    $env{vk_sdk_path}\n)"}]}]}