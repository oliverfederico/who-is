{"target": "mortennobel@@SimpleRenderEngine", "extractors": [{"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "find_package(sdl2 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew required)", "confidence": "High"}, {"depname": "sdl2_image", "version": null, "version_op": null, "unified_name": "sdl2_image", "extractor_type": "cmake", "context": "find_package(sdl2_image required)", "confidence": "High"}, {"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "find_package(openvr required)", "confidence": "High"}, {"depname": "simplerenderengine", "version": null, "version_op": null, "unified_name": "simplerenderengine", "extractor_type": "cmake", "context": "project(simplerenderengine cxx)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["opengl"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/CMakeLists.txt", "content": "find_library(opengl_library opengl )"}]}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "mortennobel@@SimpleRenderEngine/cmake/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library_temp\n\t\tnames sdl2\n\t\thints\n\t\t$env{sdl2dir}\n\t\tpath_suffixes lib64 lib lib/x64 lib/x86\n\t\tpaths ${sdl2_search_paths}\n\t\t)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindSDL2.cmake", "content": "find_library(sdl2main_library\n\t\t\t\tnames sdl2main\n\t\t\t\thints\n\t\t\t\t$env{sdl2dir}\n\t\t\t\tpath_suffixes lib64 lib\n\t\t\t\tpaths ${sdl2_search_paths}\n\t\t\t\t)"}]}, {"deps": [{"depname": "sdl2_image", "version": null, "version_op": null, "unified_name": "sdl2_image", "extractor_type": "cmake", "context": "mortennobel@@SimpleRenderEngine/cmake/FindSDL2_IMAGE.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2_image"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindSDL2_IMAGE.cmake", "content": "find_library(sdl2_image_library\n        names sdl2_image\n        hints\n        env sdl2imagedir\n        env sdl2dir\n        path_suffixes lib ${vc_lib_path_suffix}\n        paths ${sdl2_path}\n        )"}]}, {"deps": [{"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "mortennobel@@SimpleRenderEngine/cmake/FindGLEW.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glew", "glew", "glew32s", "glew32"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindGLEW.cmake", "content": "find_library( glew_library\n          names\n              glew glew glew32s glew32\n          paths\n              ${glew_location}/lib\n              ${glew_location}/lib/x86\n              ${glew_location}/lib/win32\n              ${glew_location}/lib/release/win32\n              ${glew_location}/lib/release mx/win32\n              $env{glew_location}/lib\n              $env{glew_location}/lib/release/win32\n              $env{glew_location}/lib/release mx/win32\n              $env{glew_location}/lib/x86\n              $env{glew_location}/lib/win32\n              $env{programfiles}/glew/lib\n              $env{programfiles}/glew/lib/x86\n              $env{programfiles}/glew/lib/win32\n              ${project_source_dir}/extern/glew/bin\n              ${project_source_dir}/extern/glew/lib\n              ${project_source_dir}/extern/glew/lib/x86\n              ${project_source_dir}/extern/glew/lib/win32\n              ${glew_location}\n              $env{glew_location}\n              doc \"the glew library\")"}, {"filenames": ["glew", "glew", "glew32s", "glew32"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindGLEW.cmake", "content": "find_library( glew_library\n          names\n              glew glew glew32s glew32\n          paths\n              ${glew_location}/lib/x64\n              ${glew_location}/lib/release/x64\n              ${glew_location}/lib/release mx/x64\n              $env{glew_location}/lib/x64\n              $env{glew_location}/lib/release/x64\n              $env{glew_location}/lib/release mx/x64\n              $env{programfiles}/glew/lib/x64\n              ${project_source_dir}/extern/glew/bin\n              ${project_source_dir}/extern/glew/lib/x64\n              ${glew_location}/lib\n              $env{glew_location}/lib\n              $env{programfiles}/glew/lib\n              ${project_source_dir}/extern/glew/lib\n              ${glew_location}\n              $env{glew_location}\n              doc \"the glew library\")"}, {"filenames": ["glew", "glew"], "version": "", "fromfile": "mortennobel@@SimpleRenderEngine/cmake/FindGLEW.cmake", "content": "find_library( glew_library\n        names\n            glew glew\n        paths\n            ${glew_location}/lib\n            $env{glew_location}/lib\n            /usr/lib64\n            /usr/lib\n            /usr/local/lib64\n            /usr/lib/x86_64-linux-gnu\n            /usr/local/lib\n            /sw/lib\n            /opt/local/lib\n            no_default_path\n            doc \"the glew library\")"}]}, {"deps": [{"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "mortennobel@@SimpleRenderEngine/cmake/FindOpenVR.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}