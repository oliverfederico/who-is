{"target": "liblava@@liblava", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "liblava", "version": "0.8.0", "version_op": null, "unified_name": "lava", "extractor_type": "cmake", "context": "project(liblava version 0.8.0 languages c cxx)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "liblava@@liblava/CMakeLists.txt", "content": "find_program(ccache_program ccache)"}]}, {"deps": [{"depname": "cpm_download", "version": "0.38.1", "version_op": null, "unified_name": "cpm_download", "extractor_type": "cmake", "context": "set(cpm_download_version 0.38.1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "${argh_github}", "version": "${argh_tag}", "version_op": null, "unified_name": "${argh_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name argh\n  github_repository ${argh_github}\n  git_tag ${argh_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${glfw_github}", "version": "${glfw_tag}", "version_op": null, "unified_name": "${glfw_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name glfw\n  github_repository ${glfw_github}\n  git_tag ${glfw_tag}\n  options\n    \"glfw_install off\"\n    \"glfw_build_docs off\"\n    \"glfw_build_tests off\"\n    \"glfw_build_examples off\"\n    )", "confidence": "High"}, {"depname": "${gli_github}", "version": "${gli_tag}", "version_op": null, "unified_name": "${gli_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name gli\n  github_repository ${gli_github}\n  git_tag ${gli_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${glm_github}", "version": "${glm_tag}", "version_op": null, "unified_name": "${glm_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name glm\n  github_repository ${glm_github}\n  git_tag ${glm_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${physfs_github}", "version": "${physfs_tag}", "version_op": null, "unified_name": "${physfs_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name physfs\n  github_repository ${physfs_github}\n  git_tag ${physfs_tag}\n  options\n    \"physfs_archive_zip on\"\n    \"physfs_archive_7z off\"\n    \"physfs_archive_grp off\"\n    \"physfs_archive_wad off\"\n    \"physfs_archive_hog off\"\n    \"physfs_archive_mvl off\"\n    \"physfs_archive_qpak off\"\n    \"physfs_archive_slb off\"\n    \"physfs_archive_iso9660 off\"\n    \"physfs_archive_vdf off\"\n    \"physfs_build_shared off\"\n    \"physfs_build_test off\"\n    \"physfs_build_docs off\"\n    )", "confidence": "High"}, {"depname": "${json_github}", "version": "${json_tag}", "version_op": null, "unified_name": "${json_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name json\n  github_repository ${json_github}\n  git_tag ${json_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${spdlog_github}", "version": "${spdlog_tag}", "version_op": null, "unified_name": "${spdlog_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name spdlog\n  github_repository ${spdlog_github}\n  git_tag ${spdlog_tag}\n  )", "confidence": "High"}, {"depname": "${stb_github}", "version": "${stb_tag}", "version_op": null, "unified_name": "${stb_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name stb\n  github_repository ${stb_github}\n  git_tag ${stb_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${tinyobjloader_github}", "version": "${tinyobjloader_tag}", "version_op": null, "unified_name": "${tinyobjloader_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name tinyobjloader\n  github_repository ${tinyobjloader_github}\n  git_tag ${tinyobjloader_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${vulkan-headers_github}", "version": "${vulkan-headers_tag}", "version_op": null, "unified_name": "${vulkan-headers_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name vulkan-headers\n  github_repository ${vulkan-headers_github}\n  git_tag ${vulkan-headers_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${volk_github}", "version": "${volk_tag}", "version_op": null, "unified_name": "${volk_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name volk\n  github_repository ${volk_github}\n  git_tag ${volk_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${vulkanmemoryallocator_github}", "version": "${vulkanmemoryallocator_tag}", "version_op": null, "unified_name": "${vulkanmemoryallocator_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name vulkanmemoryallocator\n  github_repository ${vulkanmemoryallocator_github}\n  git_tag ${vulkanmemoryallocator_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${iconfontcppheaders_github}", "version": "${iconfontcppheaders_tag}", "version_op": null, "unified_name": "${iconfontcppheaders_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name iconfontcppheaders\n  github_repository ${iconfontcppheaders_github}\n  git_tag ${iconfontcppheaders_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${imgui_docking_github}", "version": "${imgui_docking_tag}", "version_op": null, "unified_name": "${imgui_docking_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n    name imgui\n    github_repository ${imgui_docking_github}\n    git_tag ${imgui_docking_tag}\n    download_only yes\n    )", "confidence": "High"}, {"depname": "${imgui_github}", "version": "${imgui_tag}", "version_op": null, "unified_name": "${imgui_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n    name imgui\n    github_repository ${imgui_github}\n    git_tag ${imgui_tag}\n    download_only yes\n    )", "confidence": "High"}, {"depname": "${spirv-headers_github}", "version": "${spirv-headers_tag}", "version_op": null, "unified_name": "${spirv-headers_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name spirv-headers\n  github_repository ${spirv-headers_github}\n  git_tag ${spirv-headers_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${spirv-tools_github}", "version": "${spirv-tools_tag}", "version_op": null, "unified_name": "${spirv-tools_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name spirv-tools\n  github_repository ${spirv-tools_github}\n  git_tag ${spirv-tools_tag}\n  options\n    \n    \"spirv_skip_tests on\"\n    \"spirv_skip_executables on\"\n    )", "confidence": "High"}, {"depname": "${glslang_github}", "version": "${glslang_tag}", "version_op": null, "unified_name": "${glslang_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name glslang\n  github_repository ${glslang_github}\n  git_tag ${glslang_tag}\n  options\n    \"enable_ctest off\"\n    \"enable_glslang_binaries off\"\n    \"build_external off\"\n    \n    )", "confidence": "High"}, {"depname": "${shaderc_github}", "version": "${shaderc_tag}", "version_op": null, "unified_name": "${shaderc_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name shaderc\n  github_repository ${shaderc_github}\n  git_tag ${shaderc_tag}\n  options\n    \"shaderc_skip_tests on\"\n    \"shaderc_skip_examples on\"\n    \n    \"shaderc_skip_copyright_check on\"\n    )", "confidence": "High"}, {"depname": "${picosha2_github}", "version": "${picosha2_tag}", "version_op": null, "unified_name": "${picosha2_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n  name picosha2\n  github_repository ${picosha2_github}\n  git_tag ${picosha2_tag}\n  download_only yes\n  )", "confidence": "High"}, {"depname": "${catch2_github}", "version": "${catch2_tag}", "version_op": null, "unified_name": "${catch2_github}", "extractor_type": "cmake::cpm", "context": "cpmaddpackage(\n    name catch2\n    github_repository ${catch2_github}\n    git_tag ${catch2_tag}\n    )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}