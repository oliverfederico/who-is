{"target": "AcademySoftwareFoundation@@MaterialX", "extractors": [{"deps": [{"depname": "materialx", "version": null, "version_op": null, "unified_name": "materialx", "extractor_type": "cmake", "context": "project(materialx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "clib"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["nanogui"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXView/CMakeLists.txt", "content": "find_library(nanogui_libraries\n        names\n            nanogui\n        hints\n            \"${nanogui_root}/lib\"\n            \"$env{nanogui_root}/lib\"\n            \"${nanogui_root}/lib64\"\n            \"$env{nanogui_root}/lib64\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRenderMsl/CMakeLists.txt", "content": "find_library(cocoa_framework cocoa)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["foundation"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXGraphEditor/CMakeLists.txt", "content": "find_library(core_foundation foundation required)"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ecm", "version": null, "version_op": null, "unified_name": "ecm", "extractor_type": "cmake", "context": "find_package(ecm required no_module)", "confidence": "High"}, {"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "find_package(wayland required client cursor egl)", "confidence": "High"}, {"depname": "waylandscanner", "version": null, "version_op": null, "unified_name": "waylandscanner", "extractor_type": "cmake", "context": "find_package(waylandscanner required)", "confidence": "High"}, {"depname": "waylandprotocols", "version": "1.15", "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "find_package(waylandprotocols 1.15 required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "find_package(epollshim)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "find_package(osmesa required)", "confidence": "High"}, {"depname": "glfw", "version": "3.4.0", "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw version 3.4.0 languages c)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXGraphEditor/External/Glfw/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXGraphEditor/External/Glfw/CMakeLists.txt", "content": "find_library(math_library m)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "find_package(openimageio required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRender/External/OpenImageIO/FindOpenImageIO.cmake", "confidence": "High"}, {"depname": "openimageio", "version": null, "version_op": null, "unified_name": "openimageio", "extractor_type": "cmake", "context": "    set (openimageio_version \"${openimageio_version_major}.${openimageio_version_minor}.${openimageio_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["openimageio${oiio_libname_suffix}"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRender/External/OpenImageIO/FindOpenImageIO.cmake", "content": "find_library ( openimageio_library\n               names openimageio${oiio_libname_suffix}\n               hints ${openimageio_root_dir}/lib\n               path_suffixes lib64 lib\n               paths \"${openimageio_root_dir}/lib\" )"}, {"filenames": ["oiiotool", "oiiotool.exe"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRender/External/OpenImageIO/FindOpenImageIO.cmake", "content": "find_program ( oiiotool_bin\n               names oiiotool oiiotool.exe\n               hints ${openimageio_root_dir}/bin\n               path_suffixes bin )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": null, "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "find_package(pybind11 quiet)", "confidence": "High"}, {"depname": "pybind11_python", "version": null, "version_op": null, "unified_name": "pybind11_python", "extractor_type": "cmake", "context": "set(pybind11_python_version ${materialx_python_version})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pybind11", "version": "\"${pybind11_version_major}.${pybind11_version_minor}.${pybind11_version_patch}\"", "version_op": null, "unified_name": "pybind11", "extractor_type": "cmake", "context": "project(   pybind11   languages cxx   version \"${pybind11_version_major}.${pybind11_version_minor}.${pybind11_version_patch}\")", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonlibsnew", "version": "11", "version_op": null, "unified_name": "pythonlibsnew", "extractor_type": "cmake", "context": "find_package(pythonlibsnew ${pybind11_python_version} module required )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonlibsnew", "version": null, "version_op": null, "unified_name": "pythonlibsnew", "extractor_type": "cmake", "context": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "confidence": "High"}, {"depname": "pythoninterp", "version": "3.6", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3.6 required\n             )", "confidence": "High"}, {"depname": "pythonlibsnew_find", "version": "3.6", "version_op": null, "unified_name": "pythonlibsnew", "extractor_type": "cmake", "context": "  set(pythonlibsnew_find_version \"3.6\")", "confidence": "Low"}, {"depname": "python", "version": null, "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "set(python_version \"${python_version_major}.${python_version_minor}.${python_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["\"python${python_library_suffix}\""], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "content": "find_library(\n      python_library\n      names \"python${python_library_suffix}\"\n      paths ${python_libdir}\n      no_default_path)"}, {"filenames": ["\"python${python_library_suffix}\""], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "content": "find_library(\n    python_library\n    names \"python${python_library_suffix}\"\n    paths ${python_libdir}\n    no_default_path)"}, {"filenames": ["python"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "content": "find_program(\n      python_executable python\n      paths \"$env{virtual_env}\" \"$env{virtual_env}/bin\"\n      no_default_path)"}, {"filenames": ["python"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "content": "find_program(\n      python_executable python\n      paths \"$env{conda_prefix}\" \"$env{conda_prefix}/bin\"\n      no_default_path)"}, {"filenames": ["python"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/PyMaterialX/External/PyBind11/tools/FindPythonLibsNew.cmake", "content": "find_program(\n      python_executable python\n      paths \"$env{pythonlocation}\" \"$env{pythonlocation}/bin\"\n      no_default_path)"}]}, {"deps": [{"depname": "python", "version": "3.6", "version_op": null, "unified_name": "python", "extractor_type": "cmake", "context": "find_package(python 3.6 required components interpreter development )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "clib"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRenderGlsl/CMakeLists.txt", "content": "find_library(cocoa_framework cocoa)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "AcademySoftwareFoundation@@MaterialX/source/MaterialXRenderHw/CMakeLists.txt", "content": "find_library(cocoa_framework cocoa)"}]}, {"deps": [], "type": "cmake", "libs": []}]}