{"target": "apple@@foundationdb", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "foundationdb", "version": "7.4.0", "version_op": null, "unified_name": "foundationdb", "extractor_type": "cmake", "context": "project(foundationdb   version 7.4.0   description \"foundationdb is a scalable, fault-tolerant, ordered key-value store with full acid transactions.\"   homepage_url \"http://www.foundationdb.org/\"   languages c cxx asm swift)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["mono"], "version": "", "fromfile": "apple@@foundationdb/cmake/EnableCsharp.cmake", "content": "find_program(mono_executable mono)"}, {"filenames": ["mcs"], "version": "", "fromfile": "apple@@foundationdb/cmake/EnableCsharp.cmake", "content": "find_program(mcs_executable mcs)"}]}, {"deps": [{"depname": "boost", "version": "1.78", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.78 components filesystem iostreams serialization system)", "confidence": "High"}, {"depname": "boost", "version": "1.78.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.78.0 exact quiet components context filesystem iostreams serialization system config paths ${boost_hint_paths})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "rocksdb", "version": "8.1.1", "version_op": null, "unified_name": "rocksdb", "extractor_type": "cmake", "context": "find_package(rocksdb 8.1.1)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "rocksdb", "version": null, "version_op": null, "unified_name": "rocksdb", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindRocksDB.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "find_package(gperftools required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["c++"], "version": "", "fromfile": "apple@@foundationdb/cmake/ConfigureCompiler.cmake", "content": "find_library(libcxx_so_path c++ /usr/local/lib)"}, {"filenames": ["c++"], "version": "", "fromfile": "apple@@foundationdb/cmake/ConfigureCompiler.cmake", "content": "find_library(cxx_lib names c++ paths \"/usr/local/lib\" required)"}, {"filenames": ["c++abi"], "version": "", "fromfile": "apple@@foundationdb/cmake/ConfigureCompiler.cmake", "content": "find_library(cxx_abi_lib names c++abi paths \"/usr/local/lib\" required)"}, {"filenames": ["\"ccache\""], "version": "", "fromfile": "apple@@foundationdb/cmake/ConfigureCompiler.cmake", "content": "find_program(ccache_program \"ccache\" required)"}]}, {"deps": [{"depname": "swiftlibs", "version": null, "version_op": null, "unified_name": "swiftlibs", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindSwiftLibs.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "valgrind", "version": null, "version_op": null, "unified_name": "valgrind", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindValgrind.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "uring", "version": null, "version_op": null, "unified_name": "uring", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/Finduring.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["liburing.a", "liburing"], "version": "", "fromfile": "apple@@foundationdb/cmake/Finduring.cmake", "content": "find_library(uring_libraries\n  names liburing.a liburing)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/Findjemalloc.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libjemalloc.a", "jemalloc"], "version": "", "fromfile": "apple@@foundationdb/cmake/Findjemalloc.cmake", "content": "find_library(\n    jemalloc_library\n    names libjemalloc.a jemalloc\n    hints ${jemalloc_library_path})"}, {"filenames": ["libjemalloc_pic.a", "jemalloc_pic"], "version": "", "fromfile": "apple@@foundationdb/cmake/Findjemalloc.cmake", "content": "find_library(\n    jemalloc_pic_library\n    names libjemalloc_pic.a jemalloc_pic\n    hints ${jemalloc_library_path})"}, {"filenames": ["libjemalloc.a"], "version": "", "fromfile": "apple@@foundationdb/cmake/Findjemalloc.cmake", "content": "find_library(\n  jemalloc_library\n  names libjemalloc.a\n  hints ${jemalloc_root})"}, {"filenames": ["libjemalloc_pic.a"], "version": "", "fromfile": "apple@@foundationdb/cmake/Findjemalloc.cmake", "content": "find_library(\n  jemalloc_pic_library\n  names libjemalloc_pic.a\n  hints ${jemalloc_root})"}, {"filenames": ["jemalloc-config"], "version": "", "fromfile": "apple@@foundationdb/cmake/Findjemalloc.cmake", "content": "find_program(\n  _jemalloc_config_path\n  names jemalloc-config\n  hints ${jemalloc_root})"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "wix", "version": null, "version_op": null, "unified_name": "wix", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindWIX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["candle"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindWIX.cmake", "content": "find_program(wix_candle\n  candle\n  hints $env{wix}/bin)"}, {"filenames": ["light"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindWIX.cmake", "content": "find_program(wix_light\n  light\n  hints $env{wix}/bin)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindGperftools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcmalloc"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc\n  names tcmalloc\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["profiler"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindGperftools.cmake", "content": "find_library(gperftools_profiler\n  names profiler\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["tcmalloc_and_profiler"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc_and_profiler\n  names tcmalloc_and_profiler\n  hints ${gperftools_root_dir}/lib)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libc++.a"], "version": "", "fromfile": "apple@@foundationdb/cmake/CompilerChecks.cmake", "content": "find_library(libcxx_a libc++.a)"}, {"filenames": ["libc++abi.a"], "version": "", "fromfile": "apple@@foundationdb/cmake/CompilerChecks.cmake", "content": "find_library(libcxx_abi libc++abi.a)"}, {"filenames": ["ld.lld"], "version": "", "fromfile": "apple@@foundationdb/cmake/CompilerChecks.cmake", "content": "find_program(lld_path ld.lld \"path to lld - is only used to determine default linker\")"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindThreads.cmake", "confidence": "High"}, {"depname": "${libname}", "version": null, "version_op": null, "unified_name": "${libname}", "extractor_type": "cmake", "context": "check_library_exists(${libname} ${funcname} \"\" ${varname})", "confidence": "High"}, {"depname": "cma", "version": null, "version_op": null, "unified_name": "cma", "extractor_type": "cmake", "context": "check_library_exists(cma pthread_attr_create \"\" cmake_have_hp_cma)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libressl", "version": null, "version_op": null, "unified_name": "ressl", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindLibreSSL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["crypto"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindLibreSSL.cmake", "content": "find_library(libressl_crypto_library\n  names crypto\n  names_per_dir ${_libressl_hints_and_paths}\n  path_suffixes lib\n  hints \"\")"}, {"filenames": ["ssl"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindLibreSSL.cmake", "content": "find_library(libressl_ssl_library\n  names ssl\n  path_suffixes lib\n  hints  \"\")"}, {"filenames": ["tls"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindLibreSSL.cmake", "content": "find_library(libressl_tls_library\n  names tls\n  path_suffixes lib\n  hints  \"\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "awssdk", "version": null, "version_op": null, "unified_name": "awssdk", "extractor_type": "cmake", "context": "project(awssdk-download none)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "editline", "version": null, "version_op": null, "unified_name": "editline", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindEditline.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["edit"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindEditline.cmake", "content": "find_library(editline_library edit)"}]}, {"deps": [{"depname": "jemalloc", "version": "5.3.0", "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "find_package(jemalloc 5.3.0 required)", "confidence": "High"}, {"depname": "valgrind", "version": null, "version_op": null, "unified_name": "valgrind", "extractor_type": "cmake", "context": "find_package(valgrind required)", "confidence": "High"}, {"depname": "openssl", "version": null, "version_op": null, "unified_name": "openssl", "extractor_type": "cmake", "context": "find_package(openssl required)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter)", "confidence": "High"}, {"depname": "jni", "version": "1.8", "version_op": null, "unified_name": "jni", "extractor_type": "cmake", "context": "find_package(jni 1.8)", "confidence": "High"}, {"depname": "java", "version": "1.8", "version_op": null, "unified_name": "java", "extractor_type": "cmake", "context": "find_package(java 1.8 components development)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter)", "confidence": "High"}, {"depname": "toml11", "version": null, "version_op": null, "unified_name": "toml11", "extractor_type": "cmake", "context": "find_package(toml11 quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["go"], "version": "", "fromfile": "apple@@foundationdb/cmake/FDBComponents.cmake", "content": "find_program(go_executable go hints /usr/local/go/bin/)"}, {"filenames": ["gem"], "version": "", "fromfile": "apple@@foundationdb/cmake/FDBComponents.cmake", "content": "find_program(gem_executable gem)"}]}, {"deps": [{"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "apple@@foundationdb/cmake/FindSphinx.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sphinx-build"], "version": "", "fromfile": "apple@@foundationdb/cmake/FindSphinx.cmake", "content": "find_program(\n  sphinx_executable\n  names sphinx-build\n  hints ${sphinx_root}\n  doc \"sphinx-build tool\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components json)", "confidence": "High"}, {"depname": "clang", "version": null, "version_op": null, "unified_name": "clang", "extractor_type": "cmake", "context": "find_package(clang required config)", "confidence": "High"}, {"depname": "fdb", "version": null, "version_op": null, "unified_name": "fdb", "extractor_type": "cmake", "context": "project(fdb-serialize-check c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fmt", "version": null, "version_op": null, "unified_name": "fmt", "extractor_type": "cmake", "context": "project(fmt cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "setenv", "version": null, "version_op": null, "unified_name": "setenv", "extractor_type": "cmake", "context": "apple@@foundationdb/contrib/fmt-8.1.1/support/cmake/FindSetEnv.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["setenv.cmd"], "version": "", "fromfile": "apple@@foundationdb/contrib/fmt-8.1.1/support/cmake/FindSetEnv.cmake", "content": "find_program(winsdk_setenv names setenv.cmd\n  paths \"[hkey_local_machine\\\\software\\\\microsoft\\\\microsoft sdks\\\\windows;currentinstallfolder]/bin\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 required components interpreter)", "confidence": "High"}, {"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "find_package(sphinx)", "confidence": "High"}, {"depname": "sphinx", "version": null, "version_op": null, "unified_name": "sphinx", "extractor_type": "cmake", "context": "find_package(sphinx required)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["python3", "python3.exe"], "version": "", "fromfile": "apple@@foundationdb/documentation/CMakeLists.txt", "content": "find_program(\n    venv_python3_executable\n    names python3 python3.exe\n    paths ${sphinx_venv_dir}/scripts ${sphinx_venv_dir}/bin required\n    no_default_path no_cache\n    doc \"checking python3 executable in virtual environment\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "azurestorage", "version": null, "version_op": null, "unified_name": "azurestorage", "extractor_type": "cmake", "context": "project(azurestorage-download)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "uring", "version": null, "version_op": null, "unified_name": "uring", "extractor_type": "cmake", "context": "find_package(uring)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["liblz4.a"], "version": "", "fromfile": "apple@@foundationdb/fdbserver/CMakeLists.txt", "content": "find_library(lz4_static_libraries\n    names liblz4.a required)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["pycodestyle"], "version": "", "fromfile": "apple@@foundationdb/bindings/python/CMakeLists.txt", "content": "find_program(pycodestyle pycodestyle)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jar", "version": null, "version_op": null, "unified_name": "jar", "extractor_type": "cmake", "context": "set(jar_version \"${fdb_major}.${fdb_minor}.${fdb_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "flowbench", "version": null, "version_op": null, "unified_name": "flowbench", "extractor_type": "cmake", "context": "project (flowbench)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "googlebenchmark", "version": null, "version_op": null, "unified_name": "googlebenchmark", "extractor_type": "cmake", "context": "project(googlebenchmark-download none)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fdb_av_latest", "version": "740", "version_op": null, "unified_name": "fdb_av_latest", "extractor_type": "cmake", "context": "set(fdb_av_latest_version                   \"740\")", "confidence": "Low"}, {"depname": "fdb_av_latest_bindings", "version": "740", "version_op": null, "unified_name": "fdb_av_latest_bindings", "extractor_type": "cmake", "context": "set(fdb_av_latest_bindings_version          \"740\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "fdb_pv_default", "version": null, "version_op": null, "unified_name": "fdb_pv_default", "extractor_type": "cmake", "context": "set(fdb_pv_default_version                      \"0x0fdb00b074000000ll\")", "confidence": "Low"}, {"depname": "fdb_pv_future", "version": null, "version_op": null, "unified_name": "fdb_pv_future", "extractor_type": "cmake", "context": "set(fdb_pv_future_version                       \"0x0fdb00b075000000ll\")", "confidence": "Low"}, {"depname": "fdb_pv_min_compatible", "version": null, "version_op": null, "unified_name": "fdb_pv_min_compatible", "extractor_type": "cmake", "context": "set(fdb_pv_min_compatible_version               \"0x0fdb00b073000000ll\")", "confidence": "Low"}, {"depname": "fdb_pv_min_invalid", "version": null, "version_op": null, "unified_name": "fdb_pv_min_invalid", "extractor_type": "cmake", "context": "set(fdb_pv_min_invalid_version                  \"0x0fdb00b076000000ll\")", "confidence": "Low"}, {"depname": "fdb_pv_tlog", "version": null, "version_op": null, "unified_name": "fdb_pv_tlog", "extractor_type": "cmake", "context": "set(fdb_pv_tlog_version                         \"0x0fdb00b061030000ll\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["eio"], "version": "", "fromfile": "apple@@foundationdb/flow/CMakeLists.txt", "content": "find_library(eio eio)"}, {"filenames": ["iokit"], "version": "", "fromfile": "apple@@foundationdb/flow/CMakeLists.txt", "content": "find_library(io_kit iokit)"}, {"filenames": ["corefoundation"], "version": "", "fromfile": "apple@@foundationdb/flow/CMakeLists.txt", "content": "find_library(core_foundation corefoundation)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["eio"], "version": "", "fromfile": "apple@@foundationdb/fdbrpc/CMakeLists.txt", "content": "find_library(eio eio)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["fdbserver-7.1.23"], "version": "", "fromfile": "apple@@foundationdb/tests/CMakeLists.txt", "content": "find_program(old_fdbserver_binary\n    fdbserver-7.1.23 fdbserver fdbserver.exe\n    hints /opt/foundationdb/old/7.1.23/bin/ /opt/foundationdb/old /usr/sbin /usr/libexec /usr/local/sbin /usr/local/libexec)"}]}, {"deps": [], "type": "cmake", "libs": []}]}