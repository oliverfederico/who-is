{"target": "nvpro-samples@@optix_advanced_samples", "extractors": [{"deps": [{"depname": "cuda", "version": "7.0", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda 7.0 required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "devil", "version": null, "version_op": null, "unified_name": "devil", "extractor_type": "cmake", "context": "find_package(devil)", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "find_package(optix required)", "confidence": "High"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "project(optix-advanced-samples)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "dx", "version": null, "version_op": null, "unified_name": "dx", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/CMake/FindDX.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/CMake/FindOptiX.cmake", "confidence": "High"}, {"depname": "optix", "version": "1", "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "set(optix_version \"1\")", "confidence": "Low"}, {"depname": "optix_utility", "version": "1", "version_op": null, "unified_name": "optix_utility", "extractor_type": "cmake", "context": "set(optix_utility_version \"1\")", "confidence": "Low"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "        set(optix_version ${optix_version_string})", "confidence": "Low"}, {"depname": "optix_utility", "version": null, "version_op": null, "unified_name": "optix_utility", "extractor_type": "cmake", "context": "        set(optix_utility_version ${optix_version_string})", "confidence": "Low"}, {"depname": "optix", "version": null, "version_op": null, "unified_name": "optix", "extractor_type": "cmake", "context": "        set(optix_version \"\")", "confidence": "Low"}, {"depname": "cmake_import_file", "version": "1", "version_op": null, "unified_name": "cmake_import_file", "extractor_type": "cmake", "context": "  set(cmake_import_file_version 1)", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["${name}.${version}", "${name}"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindOptiX.cmake", "content": "find_library(${name}_library\n    names ${name}.${version} ${name}\n    paths \"${optix_install_dir}/lib\"\n    no_default_path\n    )"}, {"filenames": ["${name}.${version}", "${name}"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindOptiX.cmake", "content": "find_library(${name}_library\n    names ${name}.${version} ${name}\n    )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths \"${cuda_toolkit_root_dir}\"\n    env cuda_path\n    env cuda_lib_path\n    path_suffixes ${_cuda_64bit_lib_dir} \"${_path_ext}lib/win32\" \"${_path_ext}lib\" \"${_path_ext}libwin32\"\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_library(${_var} names ${_names} doc ${_doc})"}, {"filenames": ["rt"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_library(cuda_rt_library rt)"}, {"filenames": ["dl"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_library(cuda_dl_library dl)"}, {"filenames": ["nvcc"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}\"\n  env cuda_path\n  env cuda_bin_path\n  path_suffixes bin bin64\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/CMake/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan quiet)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "ecm", "version": null, "version_op": null, "unified_name": "ecm", "extractor_type": "cmake", "context": "find_package(ecm required no_module)", "confidence": "High"}, {"depname": "wayland", "version": null, "version_op": null, "unified_name": "wayland", "extractor_type": "cmake", "context": "find_package(wayland required)", "confidence": "High"}, {"depname": "waylandscanner", "version": null, "version_op": null, "unified_name": "waylandscanner", "extractor_type": "cmake", "context": "find_package(waylandscanner required)", "confidence": "High"}, {"depname": "waylandprotocols", "version": "1.1", "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "find_package(waylandprotocols 1.1 required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "mir", "version": null, "version_op": null, "unified_name": "mir", "extractor_type": "cmake", "context": "find_package(mir required)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "find_package(xkbcommon required)", "confidence": "High"}, {"depname": "glfw", "version": null, "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw c)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(math_library m)"}, {"filenames": ["cocoa"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(cocoa_framework cocoa)"}, {"filenames": ["iokit"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(iokit_framework iokit)"}, {"filenames": ["corefoundation"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(core_foundation_framework corefoundation)"}, {"filenames": ["corevideo"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMakeLists.txt", "content": "find_library(core_video_framework corevideo)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mir", "version": null, "version_op": null, "unified_name": "mir", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindMir.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package (pkgconfig)", "confidence": "High"}, {"depname": "mirclient", "version": null, "version_op": null, "unified_name": "mirclient", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (pkg_mir quiet mirclient)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindXKBCommon.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "xkbcommon", "version": null, "version_op": null, "unified_name": "xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_xkbcommon quiet xkbcommon)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["xkbcommon"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindXKBCommon.cmake", "content": "find_library(xkbcommon_library\n    names xkbcommon\n    hints ${pc_xkbcommon_library} ${pc_xkbcommon_library_dirs}\n)"}]}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindVulkan.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["vulkan-1"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindVulkan.cmake", "content": "find_library(vulkan_library names vulkan-1 hints\n            \"$env{vulkan_sdk}/bin\"\n            \"$env{vk_sdk_path}/bin\")"}, {"filenames": ["vkstatic.1"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindVulkan.cmake", "content": "find_library(vulkan_static_library names vkstatic.1 hints\n            \"$env{vulkan_sdk}/bin\"\n            \"$env{vk_sdk_path}/bin\")"}, {"filenames": ["vulkan-1"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindVulkan.cmake", "content": "find_library(vulkan_library names vulkan-1 hints\n            \"$env{vulkan_sdk}/bin32\"\n            \"$env{vk_sdk_path}/bin32\")"}, {"filenames": ["vulkan"], "version": "", "fromfile": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindVulkan.cmake", "content": "find_library(vulkan_library names vulkan hints\n        \"$env{vulkan_sdk}/lib\")"}]}, {"deps": [{"depname": "waylandprotocols", "version": null, "version_op": null, "unified_name": "waylandprotocols", "extractor_type": "cmake", "context": "nvpro-samples@@optix_advanced_samples/src/support/glfw/CMake/modules/FindWaylandProtocols.cmake", "confidence": "High"}, {"depname": "wayland_protocols", "version": null, "version_op": null, "unified_name": "wayland_protocols", "extractor_type": "cmake", "context": "set(wayland_protocols_version ${waylandprotocols_version})", "confidence": "Low"}, {"depname": "wayland-protocols", "version": "${waylandprotocols_find_version}", "version_op": ">=", "unified_name": "wayland-protocols", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(waylandprotocols quiet wayland-protocols>=${waylandprotocols_find_version})", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}