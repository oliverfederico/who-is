{"target": "maidsafe-archive@@MaidSafe", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "maidsafe", "version": null, "version_op": null, "unified_name": "maidsafe", "extractor_type": "cmake", "context": "project(maidsafe)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cryptopp", "version": null, "version_op": null, "unified_name": "cryptopp", "extractor_type": "cmake", "context": "project(cryptopp)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gmock", "version": "1.7.0", "version_op": null, "unified_name": "gmock", "extractor_type": "autoconf", "context": "maidsafe-archive@@MaidSafe/src/third_party_libs/googlemock/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "Google C++ Mocking Framework", "version": "1.7.0", "version_op": null, "unified_name": "google c++ mocking framework", "extractor_type": "autoconf", "context": "AC_INIT([Google C++ Mocking Framework],\n        [1.7.0],\n        [googlemock@googlegroups.com],\n        [gmock])", "confidence": ""}], "type": "autoconf"}, {"deps": [{"depname": "gmock", "version": null, "version_op": null, "unified_name": "gmock", "extractor_type": "cmake", "context": "project(gmock cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "gtest", "version": "1.7.0", "version_op": null, "unified_name": "gtest", "extractor_type": "autoconf", "context": "maidsafe-archive@@MaidSafe/src/third_party_libs/googlemock/gtest/configure", "confidence": ""}], "type": "autoconf"}, {"deps": [], "type": "make"}, {"deps": [], "type": "autoconf"}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "project(gtest cxx c)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "ms"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite", "version": null, "version_op": null, "unified_name": "sqlite", "extractor_type": "cmake", "context": "project(sqlite)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "breakpad", "version": null, "version_op": null, "unified_name": "breakpad", "extractor_type": "cmake", "context": "project(breakpad-client)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["cocoa"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/src/third_party_libs/google-breakpad/CMakeLists.txt", "content": "find_library(cocoa_library cocoa)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythoninterp", "version": null, "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "_maidsafe", "version": null, "version_op": null, "unified_name": "_maidsafe", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_maidsafe.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${lib}-d", "${lib}-mt", "lib${lib}-vc120-mt-gd-1_55"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/find_maidsafe.cmake", "content": "find_library(${lib}pathdebug names ${lib}-d ${lib}-mt lib${lib}-vc120-mt-gd-1_55 paths ${cmake_current_list_dir}/lib no_default_path)"}, {"filenames": ["${lib}", "${lib}-mt", "lib${lib}-vc120-mt-1_55"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/find_maidsafe.cmake", "content": "find_library(${lib}pathrelease names ${lib} ${lib}-mt lib${lib}-vc120-mt-1_55 paths ${cmake_current_list_dir}/lib no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ccache"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/standard_flags.cmake", "content": "find_program(ccacheexe ccache)"}, {"filenames": ["gcov"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/standard_flags.cmake", "content": "find_program(ctest_coverage_command names gcov)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libtool"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/monolithic_lib.cmake", "content": "find_program(libtool names libtool)"}]}, {"deps": [{"depname": "${qtlib}", "version": "5.2.0", "version_op": null, "unified_name": "${qtlib}", "extractor_type": "cmake", "context": "find_package(${qtlib} 5.2.0 quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["git"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_git.cmake", "content": "find_program(git_executable names git paths ${git_root_dir} path_suffixes ${git_path_suffixes})"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["advancedinstaller.com"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/installer_msvc.cmake", "content": "find_program(advancedinstaller names advancedinstaller.com paths \"c:/program files (x86)/caphyon/advanced installer 11.4.1/bin/x86\")"}]}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["iconv"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_library(iconvlib iconv)"}, {"filenames": ["libiconv.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_library(iconvlib libiconv.a)"}, {"filenames": ["libicui18n.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_library(icui18nlib libicui18n.a)"}, {"filenames": ["libicuuc.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_library(icuuclib libicuuc.a)"}, {"filenames": ["libicudata.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_library(icudatalib libicudata.a)"}, {"filenames": ["b2"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_boost.cmake", "content": "find_program(b2path names b2 paths ${boostfoldername}_android_v${androidapilevel}_${cmake_cxx_compiler_id}_${cmake_cxx_compiler_version} no_default_path)"}]}, {"deps": [{"depname": "_stack_protector_strong", "version": null, "version_op": null, "unified_name": "_stack_protector_strong", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_stack_protector_strong.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["hostname"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/utils.cmake", "content": "find_program(hostnamecommand names hostname)"}]}, {"deps": [{"depname": "_msan", "version": null, "version_op": null, "unified_name": "_msan", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_msan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "_ubsan", "version": null, "version_op": null, "unified_name": "_ubsan", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_ubsan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "_sanitize_blacklist", "version": null, "version_op": null, "unified_name": "_sanitize_blacklist", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_sanitize_blacklist.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["sh"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/add_gtests.cmake", "content": "find_program(sh names sh paths ${gitroot}/../bin)"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["cbfs"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_cbfs.cmake", "content": "find_library(cbfslibrary names cbfs paths ${cbfs_root_dir} path_suffixes ${cbfslibpathsuffix} no_default_path)"}, {"filenames": ["cbfs"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_cbfs.cmake", "content": "find_library(cbfslibrarydebug names cbfs paths ${cbfs_root_dir} path_suffixes ${cbfslibpathsuffixdebug} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libosxfuse_i64.dylib"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_fuse.cmake", "content": "find_library(fuse_library libosxfuse_i64.dylib)"}, {"filenames": ["libfuse.so"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_fuse.cmake", "content": "find_library(fuse_library libfuse.so)"}, {"filenames": ["libfuse.so"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_fuse.cmake", "content": "find_library(fuse_library libfuse.so)"}]}, {"deps": [{"depname": "_tsan", "version": null, "version_op": null, "unified_name": "_tsan", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_tsan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["libjustthread.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_just_thread.cmake", "content": "find_library(justthread_library names libjustthread.a paths ${just_thread_root_dir} path_suffixes lib  lib32 lib64 no_default_path)"}, {"filenames": ["libjustthread.a"], "version": "", "fromfile": "maidsafe-archive@@MaidSafe/cmake_modules/maidsafe_find_just_thread.cmake", "content": "find_library(justthread_library_debug names libjustthread.a paths ${just_thread_root_dir} path_suffixes lib lib32 lib64 no_default_path)"}]}, {"deps": [{"depname": "_asan", "version": null, "version_op": null, "unified_name": "_asan", "extractor_type": "cmake", "context": "maidsafe-archive@@MaidSafe/cmake_modules/find_asan.cmake", "confidence": "High"}], "type": "cmake", "libs": []}]}