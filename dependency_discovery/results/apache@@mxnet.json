{"target": "apache@@mxnet", "extractors": [{"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "protobuf", "version": null, "version_op": null, "unified_name": "protobuf", "extractor_type": "cmake", "context": "find_package(protobuf required)", "confidence": "High"}, {"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "find_package(gperftools)", "confidence": "High"}, {"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "find_package(jemalloc)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv components core highgui imgproc imgcodecs)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required components core highgui imgproc)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "find_package(jemalloc)", "confidence": "High"}, {"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest required)", "confidence": "High"}, {"depname": "cudnn", "version": null, "version_op": null, "unified_name": "cudnn", "extractor_type": "cmake", "context": "find_package(cudnn)", "confidence": "High"}, {"depname": "cutensor", "version": null, "version_op": null, "unified_name": "cutensor", "extractor_type": "cmake", "context": "find_package(cutensor)", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "find_package(cudatoolkit required cublas cufft cusolver curand nvrtc\n    optional_components nvtoolsext)", "confidence": "High"}, {"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "find_package(nvml)", "confidence": "High"}, {"depname": "nccl", "version": null, "version_op": null, "unified_name": "nccl", "extractor_type": "cmake", "context": "find_package(nccl)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 required)", "confidence": "High"}, {"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3)", "confidence": "High"}, {"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "find_package(nvml)", "confidence": "High"}, {"depname": "mxnet", "version": null, "version_op": null, "unified_name": "mxnet", "extractor_type": "cmake", "context": "project(mxnet c cxx)", "confidence": ""}, {"depname": "libturbojpeg", "version": null, "version_op": null, "unified_name": "turbojpeg", "extractor_type": "cmake::pkg", "context": "pkg_search_module(turbojpeg required libturbojpeg)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libonnx.so"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_library(onnx_library names libonnx.so required\n          paths ${onnx_path}\n          doc \"path to onnx library.\")"}, {"filenames": ["libonnx_proto.so"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_library(onnx_proto_library names libonnx_proto.so required\n          paths ${onnx_path}\n          doc \"path to onnx_proto library.\")"}, {"filenames": ["libnvonnxparser.so"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_library(onnx_trt_parser_library names libnvonnxparser.so required\n          paths ${onnx_trt_path}\n          doc \"path to onnx_proto parser library.\")"}, {"filenames": ["rt"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_library(rtlib rt)"}, {"filenames": ["ccache"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_program(ccache_program ccache)"}, {"filenames": ["gcov"], "version": "", "fromfile": "apache@@mxnet/CMakeLists.txt", "content": "find_program(gcov_path gcov required)"}]}, {"deps": [{"depname": "atlas", "version": null, "version_op": null, "unified_name": "atlas", "extractor_type": "cmake", "context": "find_package(atlas required)", "confidence": "High"}, {"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "find_package(openblas required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "accelerate", "version": null, "version_op": null, "unified_name": "accelerate", "extractor_type": "cmake", "context": "find_package(accelerate required)", "confidence": "High"}, {"depname": "checkfortran", "version": null, "version_op": null, "unified_name": "checkfortran", "extractor_type": "cmake", "context": "project(checkfortran fortran)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["gfortran"], "version": "", "fromfile": "apache@@mxnet/cmake/ChooseBlas.cmake", "content": "find_library(fortran_lib names gfortran hints )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cython", "cython.bat", "cython3"], "version": "", "fromfile": "apache@@mxnet/cmake/BuildCythonModules.cmake", "content": "find_program(cython_executable names cython cython.bat cython3)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cuda", "version": "1", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "    set(cuda_version \"${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/upstream/FindBLAS.cmake", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake", "context": "find_package(blas)", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp components c)", "confidence": "High"}, {"depname": "blas", "version": null, "version_op": null, "unified_name": "blas", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pkgc_blas blas)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_library}"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindBLAS.cmake", "content": "find_library(${_prefix}_${_library}_library\n          names ${_library}\n          names_per_dir\n          paths ${_addlibdir}\n          path_suffixes ${_subdirs}\n        )"}]}, {"deps": [{"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "    set(cudatoolkit_version \"${cmake_cuda_compiler_version}\")", "confidence": "Low"}, {"depname": "cudatoolkit", "version": null, "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "    set(cudatoolkit_version  \"${cmake_match_1}.${cmake_match_2}.${cmake_match_3}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["cudart"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cuda_cudart\n  names cudart\n  path_suffixes lib64 lib/x64\n)"}, {"filenames": ["cudart"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cuda_cudart\n    names cudart\n    path_suffixes lib64/stubs lib/x64/stubs\n  )"}, {"filenames": ["${search_names}"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cuda_${lib_name}_library\n      names ${search_names}\n      hints ${cudatoolkit_library_dir}\n            env cuda_path\n      path_suffixes nvidia/current lib64 lib/x64 lib\n                    ${arg_extra_path_suffixes}\n    )"}, {"filenames": ["${search_names}"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cuda_${lib_name}_library\n        names ${search_names}\n        hints ${cudatoolkit_library_dir}\n              env cuda_path\n        path_suffixes lib64/stubs lib/x64/stubs lib/stubs stubs\n      )"}, {"filenames": ["rt"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cudatoolkit_rt_library rt)"}, {"filenames": ["nvtoolsext64_1", "nvtoolsext64", "nvtoolsext"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_library(cuda_nvtoolsext_library\n      names nvtoolsext64_1 nvtoolsext64 nvtoolsext\n      paths env nvtoolsext_path\n            env cuda_path\n      path_suffixes lib/x64 lib\n    )"}, {"filenames": ["nvcc", "nvcc.exe"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_program(cudatoolkit_nvcc_executable\n    names nvcc nvcc.exe\n    paths ${cudatoolkit_bin_dir}\n    no_default_path\n    )"}, {"filenames": ["nvcc", "nvcc.exe"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_program(cudatoolkit_nvcc_executable\n  names nvcc nvcc.exe\n  paths env cuda_path\n  path_suffixes bin\n)"}, {"filenames": ["nvcc", "nvcc.exe"], "version": "", "fromfile": "apache@@mxnet/cmake/upstream/FindCUDAToolkit.cmake", "content": "find_program(cudatoolkit_nvcc_executable\n    names nvcc nvcc.exe\n    paths ${search_paths}\n    path_suffixes bin\n  )"}]}, {"deps": [{"depname": "openblas", "version": null, "version_op": null, "unified_name": "openblas", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindOpenBLAS.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libopenblas.a"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindOpenBLAS.cmake", "content": "find_library(openblas_lib names libopenblas.a hints ${open_blas_lib_search_paths})"}]}, {"deps": [{"depname": "accelerate", "version": null, "version_op": null, "unified_name": "accelerate", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindAccelerate.cmake", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cutensor", "version": null, "version_op": null, "unified_name": "cutensor", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindCUTENSOR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libcutensor.so"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindCUTENSOR.cmake", "content": "find_library(cutensor_library names libcutensor.so \n        paths ${cutensor_root} $env{cutensor_root} ${cutensor_include}\n        path_suffixes lib lib/x64  cuda/lib cuda/lib64 lib/x64\n        doc \"path to cutensor library.\")"}]}, {"deps": [{"depname": "cudnn", "version": null, "version_op": null, "unified_name": "cudnn", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindCUDNN.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libcudnn.so", "cudnn.lib"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindCUDNN.cmake", "content": "find_library(cudnn_library names libcudnn.so cudnn.lib \n  paths ${cudnn_root} $env{cudnn_root} ${cudnn_include}\n  path_suffixes lib lib/x64  cuda/lib cuda/lib64 lib/x64\n  doc \"path to cudnn library.\")"}]}, {"deps": [{"depname": "nvml", "version": null, "version_op": null, "unified_name": "nvml", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindNVML.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvidia-ml"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindNVML.cmake", "content": "find_library(nvml_libraries\n  names nvidia-ml\n  hints\n  ${nvml_lib_dir}\n  ${nvml_root_dir}\n  ${nvml_root_dir}/lib\n  ${nvml_root_dir}/lib/x86_64-linux-gnu\n  ${nvml_root_dir}/lib64\n  ${cuda_toolkit_root_dir}/lib64/stubs\n  $env{nvml_dir}/lib\n  )"}, {"filenames": ["nvidia-ml"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindNVML.cmake", "content": "find_library(nvml_libraries\n    names nvidia-ml\n    paths ${search_paths}\n    path_suffixes lib64/stubs\n  )"}]}, {"deps": [{"depname": "nccl", "version": null, "version_op": null, "unified_name": "nccl", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindNCCL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nccl"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindNCCL.cmake", "content": "find_library(nccl_libraries\n  names nccl\n  hints\n  ${nccl_lib_dir}\n  ${nccl_root_dir}\n  ${nccl_root_dir}/lib\n  ${nccl_root_dir}/lib/x86_64-linux-gnu\n  ${nccl_root_dir}/lib64\n  ${cuda_toolkit_root_dir}/lib64\n  $env{nccl_dir}/lib\n  )"}, {"filenames": ["nccl"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindNCCL.cmake", "content": "find_library(nccl_libraries\n    names nccl\n    paths ${search_paths}\n    path_suffixes lib\n  )"}]}, {"deps": [{"depname": "atlas", "version": null, "version_op": null, "unified_name": "atlas", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindAtlas.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ptcblas_r", "ptcblas", "cblas_r", "cblas"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindAtlas.cmake", "content": "find_library(atlas_cblas_library names  ptcblas_r ptcblas cblas_r cblas paths ${atlas_lib_search_paths})"}, {"filenames": ["atlas_r", "atlas"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindAtlas.cmake", "content": "find_library(atlas_blas_library names   atlas_r   atlas                 paths ${atlas_lib_search_paths})"}, {"filenames": ["alapack_r", "alapack", "lapack_atlas"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindAtlas.cmake", "content": "find_library(atlas_lapack_library names alapack_r alapack lapack_atlas  paths ${atlas_lib_search_paths})"}]}, {"deps": [{"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindJeMalloc.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "jemalloc", "version": null, "version_op": null, "unified_name": "jemalloc", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_jemalloc quiet jemalloc)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["jemalloc", "libjemalloc"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindJeMalloc.cmake", "content": "find_library(jemalloc_library names jemalloc libjemalloc\n  hints\n    ${jemalloc_root} env jemalloc_root\n    ${pc_jemalloc_minimal_libdir}\n    ${pc_jemalloc_minimal_library_dirs}\n    ${pc_jemalloc_libdir}\n    ${pc_jemalloc_library_dirs}\n  path_suffixes lib lib64)"}]}, {"deps": [{"depname": "nvtx", "version": null, "version_op": null, "unified_name": "nvtx", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindNVTX.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["nvtoolsext64_1.lib", "nvtoolsext32_1.lib", "nvtoolsext"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindNVTX.cmake", "content": "find_library(nvtx_libraries\n  names nvtoolsext64_1.lib nvtoolsext32_1.lib nvtoolsext\n  paths $env{nvtoolsext_path} ${nvtx_root_dir} ${cuda_toolkit_root_dir}\n  path_suffixes lib lib64 lib/win32 lib/x64\n  )"}]}, {"deps": [{"depname": "gperftools", "version": null, "version_op": null, "unified_name": "gperftools", "extractor_type": "cmake", "context": "apache@@mxnet/cmake/Modules/FindGperftools.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["tcmalloc"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc\n  names tcmalloc\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["profiler"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_profiler\n  names profiler\n  hints ${gperftools_root_dir}/lib)"}, {"filenames": ["tcmalloc_and_profiler"], "version": "", "fromfile": "apache@@mxnet/cmake/Modules/FindGperftools.cmake", "content": "find_library(gperftools_tcmalloc_and_profiler\n  names tcmalloc_and_profiler\n  hints ${gperftools_root_dir}/lib)"}]}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3)", "confidence": "High"}, {"depname": "mshadow", "version": null, "version_op": null, "unified_name": "mshadow", "extractor_type": "cmake", "context": "project(mshadow c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "mxnet_cpp", "version": null, "version_op": null, "unified_name": "mxnet_cpp", "extractor_type": "cmake", "context": "project(mxnet_cpp c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "gtest", "version": null, "version_op": null, "unified_name": "gtest", "extractor_type": "cmake", "context": "find_package(gtest)", "confidence": "High"}], "type": "cmake", "libs": []}]}