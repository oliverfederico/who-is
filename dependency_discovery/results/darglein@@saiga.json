{"target": "darglein@@saiga", "extractors": [{"deps": [], "type": "gitsubmod"}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "saiga", "version": "${saiga_version}", "version_op": null, "unified_name": "saiga", "extractor_type": "cmake", "context": "project(saiga version ${saiga_version} languages c cxx)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cholmod"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(cholmod_libraries\n    cholmod\n    paths\n    ${suitesparse_dir}/lib\n    )"}, {"filenames": ["amd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(amd_library amd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["colamd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(colamd_library colamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["camd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(camd_library camd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["ccolamd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(ccolamd_library ccolamd paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["metis"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(cholmod_metis_library metis paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}, {"filenames": ["suitesparse"], "version": "", "fromfile": "darglein@@saiga/cmake/FindCHOLMOD.cmake", "content": "find_library(suitesparse_library suitesparse paths ${cholmod_libdir} $env{cholmoddir} ${lib_install_dir})"}]}, {"deps": [{"depname": "openmesh", "version": null, "version_op": null, "unified_name": "openmesh", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindOpenMesh.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openmeshcore"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenMesh.cmake", "content": "find_library(openmesh_core_library_release names openmeshcore\n    paths ${search_paths}\n    path_suffixes lib lib64)"}, {"filenames": ["openmeshcored"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenMesh.cmake", "content": "find_library(openmesh_core_library_debug names openmeshcored \n    paths ${search_paths}\n    path_suffixes lib lib64)"}, {"filenames": ["openmeshtools"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenMesh.cmake", "content": "find_library(openmesh_tools_library_release names openmeshtools\n    paths ${search_paths}\n    path_suffixes lib lib64)"}, {"filenames": ["openmeshtoolsd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenMesh.cmake", "content": "find_library(openmesh_tools_library_debug names openmeshtoolsd\n    paths ${search_paths}\n    path_suffixes lib lib64)"}]}, {"deps": [{"depname": "cuda", "version": "1", "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "    set(cuda_version \"${cmake_match_1}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cotire_cmake_module", "version": "1.8.0", "version_op": null, "unified_name": "cotire_cmake_module", "extractor_type": "cmake", "context": "set (cotire_cmake_module_version \"1.8.0\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}, {"depname": "option_compiler", "version": null, "version_op": null, "unified_name": "option_compiler", "extractor_type": "cmake", "context": "\t\tset (_option_compiler_version \"${cmake_cxx_compiler_version}\")", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindFFMPEG.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["avformat"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avformat_library avformat\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["avcodec"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avcodec_library avcodec\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["avutil"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_avutil_library avutil\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["vorbis"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_vorbis_library vorbis\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["dc1394_control"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_dc1394_library dc1394_control\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["vorbisenc"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_vorbisenc_library vorbisenc\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["theora"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_theora_library theora\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["dts"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_dts_library dts\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["gsm"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_gsm_library gsm\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["swscale"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_swscale_library swscale\n  /usr/local/lib\n  /usr/lib\n)"}, {"filenames": ["z"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFFMPEG.cmake", "content": "find_library(ffmpeg_z_library z\n  /usr/local/lib\n  /usr/lib\n)"}]}, {"deps": [{"depname": "glbinding", "version": null, "version_op": null, "unified_name": "glbinding", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/Findglbinding.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glbinding${lib_name}"], "version": "", "fromfile": "darglein@@saiga/cmake/Findglbinding.cmake", "content": "find_library(glbinding_library_release\n        names glbinding${lib_name}\n        paths ${argn}\n        doc \"the ${lib_name} library\")"}, {"filenames": ["glbinding${lib_name}d"], "version": "", "fromfile": "darglein@@saiga/cmake/Findglbinding.cmake", "content": "find_library(glbinding_library_debug\n        names glbinding${lib_name}d\n        paths ${argn}\n        doc \"the ${lib_name} debug library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl)", "confidence": "High"}, {"depname": "freetype", "version": null, "version_op": null, "unified_name": "freetype", "extractor_type": "cmake", "context": "find_package(freetype quiet)", "confidence": "High"}, {"depname": "bullet", "version": null, "version_op": null, "unified_name": "bullet", "extractor_type": "cmake", "context": "find_package(bullet quiet)", "confidence": "High"}, {"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "find_package(egl quiet)", "confidence": "High"}, {"depname": "ffmpeg", "version": null, "version_op": null, "unified_name": "ffmpeg", "extractor_type": "cmake", "context": "find_package(ffmpeg quiet)", "confidence": "High"}, {"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "find_package(openvr quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sdl2", "version": null, "version_op": null, "unified_name": "sdl2", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindSDL2.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sdl2"], "version": "", "fromfile": "darglein@@saiga/cmake/FindSDL2.cmake", "content": "find_library(sdl2_library_temp\n  names sdl2\n  hints\n  $env{sdl2dir}\n  path_suffixes lib64 lib\n  paths ${sdl2_search_paths}\n)"}, {"filenames": ["sdl2main"], "version": "", "fromfile": "darglein@@saiga/cmake/FindSDL2.cmake", "content": "find_library(sdl2main_library\n      names sdl2main\n      hints\n      $env{sdl2dir}\n      path_suffixes lib64 lib\n      paths ${sdl2_search_paths}\n    )"}]}, {"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv quiet)", "confidence": "High"}, {"depname": "sophus", "version": null, "version_op": null, "unified_name": "sophus", "extractor_type": "cmake", "context": "find_package(sophus quiet)", "confidence": "High"}, {"depname": "yaml-cpp", "version": null, "version_op": null, "unified_name": "yaml-cpp", "extractor_type": "cmake", "context": "find_package(yaml-cpp quiet)", "confidence": "High"}, {"depname": "eigenrecursive", "version": null, "version_op": null, "unified_name": "eigenrecursive", "extractor_type": "cmake", "context": "find_package(eigenrecursive quiet)", "confidence": "High"}, {"depname": "g2o", "version": null, "version_op": null, "unified_name": "g2o", "extractor_type": "cmake", "context": "find_package(g2o quiet)", "confidence": "High"}, {"depname": "cholmod", "version": null, "version_op": null, "unified_name": "cholmod", "extractor_type": "cmake", "context": "find_package(cholmod quiet)", "confidence": "High"}, {"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "find_package(mkl quiet)", "confidence": "High"}, {"depname": "openni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake", "context": "find_package(openni2 quiet)", "confidence": "High"}, {"depname": "k4a", "version": null, "version_op": null, "unified_name": "k4a", "extractor_type": "cmake", "context": "find_package(k4a quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "gphoto2", "version": null, "version_op": null, "unified_name": "gphoto2", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindGPHOTO2.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${gphoto2_names}"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGPHOTO2.cmake", "content": "find_library(gphoto2_library names ${gphoto2_names} )"}, {"filenames": ["${gphoto2_port_names}"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGPHOTO2.cmake", "content": "find_library(gphoto2_port_library names ${gphoto2_port_names} )"}, {"filenames": ["usb-1.0", "libusb-1.0"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGPHOTO2.cmake", "content": "find_library(usb_library names usb-1.0 libusb-1.0)"}]}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan quiet)", "confidence": "High"}, {"depname": "glslang", "version": null, "version_op": null, "unified_name": "glslang", "extractor_type": "cmake", "context": "find_package(glslang quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "alut", "version": null, "version_op": null, "unified_name": "alut", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindALUT.cmake", "confidence": "High"}, {"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "find_package(openal quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["alut"], "version": "", "fromfile": "darglein@@saiga/cmake/FindALUT.cmake", "content": "find_library(alut_library\n\tnames\n\talut\n\thints\n\t\"$env{openaldir}\"\n\tpath_suffixes\n\tlib\n\tlib64\n\tpaths\n\t/usr/local\n\t/opt/local\n\t/sw)"}]}, {"deps": [{"depname": "openni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindOpenNI2.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig quiet)", "confidence": "High"}, {"depname": "libusb", "version": "1.0", "version_op": "=", "unified_name": "usb", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_usb_10 libusb-1.0)", "confidence": "High"}, {"depname": "libopenni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_openni2 libopenni2)", "confidence": "High"}, {"depname": "libopenni2", "version": null, "version_op": null, "unified_name": "openni2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_openni2 quiet libopenni2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["usb-1.0"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenNI2.cmake", "content": "find_library(usb_10_library\n               names usb-1.0\n               hints ${pc_usb_10_libdir} ${pc_usb_10_library_dirs} \"${usb_10_root}\" \"$env{usb_10_root}\"\n               path_suffixes lib)"}, {"filenames": ["openni2", "libopenni2"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenNI2.cmake", "content": "find_library(openni2_library\n             names openni2      \n                   libopenni2   \n             paths \"$env{openni2_lib64}\"   \n                   \"$env{openni2_redist}\"                 \n)"}]}, {"deps": [{"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindFreeImage.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["freeimage"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFreeImage.cmake", "content": "find_library(\n\t\tfreeimage_library\n\t\tnames freeimage\n\t\tpaths\n\t\t\t$env{programfiles}/lib\n\t\t\t${freeimage_root_dir}/lib)"}, {"filenames": ["freeimage"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFreeImage.cmake", "content": "find_library(\n\t\tfreeimage_library\n\t\tnames freeimage\n\t\tpaths\n\t\t\t/usr/lib64\n\t\t\t/usr/lib\n\t\t\t/usr/local/lib64\n\t\t\t/usr/local/lib\n\t\t\t/sw/lib\n\t\t\t/opt/local/lib\n\t\t\t${freeimage_root_dir}/lib\n\t\tdoc \"the freeimage library\")"}]}, {"deps": [{"depname": "mkl", "version": null, "version_op": null, "unified_name": "mkl", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindMKL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["mkl_core"], "version": "", "fromfile": "darglein@@saiga/cmake/FindMKL.cmake", "content": "find_library(mkl_libraries_core\n        mkl_core\n        paths\n        ${mkl_dir}/lib/intel64\n        )"}, {"filenames": ["mkl_intel_lp64"], "version": "", "fromfile": "darglein@@saiga/cmake/FindMKL.cmake", "content": "find_library(mkl_libraries_lp64\n        mkl_intel_lp64\n        paths\n        ${mkl_dir}/lib/intel64\n        )"}, {"filenames": ["mkl_sequential"], "version": "", "fromfile": "darglein@@saiga/cmake/FindMKL.cmake", "content": "find_library(mkl_libraries_sequential\n        mkl_sequential\n        paths\n        ${mkl_dir}/lib/intel64\n        )"}]}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp required)", "confidence": "High"}, {"depname": "openal", "version": null, "version_op": null, "unified_name": "openal", "extractor_type": "cmake", "context": "find_package(openal quiet)", "confidence": "High"}, {"depname": "alut", "version": null, "version_op": null, "unified_name": "alut", "extractor_type": "cmake", "context": "find_package(alut quiet)", "confidence": "High"}, {"depname": "opus", "version": null, "version_op": null, "unified_name": "opus", "extractor_type": "cmake", "context": "find_package(opus quiet)", "confidence": "High"}, {"depname": "freeimage", "version": null, "version_op": null, "unified_name": "freeimage", "extractor_type": "cmake", "context": "find_package(freeimage quiet)", "confidence": "High"}, {"depname": "openmesh", "version": null, "version_op": null, "unified_name": "openmesh", "extractor_type": "cmake", "context": "find_package(openmesh quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libomp"], "version": "", "fromfile": "darglein@@saiga/cmake/Dependencies_core.cmake", "content": "find_library(omp_lib libomp path_suffixes lib)"}]}, {"deps": [{"depname": "freeimageplus", "version": null, "version_op": null, "unified_name": "freeimageplus", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindFreeImagePlus.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["freeimageplus", "freeimageplus"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFreeImagePlus.cmake", "content": "find_library( freeimageplus_library\n\t\tnames freeimageplus freeimageplus\n\t\tpaths\n\t\t${freeimage_root_dir}/lib\n\t\t${freeimage_root_dir}\n\t\tdoc \"the freeimageplus library\")"}, {"filenames": ["freeimageplus", "freeimageplus"], "version": "", "fromfile": "darglein@@saiga/cmake/FindFreeImagePlus.cmake", "content": "find_library( freeimageplus_library\n\t\tnames freeimageplus freeimageplus\n\t\tpaths\n\t\t/usr/lib64\n\t\t/usr/lib\n\t\t/usr/local/lib64\n\t\t/usr/local/lib\n\t\t/sw/lib\n\t\t/opt/local/lib\n\t\tdoc \"the freeimageplus library\")"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "glslang", "version": null, "version_op": null, "unified_name": "glslang", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindGLslang.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["glslang", "glslangd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(glslang_lib\n    names\n        glslang\n        glslangd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["oglcompiler"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(oglcompiler_lib\n    names\n        oglcompiler\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["osdependent"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(osdependent_lib\n    names\n        osdependent\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["hlsl"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(hlsl_lib\n    names\n        hlsl\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["spirv"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(spirv_lib\n    names\n        spirv\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["spvremapper"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(spirv_remapper_lib\n    names\n        spvremapper\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["glslangd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(glslang_debug_lib\n    names\n        glslangd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["oglcompilerd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(oglcompiler_debug_lib\n    names\n        oglcompilerd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["osdependentd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(osdependent_debug_lib\n    names\n        osdependentd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["hlsld"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(hlsl_debug_lib\n    names\n        hlsld\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["spirvd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(spirv_debug_lib\n    names\n        spirvd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["spvremapperd"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_library(spirv_remapper_debug_lib\n    names\n        spvremapperd\n    paths\n        /usr/local\n        /mingw64\n        /mingw32\n)"}, {"filenames": ["glslangvalidator"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLslang.cmake", "content": "find_program(glslang_validator_executable \n    names\n        glslangvalidator\n    paths\n        /usr/local\n)"}]}, {"deps": [{"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindOpenVR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["openvr_api"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpenVR.cmake", "content": "find_library(openvr_library\n    names openvr_api\n    hints\n    path_suffixes ${_libpath}\n    paths ${openvr_root_dir}\n    )"}]}, {"deps": [{"depname": "opus", "version": null, "version_op": null, "unified_name": "opus", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindOpus.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["opus"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpus.cmake", "content": "find_library(opus_library \n\tnames \n\t\topus\n    paths \n\t\t/usr/local/lib \n\t\t/usr/lib\n)"}, {"filenames": ["opusfile"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpus.cmake", "content": "find_library(opus_file_library names opusfile\n             paths /usr/local/lib /usr/lib)"}, {"filenames": ["ogg", "libogg_static"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpus.cmake", "content": "find_library(ogg_library \n\tnames \n\t\togg\n\t\tlibogg_static\n    paths \n\t\t/usr/local/lib \n\t\t/usr/lib\n)"}, {"filenames": ["celt"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpus.cmake", "content": "find_library(celt_library names celt\n             paths /usr/local/lib /usr/lib)"}, {"filenames": ["silk_common"], "version": "", "fromfile": "darglein@@saiga/cmake/FindOpus.cmake", "content": "find_library(silk_library names silk_common\n             paths /usr/local/lib /usr/lib)"}]}, {"deps": [{"depname": "egl", "version": null, "version_op": null, "unified_name": "egl", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindEGL.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${egl_names}"], "version": "", "fromfile": "darglein@@saiga/cmake/FindEGL.cmake", "content": "find_library(egl_libraries names ${egl_names}\n    hints ${pc_egl_libdir} ${pc_egl_library_dirs}\n)"}]}, {"deps": [{"depname": "xcb", "version": null, "version_op": null, "unified_name": "xcb", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindXCB.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "${comp}", "version": null, "version_op": null, "unified_name": "${comp}", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_${comp} quiet ${comp})", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${comp}"], "version": "", "fromfile": "darglein@@saiga/cmake/FindXCB.cmake", "content": "find_library(${compname}_library names ${comp}\n        hints\n        ${pc_${comp}_libdir}\n        ${pc_${comp}_library_dirs}\n        )"}]}, {"deps": [{"depname": "saiga", "version": null, "version_op": null, "unified_name": "saiga", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindSAIGA.cmake", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required quiet)", "confidence": "High"}, {"depname": "glm", "version": null, "version_op": null, "unified_name": "glm", "extractor_type": "cmake", "context": "find_package(glm required quiet)", "confidence": "High"}, {"depname": "glbinding", "version": null, "version_op": null, "unified_name": "glbinding", "extractor_type": "cmake", "context": "find_package(glbinding quiet)", "confidence": "High"}, {"depname": "glew", "version": null, "version_op": null, "unified_name": "glew", "extractor_type": "cmake", "context": "find_package(glew quiet)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["saiga"], "version": "", "fromfile": "darglein@@saiga/cmake/FindSAIGA.cmake", "content": "find_library(saiga_library \n\tnames \n\t\tsaiga\n    paths \n\t\t/usr/local/lib \n\t\t/usr/lib\n\tpath_suffixes\n\t\tsaiga/lib\n)"}]}, {"deps": [{"depname": "glfw", "version": null, "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindGLFW.cmake", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads quiet)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 quiet)", "confidence": "High"}, {"depname": "glfw", "version": null, "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "        set(glfw_version \"${glfw_version_major}.${glfw_version_minor}.${glfw_version_revision}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["glfw32"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library \n            names\n                glfw32\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/x64\"\n                \"$env{glfw_location}/lib\"\n            paths\n                \"${opengl_library_dir}\"\n                /usr/lib\n                /usr/lib/w32api\n                /usr/local/lib\n                /usr/x11r6/lib\n            doc \n                \"the glfw library\"\n        )"}, {"filenames": ["glfw32", "glfw32s", "glfw3"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library\n            names \n                glfw32 \n                glfw32s \n                glfw3\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/x64\"\n                \"${glfw_location}/lib-msvc110\"\n                \"${glfw_location}/lib-vc2012\"\n                \"$env{glfw_location}/lib\"\n                \"$env{glfw_location}/lib/x64\"\n                \"$env{glfw_location}/lib-msvc110\"\n                \"$env{glfw_location}/lib-vc2012\"\n            paths\n                \"$env{programfiles}/glfw/lib\"\n                \"${opengl_library_dir}\"\n            doc \n                \"the glfw library\"\n        )"}, {"filenames": ["glfw"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library glfw\n            names \n                glfw3\n            hints\n                \"${glfw_location}/lib\"\n                \"${glfw_location}/lib/cocoa\"\n                \"$env{glfw_location}/lib\"\n                \"$env{glfw_location}/lib/cocoa\"\n            paths\n                /usr/local/lib\n        )"}, {"filenames": ["glfw3", "glfw"], "version": "", "fromfile": "darglein@@saiga/cmake/FindGLFW.cmake", "content": "find_library( glfw_glfw_library\n            names \n                glfw3\n\t\tglfw\n            hints\n                \"${glfw_location}/lib\"\n                \"$env{glfw_location}/lib\"\n                \"${glfw_location}/lib/x11\"\n                \"$env{glfw_location}/lib/x11\"\n            paths\n                /usr/lib64\n                /usr/lib\n                /usr/lib/${cmake_library_architecture}\n                /usr/local/lib64\n                /usr/local/lib\n                /usr/local/lib/${cmake_library_architecture}\n                /usr/openwin/lib\n                /usr/x11r6/lib\n            doc \n                \"the glfw library\"\n        )"}]}, {"deps": [{"depname": "cudatoolkit", "version": "10.2", "version_op": null, "unified_name": "cudatoolkit", "extractor_type": "cmake", "context": "find_package(cudatoolkit 10.2)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "filesystem", "version": null, "version_op": null, "unified_name": "filesystem", "extractor_type": "cmake", "context": "darglein@@saiga/cmake/FindFilesystem.cmake", "confidence": "High"}, {"depname": "filesystem", "version": null, "version_op": null, "unified_name": "filesystem", "extractor_type": "cmake", "context": "find_package(filesystem)", "confidence": "High"}, {"depname": "filesystem", "version": null, "version_op": null, "unified_name": "filesystem", "extractor_type": "cmake", "context": "find_package(filesystem required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}, {"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git quiet)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "tinyeigen", "version": null, "version_op": null, "unified_name": "tinyeigen", "extractor_type": "cmake", "context": "project(tinyeigen languages cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "gphoto2", "version": null, "version_op": null, "unified_name": "gphoto2", "extractor_type": "cmake", "context": "find_package(gphoto2 required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}