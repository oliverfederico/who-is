{"target": "manhofer@@Line3Dpp", "extractors": [{"deps": [{"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required components core imgproc highgui imgcodecs)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required components core imgproc highgui)", "confidence": "High"}, {"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "find_package(eigen required)", "confidence": "High"}, {"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "find_package(cuda)", "confidence": "High"}, {"depname": "boost", "version": null, "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost required components serialization filesystem system thread)", "confidence": "High"}, {"depname": "ceres", "version": null, "version_op": null, "unified_name": "ceres", "extractor_type": "cmake", "context": "find_package(ceres)", "confidence": "High"}, {"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package(openmp)", "confidence": "High"}, {"depname": "rapidjson", "version": null, "version_op": null, "unified_name": "rapidjson", "extractor_type": "cmake", "context": "find_package(rapidjson)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "qwt", "version": null, "version_op": null, "unified_name": "qwt", "extractor_type": "cmake", "context": "manhofer@@Line3Dpp/cmake/FindQwt.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${qwt_names}"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindQwt.cmake", "content": "find_library(qwt_library\n        names ${qwt_names}\n        paths ${potential_library_paths}\n    )"}, {"filenames": ["${qwt_names_debug}"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindQwt.cmake", "content": "find_library(qwt_library_debug\n               names ${qwt_names_debug}\n               paths ${potential_library_paths}\n            )"}]}, {"deps": [{"depname": "eigen", "version": null, "version_op": null, "unified_name": "eigen", "extractor_type": "cmake", "context": "manhofer@@Line3Dpp/cmake/FindEigen.cmake", "confidence": "High"}, {"depname": "eigen3_find", "version": "2.91.0", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_find_version \"2.91.0\")", "confidence": "Low"}, {"depname": "eigen3_world", "version": "1", "version_op": null, "unified_name": "eigen3_world", "extractor_type": "cmake", "context": "  set(eigen3_world_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_major", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_major_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3_minor", "version": "1", "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "  set(eigen3_minor_version \"${cmake_match_1}\")", "confidence": "Low"}, {"depname": "eigen3", "version": null, "version_op": null, "unified_name": "eigen3", "extractor_type": "cmake", "context": "\n  set(eigen3_version ${cmake_match_1}.${cmake_match_1}.${cmake_match_1})", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cudasdk", "version": null, "version_op": null, "unified_name": "cudasdk", "extractor_type": "cmake", "context": "manhofer@@Line3Dpp/cmake/FindCUDASDK.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["cutil32", "cutil", "cutil_x86_64", "cutil_i386"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindCUDASDK.cmake", "content": "find_library(cuda_cut_library\n  names cutil32 cutil cutil_x86_64 cutil_i386\n  paths ${cuda_sdk_search_path}\n  \n  \n  path_suffixes \"c/lib\" \"common/lib\" \"lib\" \"c/common/lib\" \"common/lib\"\n  doc \"location of cutil library\"\n  no_default_path\n  )"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "manhofer@@Line3Dpp/cmake/FindCUDA.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${_names}"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindCUDA.cmake", "content": "find_library(${_var}\n    names ${_names}\n    paths \"${cuda_toolkit_root_dir}\"\n    env cuda_path\n    env cuda_lib_path\n    path_suffixes ${_cuda_64bit_lib_dir} \"${_path_ext}lib/win32\" \"${_path_ext}lib\" \"${_path_ext}libwin32\"\n    doc ${_doc}\n    no_default_path\n    )"}, {"filenames": ["${_names}"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindCUDA.cmake", "content": "find_library(${_var} names ${_names} doc ${_doc})"}, {"filenames": ["nvcc"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable\n  names nvcc\n  paths \"${cuda_toolkit_root_dir}\"\n  env cuda_path\n  env cuda_bin_path\n  path_suffixes bin bin64\n  no_default_path\n  )"}, {"filenames": ["nvcc"], "version": "", "fromfile": "manhofer@@Line3Dpp/cmake/FindCUDA.cmake", "content": "find_program(cuda_nvcc_executable nvcc)"}]}, {"deps": [{"depname": "cuda", "version": null, "version_op": null, "unified_name": "cuda", "extractor_type": "cmake", "context": "set(cuda_version @cuda_version@)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}