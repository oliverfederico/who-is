{"target": "j-cube@@multiverse", "extractors": [{"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}, {"depname": "libgit2", "version": null, "version_op": null, "unified_name": "git2", "extractor_type": "cmake", "context": "find_package(libgit2 required)", "confidence": "High"}, {"depname": "msgpack", "version": null, "version_op": null, "unified_name": "msgpack", "extractor_type": "cmake", "context": "find_package(msgpack required)", "confidence": "High"}, {"depname": "alembic", "version": null, "version_op": null, "unified_name": "alembic", "extractor_type": "cmake", "context": "project(alembic)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["uname"], "version": "", "fromfile": "j-cube@@multiverse/CMakeLists.txt", "content": "find_program(cmake_uname uname /bin /usr/bin /usr/local/bin )"}]}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["prman"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicPRMan.cmake", "content": "find_library( alembic_prman_libprman prman\n              paths\n              \"$env{prman_root}/lib/\"\n              doc \"the prman library\" )"}]}, {"deps": [{"depname": "boost", "version": "1.42.0", "version_op": null, "unified_name": "boost", "extractor_type": "cmake", "context": "find_package(boost 1.42.0 components program_options)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pythonlibs", "version": "2", "version_op": null, "unified_name": "pythonlibs", "extractor_type": "cmake", "context": "find_package ( pythonlibs 2 required )", "confidence": "High"}, {"depname": "pythoninterp", "version": "2", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package ( pythoninterp 2 required )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ilmbase", "version": null, "version_op": null, "unified_name": "ilmbase", "extractor_type": "cmake", "context": "find_package(ilmbase)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["ai"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicArnold.cmake", "content": "find_library( alembic_arnold_libarnold ai\n              paths\n              \"$env{arnold_root}/lib/\"\n              \"$env{arnold_root}/bin/\"\n              doc \"the ai library\" )"}]}, {"deps": [{"depname": "hdf5", "version": null, "version_op": null, "unified_name": "hdf5", "extractor_type": "cmake", "context": "find_package(hdf5 components c)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "find_package( openexr )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "zlib", "version": null, "version_op": null, "unified_name": "zlib", "extractor_type": "cmake", "context": "find_package(zlib required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": [{"filenames": ["foundation"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_foundation_library foundation\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where foundation.lib resides\"\n  )"}, {"filenames": ["openmaya"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_openmaya_library openmaya\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where openmaya.lib resides\" )"}, {"filenames": ["openmayaanim"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_openmayaanim_library openmayaanim\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where openmayaanim.lib resides\" )"}, {"filenames": ["openmayafx"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_openmayafx_library openmayafx\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where openmayafx.lib resides\" )"}, {"filenames": ["openmayarender"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_openmayarender_library openmayarender\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where openmayarender.lib resides\" )"}, {"filenames": ["openmayaui"], "version": "", "fromfile": "j-cube@@multiverse/cmake/AlembicMaya.cmake", "content": "find_library( maya_openmayaui_library openmayaui\n  paths\n  \"${alembic_maya_lib_root}\"\n  \"$env{maya_root}/lib\"\n  doc \"the directory where openmayaui.lib resides\" )"}]}, {"deps": [{"depname": "pyilmbase", "version": null, "version_op": null, "unified_name": "pyilmbase", "extractor_type": "cmake", "context": "find_package(pyilmbase)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "msgpack", "version": null, "version_op": null, "unified_name": "msgpack", "extractor_type": "cmake", "context": "j-cube@@multiverse/cmake/Modules/FindMsgPack.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "msgpack", "version": null, "version_op": null, "unified_name": "msgpack", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_msgpack quiet msgpack)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["msgpack"], "version": "", "fromfile": "j-cube@@multiverse/cmake/Modules/FindMsgPack.cmake", "content": "find_library(msgpack_library names msgpack\n             hints ${pc_msgpack_libdir} ${pc_msgpack_library_dirs}\n             doc \"the msgpack library\" )"}]}, {"deps": [{"depname": "ilmbase", "version": null, "version_op": null, "unified_name": "ilmbase", "extractor_type": "cmake", "context": "j-cube@@multiverse/cmake/Modules/FindIlmBase.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${component}-${_ilmbase_libs_ver}", "${component}"], "version": "", "fromfile": "j-cube@@multiverse/cmake/Modules/FindIlmBase.cmake", "content": "find_library(alembic_ilmbase_${uppercomponent}_lib\n    names\n      ${component}-${_ilmbase_libs_ver} ${component}\n    hints\n      ${_ilmbase_search_dirs}\n    path_suffixes\n      lib64 lib\n    )"}]}, {"deps": [{"depname": "libgit2", "version": null, "version_op": null, "unified_name": "git2", "extractor_type": "cmake", "context": "j-cube@@multiverse/cmake/Modules/FindLibGit2.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libgit2", "version": null, "version_op": null, "unified_name": "git2", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libgit2 quiet libgit2)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["git2", "libgit2"], "version": "", "fromfile": "j-cube@@multiverse/cmake/Modules/FindLibGit2.cmake", "content": "find_library(libgit2_library names git2 libgit2\n             hints ${pc_libgit2_libdir} ${pc_libgit2_library_dirs}\n             doc \"the libgit2 library\" )"}]}, {"deps": [{"depname": "pyilmbase", "version": null, "version_op": null, "unified_name": "pyilmbase", "extractor_type": "cmake", "context": "j-cube@@multiverse/cmake/Modules/FindPyIlmBase.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["pyimath"], "version": "", "fromfile": "j-cube@@multiverse/cmake/Modules/FindPyIlmBase.cmake", "content": "find_library(alembic_pyilmbase_pyimath_lib pyimath\n                     paths\n                     ${library_paths}\n                     doc \"the pyimath library\")"}]}, {"deps": [{"depname": "openexr", "version": null, "version_op": null, "unified_name": "openexr", "extractor_type": "cmake", "context": "j-cube@@multiverse/cmake/Modules/FindOpenEXR.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["ilmimf"], "version": "", "fromfile": "j-cube@@multiverse/cmake/Modules/FindOpenEXR.cmake", "content": "find_library( alembic_openexr_ilmimf_lib ilmimf\n              paths \n              ${library_paths}\n              doc \"the ilmimf library\" )"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "alembic_arnold_procedural_module", "version": null, "version_op": null, "unified_name": "alembic_arnold_procedural_module", "extractor_type": "cmake", "context": "project( alembic_arnold_procedural_module )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "find_package( sqlite3 )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake", "context": "j-cube@@multiverse/build/FindSQLite3.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "sqlite3", "version": null, "version_op": null, "unified_name": "sqlite3", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(_sqlite3 sqlite3)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["sqlite3"], "version": "", "fromfile": "j-cube@@multiverse/build/FindSQLite3.cmake", "content": "find_library(sqlite3_library\n    names\n      sqlite3\n    paths\n      ${_sqlite3_libdir}\n      /opt/jcube/lib\n      /usr/lib\n      /usr/local/lib\n      /opt/local/lib\n      /sw/lib\n  )"}]}, {"deps": [{"depname": "libgit2", "version": null, "version_op": null, "unified_name": "git2", "extractor_type": "cmake", "context": "find_package( libgit2 )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libmemcached", "version": null, "version_op": null, "unified_name": "memcached", "extractor_type": "cmake", "context": "find_package( libmemcached )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "libmemcached", "version": null, "version_op": null, "unified_name": "memcached", "extractor_type": "cmake", "context": "j-cube@@multiverse/build/FindLibMemCached.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package(pkgconfig)", "confidence": "High"}, {"depname": "libmemcached", "version": null, "version_op": null, "unified_name": "memcached", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(pc_libmemcached quiet libmemcached)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["libmemcached.so", "libmemcached.dylib", "libmemcached.a"], "version": "", "fromfile": "j-cube@@multiverse/build/FindLibMemCached.cmake", "content": "find_library(libmemcached_library names libmemcached.so libmemcached.dylib libmemcached.a\n             hints ${pc_libmemcached_libdir} ${pc_libmemcached_library_dirs}\n             doc \"the libmemcached library\" )"}]}, {"deps": [{"depname": "msgpack", "version": null, "version_op": null, "unified_name": "msgpack", "extractor_type": "cmake", "context": "find_package( msgpack )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "j-cube@@multiverse/build/FindJsonCpp.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["${jsoncpp_names}"], "version": "", "fromfile": "j-cube@@multiverse/build/FindJsonCpp.cmake", "content": "find_library(jsoncpp_library\n  names ${jsoncpp_names}\n  paths /opt/jcube/lib /usr/local/lib /usr/lib\n  )"}]}, {"deps": [{"depname": "jsoncpp", "version": null, "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "find_package( jsoncpp )", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}