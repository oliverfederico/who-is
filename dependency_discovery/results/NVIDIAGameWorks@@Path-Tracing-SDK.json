{"target": "NVIDIAGameWorks@@Path-Tracing-SDK", "extractors": [{"deps": [{"depname": "pathtracingsdk", "version": null, "version_op": null, "unified_name": "pathtracingsdk", "extractor_type": "cmake", "context": "project(pathtracingsdk)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "fxc", "version": null, "version_op": null, "unified_name": "fxc", "extractor_type": "cmake", "context": "find_package(fxc required)", "confidence": "High"}, {"depname": "dxcdxil", "version": null, "version_op": null, "unified_name": "dxcdxil", "extractor_type": "cmake", "context": "find_package(dxcdxil required)", "confidence": "High"}, {"depname": "dxcspirv", "version": null, "version_op": null, "unified_name": "dxcspirv", "extractor_type": "cmake", "context": "find_package(dxcspirv required)", "confidence": "High"}, {"depname": "donut", "version": null, "version_op": null, "unified_name": "donut", "extractor_type": "cmake", "context": "project(donut)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "dxcspirv", "version": null, "version_op": null, "unified_name": "dxcspirv", "extractor_type": "cmake", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindDXCspirv.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package(packagehandlestandardargs)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["dxc"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindDXCspirv.cmake", "content": "find_program(dxc_spirv_executable dxc paths\n            \"$env{vulkan_sdk}/bin\"\n            no_default_path)"}, {"filenames": ["dxc"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindDXCspirv.cmake", "content": "find_program(dxc_spirv_executable dxc paths\n            /usr/bin\n            /usr/local/bin)"}]}, {"deps": [{"depname": "fxc", "version": null, "version_op": null, "unified_name": "fxc", "extractor_type": "cmake", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindFXC.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package(packagehandlestandardargs)", "confidence": "High"}, {"depname": "fxc", "version": "10", "version_op": null, "unified_name": "fxc", "extractor_type": "cmake", "context": "\n            set(fxc_version \"${w10sdk_ver}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["fxc"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindFXC.cmake", "content": "find_program(fxc_executable fxc paths ${winsdk_paths} no_default_path)"}]}, {"deps": [{"depname": "dxcdxil", "version": null, "version_op": null, "unified_name": "dxcdxil", "extractor_type": "cmake", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindDXCdxil.cmake", "confidence": "High"}, {"depname": "packagehandlestandardargs", "version": null, "version_op": null, "unified_name": "packagehandlestandardargs", "extractor_type": "cmake", "context": "find_package(packagehandlestandardargs)", "confidence": "High"}, {"depname": "dxc_dxil", "version": "10", "version_op": null, "unified_name": "dxc_dxil", "extractor_type": "cmake", "context": "\n            set(dxc_dxil_version \"${w10sdk_ver}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["dxc"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/cmake/FindDXCdxil.cmake", "content": "find_program(dxc_dxil_executable dxc paths ${winsdk_paths} no_default_path)"}]}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen)", "confidence": "High"}, {"depname": "glfw", "version": "3.4.0", "version_op": null, "unified_name": "glfw", "extractor_type": "cmake", "context": "project(glfw version 3.4.0 languages c)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "find_package(epollshim)", "confidence": "High"}, {"depname": "x11", "version": null, "version_op": null, "unified_name": "x11", "extractor_type": "cmake", "context": "find_package(x11 required)", "confidence": "High"}, {"depname": "wayland-protocols", "version": "1.15", "version_op": ">=", "unified_name": "wayland-protocols", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland_protocols required wayland-protocols>=1.15)", "confidence": "High"}, {"depname": "wayland-client", "version": "0.2.7", "version_op": ">=", "unified_name": "wayland-client", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland required\n        wayland-client>=0.2.7\n        wayland-cursor>=0.2.7\n        wayland-egl>=0.2.7\n        xkbcommon>=0.5.0)", "confidence": "High"}, {"depname": "wayland-cursor", "version": "0.2.7", "version_op": ">=", "unified_name": "wayland-cursor", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland required\n        wayland-client>=0.2.7\n        wayland-cursor>=0.2.7\n        wayland-egl>=0.2.7\n        xkbcommon>=0.5.0)", "confidence": "High"}, {"depname": "wayland-egl", "version": "0.2.7", "version_op": ">=", "unified_name": "wayland-egl", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland required\n        wayland-client>=0.2.7\n        wayland-cursor>=0.2.7\n        wayland-egl>=0.2.7\n        xkbcommon>=0.5.0)", "confidence": "High"}, {"depname": "xkbcommon", "version": "0.5.0", "version_op": ">=", "unified_name": "xkbcommon", "extractor_type": "cmake::pkg", "context": "pkg_check_modules(wayland required\n        wayland-client>=0.2.7\n        wayland-cursor>=0.2.7\n        wayland-egl>=0.2.7\n        xkbcommon>=0.5.0)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["rt"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/src/CMakeLists.txt", "content": "find_library(rt_library rt)"}, {"filenames": ["m"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/src/CMakeLists.txt", "content": "find_library(math_library m)"}, {"filenames": ["wayland-scanner"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/src/CMakeLists.txt", "content": "find_program(wayland_scanner_executable names wayland-scanner)"}]}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "cmake_system", "version": "1", "version_op": null, "unified_name": "cmake_system", "extractor_type": "cmake", "context": "set(cmake_system_version 1)", "confidence": "Low"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "epollshim", "version": null, "version_op": null, "unified_name": "epollshim", "extractor_type": "cmake", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/CMake/modules/FindEpollShim.cmake", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["epoll-shim", "libepoll-shim"], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/CMake/modules/FindEpollShim.cmake", "content": "find_library(epollshim_libraries names epoll-shim libepoll-shim hints /usr/local/lib)"}]}, {"deps": [{"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/glfw/CMake/modules/FindOSMesa.cmake", "confidence": "High"}, {"depname": "pkgconfig", "version": null, "version_op": null, "unified_name": "pkgconfig", "extractor_type": "cmake", "context": "find_package (pkgconfig)", "confidence": "High"}, {"depname": "osmesa", "version": null, "version_op": null, "unified_name": "osmesa", "extractor_type": "cmake::pkg", "context": "pkg_check_modules (pkg_osmesa quiet osmesa)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "cmake", "version": "=2.6", "version_op": null, "unified_name": "cmake", "extractor_type": "control", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/lz4/contrib/debian/control", "confidence": "High"}, {"depname": "debhelper", "version": "=7.0.50~", "version_op": null, "unified_name": "debhelper", "extractor_type": "control", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/lz4/contrib/debian/control", "confidence": "High"}, {"depname": "cdbs", "version": "", "version_op": null, "unified_name": "cdbs", "extractor_type": "control", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/lz4/contrib/debian/control", "confidence": "High"}], "type": "control"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "meson"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [{"depname": "miniz", "version": null, "version_op": null, "unified_name": "miniz", "extractor_type": "cmake", "context": "  project(miniz)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "miniz", "version": null, "version_op": null, "unified_name": "miniz", "extractor_type": "meson", "context": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/miniz/meson.build", "confidence": "High"}], "type": "meson"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "jsoncpp", "version": "must", "version_op": null, "unified_name": "jsoncpp", "extractor_type": "cmake", "context": "project(jsoncpp         # note: version must be updated in three places when doing a release. this         # annoying process ensures that amalgamate, cmake, and meson all report the         # correct version.         # 1. ./meson.build         # 2. ./include/json/version.h         # 3. ./cmakelists.txt         # important: also update the project_soversion!!         version 1.9.5 # <major>[.<minor>[.<patch>[.<tweak>]]]         languages cxx)", "confidence": "High"}], "type": "cmake", "libs": [{"filenames": ["\"ccache\""], "version": "", "fromfile": "NVIDIAGameWorks@@Path-Tracing-SDK/donut/thirdparty/jsoncpp/CMakeLists.txt", "content": "find_program(ccache_executable \"ccache\" hints /usr/local/bin /opt/local/bin)"}]}, {"deps": [], "type": "meson"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "python3", "version": null, "version_op": null, "unified_name": "python3", "extractor_type": "cmake", "context": "find_package(python3 components interpreter)", "confidence": "High"}, {"depname": "pythoninterp", "version": "3", "version_op": null, "unified_name": "pythoninterp", "extractor_type": "cmake", "context": "find_package(pythoninterp 3)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "imguiexample", "version": null, "version_op": null, "unified_name": "imguiexample", "extractor_type": "cmake", "context": "project(imguiexample)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [{"depname": "vulkan", "version": null, "version_op": null, "unified_name": "vulkan", "extractor_type": "cmake", "context": "find_package(vulkan required)", "confidence": "High"}, {"depname": "imgui_example_glfw_vulkan", "version": null, "version_op": null, "unified_name": "imgui_example_glfw_vulkan", "extractor_type": "cmake", "context": "project(imgui_example_glfw_vulkan c cxx)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "make"}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}]}