{"target": "PlusToolkit@@PlusLib", "extractors": [{"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "git", "version": null, "version_op": null, "unified_name": "git", "extractor_type": "cmake", "context": "find_package(git)", "confidence": "High"}, {"depname": "pluslib", "version": null, "version_op": null, "unified_name": "pluslib", "extractor_type": "cmake", "context": "project(pluslib)", "confidence": ""}], "type": "cmake", "libs": [{"filenames": ["bash"], "version": "", "fromfile": "PlusToolkit@@PlusLib/CMakeLists.txt", "content": "find_program(bash_executable bash\n  hints \n    ${_git_directory}\n    $env{programfiles}/git/bin\n    $env{${_x86env}}/git/bin\n  )"}]}, {"deps": [{"depname": "vtk", "version": null, "version_op": null, "unified_name": "vtk", "extractor_type": "cmake", "context": "find_package(vtk no_module required paths ${vtk_dir} no_default_path)", "confidence": "High"}, {"depname": "itk", "version": null, "version_op": null, "unified_name": "itk", "extractor_type": "cmake", "context": "find_package (itk required paths ${itk_dir} no_default_path)", "confidence": "High"}, {"depname": "openigtlink", "version": null, "version_op": null, "unified_name": "openigtlink", "extractor_type": "cmake", "context": "find_package(openigtlink required no_module)", "confidence": "High"}, {"depname": "openigtlinkio", "version": null, "version_op": null, "unified_name": "openigtlinkio", "extractor_type": "cmake", "context": "find_package(openigtlinkio required no_module)", "confidence": "High"}, {"depname": "igsio", "version": null, "version_op": null, "unified_name": "igsio", "extractor_type": "cmake", "context": "find_package(igsio required no_module)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 required components core widgets test xml)", "confidence": "High"}, {"depname": "plus_openigtlink", "version": null, "version_op": null, "unified_name": "plus_openigtlink", "extractor_type": "cmake", "context": "\n  set(plus_openigtlink_version \"${openigtlink_version_major}.${openigtlink_version_minor}.${openigtlink_version_patch}\")", "confidence": "Low"}], "type": "cmake", "libs": [{"filenames": ["dot"], "version": "", "fromfile": "PlusToolkit@@PlusLib/src/CMakeLists.txt", "content": "find_program(doxygen_dot_executable\n    names dot\n    paths\n      \"$env{${progwin32}}/graphviz2.38/bin\"\n      \"$env{programfiles}/graphviz2.38/bin\"\n      \"$env{${progwin32}}/graphviz2.34/bin\"\n      \"$env{programfiles}/graphviz2.34/bin\"\n    doc \"graphviz dot tool for using doxygen\"\n    no_system_environment_path\n    )"}]}, {"deps": [{"depname": "seidrv", "version": null, "version_op": null, "unified_name": "seidrv", "extractor_type": "cmake", "context": "project(seidrv)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "itk", "version": null, "version_op": null, "unified_name": "itk", "extractor_type": "cmake", "context": "find_package(itk required no_module)", "confidence": "High"}, {"depname": "ransac", "version": null, "version_op": null, "unified_name": "ransac", "extractor_type": "cmake", "context": "project( ransac )", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "vtkxio", "version": null, "version_op": null, "unified_name": "vtkxio", "extractor_type": "cmake", "context": "project(vtkxio)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "mfvideocapturelibrary", "version": null, "version_op": null, "unified_name": "mfvideocapturelibrary", "extractor_type": "cmake", "context": "project(mfvideocapturelibrary)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "microntrackerinterface", "version": null, "version_op": null, "unified_name": "microntrackerinterface", "extractor_type": "cmake", "context": "project(microntrackerinterface)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "pluscalibration", "version": null, "version_op": null, "unified_name": "pluscalibration", "extractor_type": "cmake", "context": "project(pluscalibration)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openmp", "version": null, "version_op": null, "unified_name": "openmp", "extractor_type": "cmake", "context": "find_package( openmp required)", "confidence": "High"}, {"depname": "plusimageprocessing", "version": null, "version_op": null, "unified_name": "plusimageprocessing", "extractor_type": "cmake", "context": "project(plusimageprocessing)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "doxygen", "version": null, "version_op": null, "unified_name": "doxygen", "extractor_type": "cmake", "context": "find_package(doxygen required)", "confidence": "High"}], "type": "cmake", "libs": []}, {"deps": [{"depname": "plusrendering", "version": null, "version_op": null, "unified_name": "plusrendering", "extractor_type": "cmake", "context": "project(plusrendering)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "plusussimulator", "version": null, "version_op": null, "unified_name": "plusussimulator", "extractor_type": "cmake", "context": "project(plusussimulator)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "quadrosdi", "version": null, "version_op": null, "unified_name": "quadrosdi", "extractor_type": "cmake", "context": "find_package(quadrosdi required)", "confidence": "High"}, {"depname": "opengl", "version": null, "version_op": null, "unified_name": "opengl", "extractor_type": "cmake", "context": "find_package(opengl required)", "confidence": "High"}, {"depname": "qt5", "version": null, "version_op": null, "unified_name": "qt5", "extractor_type": "cmake", "context": "find_package(qt5 required components multimedia)", "confidence": "High"}, {"depname": "ndicapi", "version": null, "version_op": null, "unified_name": "ndicapi", "extractor_type": "cmake", "context": "find_package(ndicapi required no_module)", "confidence": "High"}, {"depname": "ndicapi", "version": null, "version_op": null, "unified_name": "ndicapi", "extractor_type": "cmake", "context": "find_package(ndicapi required no_module)", "confidence": "High"}, {"depname": "openhaptics", "version": null, "version_op": null, "unified_name": "openhaptics", "extractor_type": "cmake", "context": "find_package(openhaptics required)", "confidence": "High"}, {"depname": "decklinksdk", "version": null, "version_op": null, "unified_name": "decklinksdk", "extractor_type": "cmake", "context": "find_package(decklinksdk required)", "confidence": "High"}, {"depname": "opencv", "version": null, "version_op": null, "unified_name": "opencv", "extractor_type": "cmake", "context": "find_package(opencv required paths ${opencv_dir})", "confidence": "High"}, {"depname": "aruco", "version": null, "version_op": null, "unified_name": "aruco", "extractor_type": "cmake", "context": "find_package(aruco required no_module)", "confidence": "High"}, {"depname": "threads", "version": null, "version_op": null, "unified_name": "threads", "extractor_type": "cmake", "context": "find_package(threads required)", "confidence": "High"}, {"depname": "clarius", "version": null, "version_op": null, "unified_name": "clarius", "extractor_type": "cmake", "context": "find_package(clarius required)", "confidence": "High"}, {"depname": "clariusoem", "version": null, "version_op": null, "unified_name": "clariusoem", "extractor_type": "cmake", "context": "find_package(clariusoem required)", "confidence": "High"}, {"depname": "intersonsdkcxx", "version": null, "version_op": null, "unified_name": "intersonsdkcxx", "extractor_type": "cmake", "context": "find_package(intersonsdkcxx required)", "confidence": "High"}, {"depname": "intersonarraysdkcxx", "version": null, "version_op": null, "unified_name": "intersonarraysdkcxx", "extractor_type": "cmake", "context": "find_package(intersonarraysdkcxx required)", "confidence": "High"}, {"depname": "agilentmd1", "version": null, "version_op": null, "unified_name": "agilentmd1", "extractor_type": "cmake", "context": "find_package(agilentmd1 required)", "confidence": "High"}, {"depname": "tesseract", "version": null, "version_op": null, "unified_name": "tesseract", "extractor_type": "cmake", "context": "find_package(tesseract no_module required)", "confidence": "High"}, {"depname": "ovrvisionpro", "version": null, "version_op": null, "unified_name": "ovrvisionpro", "extractor_type": "cmake", "context": "find_package(ovrvisionpro required no_module)", "confidence": "High"}, {"depname": "seekcameralib", "version": null, "version_op": null, "unified_name": "seekcameralib", "extractor_type": "cmake", "context": "find_package(seekcameralib required no_module)", "confidence": "High"}, {"depname": "teq1sdk", "version": null, "version_op": null, "unified_name": "teq1sdk", "extractor_type": "cmake", "context": "find_package(teq1sdk required)", "confidence": "High"}, {"depname": "teev2sdk", "version": null, "version_op": null, "unified_name": "teev2sdk", "extractor_type": "cmake", "context": "find_package(teev2sdk required)", "confidence": "High"}, {"depname": "pcouvsdk", "version": null, "version_op": null, "unified_name": "pcouvsdk", "extractor_type": "cmake", "context": "find_package(pcouvsdk required)", "confidence": "High"}, {"depname": "daqvideosourcesdk", "version": null, "version_op": null, "unified_name": "daqvideosourcesdk", "extractor_type": "cmake", "context": "find_package(daqvideosourcesdk required)", "confidence": "High"}, {"depname": "v4l2", "version": null, "version_op": null, "unified_name": "v4l2", "extractor_type": "cmake", "context": "find_package(v4l2 required)", "confidence": "High"}, {"depname": "leapsdk", "version": "4.0", "version_op": null, "unified_name": "leapsdk", "extractor_type": "cmake", "context": "find_package(leapsdk 4.0)", "confidence": "High"}, {"depname": "openvr", "version": null, "version_op": null, "unified_name": "openvr", "extractor_type": "cmake", "context": "find_package(openvr required)", "confidence": "High"}, {"depname": "plusdatacollection", "version": null, "version_op": null, "unified_name": "plusdatacollection", "extractor_type": "cmake", "context": "project(plusdatacollection)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "plushaptics", "version": null, "version_op": null, "unified_name": "plushaptics", "extractor_type": "cmake", "context": "project(plushaptics)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "plusopenigtlink", "version": null, "version_op": null, "unified_name": "plusopenigtlink", "extractor_type": "cmake", "context": "project(plusopenigtlink)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "openigtlinkio", "version": null, "version_op": null, "unified_name": "openigtlinkio", "extractor_type": "cmake", "context": "find_package(openigtlinkio no_module required)", "confidence": "High"}, {"depname": "plusserver", "version": null, "version_op": null, "unified_name": "plusserver", "extractor_type": "cmake", "context": "project(plusserver)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "igsio", "version": null, "version_op": null, "unified_name": "igsio", "extractor_type": "cmake", "context": "find_package(igsio required)", "confidence": "High"}, {"depname": "openigtlinkio", "version": null, "version_op": null, "unified_name": "openigtlinkio", "extractor_type": "cmake", "context": "find_package(openigtlinkio no_module required)", "confidence": "High"}, {"depname": "pluscommon", "version": null, "version_op": null, "unified_name": "pluscommon", "extractor_type": "cmake", "context": "project(pluscommon)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "plusvolumereconstruction", "version": null, "version_op": null, "unified_name": "plusvolumereconstruction", "extractor_type": "cmake", "context": "project(plusvolumereconstruction)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "pluswidgets", "version": null, "version_op": null, "unified_name": "pluswidgets", "extractor_type": "cmake", "context": "project(pluswidgets)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [], "type": "cmake", "libs": []}, {"deps": [{"depname": "phidgetide", "version": null, "version_op": null, "unified_name": "phidgetide", "extractor_type": "cmake", "context": "project(phidgetide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ascensionide", "version": null, "version_op": null, "unified_name": "ascensionide", "extractor_type": "cmake", "context": "project(ascensionide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ascensionide", "version": null, "version_op": null, "unified_name": "ascensionide", "extractor_type": "cmake", "context": "project(ascensionide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "ascension3dgmide", "version": null, "version_op": null, "unified_name": "ascension3dgmide", "extractor_type": "cmake", "context": "project(ascension3dgmide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "epiphanide", "version": null, "version_op": null, "unified_name": "epiphanide", "extractor_type": "cmake", "context": "project(epiphanide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "usdigitalide", "version": null, "version_op": null, "unified_name": "usdigitalide", "extractor_type": "cmake", "context": "project(usdigitalide)", "confidence": ""}], "type": "cmake", "libs": []}, {"deps": [{"depname": "nvidiaide", "version": null, "version_op": null, "unified_name": "nvidiaide", "extractor_type": "cmake", "context": "project(nvidiaide)", "confidence": ""}], "type": "cmake", "libs": []}]}